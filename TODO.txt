- Analyze the pros and cons of creating a SQLDialect interface that allows us to reuse the same implementation of SqlCodeGenerator for the different DB engines/versions.

- Type bindings improvement:
	- Allow adding custom types.
	- Allow to specify the type of the PK/ID columns.

- Create a generic TypeResolver<T> that can be used not only in DB code generators but also in Java and TypeScript ones.

- Add support for different Oracle IDENTITY strategies:
	- CREATE SEQUENCE + DEFAULT calling nextval (default)
	- GENERATED by default on null AS IDENTITY
	- GENERATED always AS IDENTITY

- Allow to customize naming formats of sequences and constraints (PK, FK and unique).
	- Allow a function and a pattern string (which will be used in CLI and Playground).
	- Allow pattern string in "idNamingStrategy" also.
