{"version":3,"sources":["webpack://DslTest/webpack/bootstrap","webpack://DslTest/./src/dsl/generator/database/database-model/database-model-generator.ts","webpack://DslTest/./src/dsl/generator/database/sql/my-sql-code-generator.ts","webpack://DslTest/./src/dsl/parser/er-model-parser.ts","webpack://DslTest/./src/dsl/parser/statement/statement-type-guesser.ts","webpack://DslTest/./src/dsl/parser/statement/statement-types-parse-functions.ts","webpack://DslTest/./src/dsl/parser/statement/statement-types-regexes.ts","webpack://DslTest/./src/dsl/util/regex-utils.ts","webpack://DslTest/./src/dsl/util/string-utils.ts","webpack://DslTest/./src/index.ts"],"names":[],"mappings":"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","file":"dsl-test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {EntityRelationshipModel} from '../../../parser/er-model-parser';\nimport {\n\tCardinality,\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityPropertyType,\n\tRelationshipDescriptor,\n\tRelationshipMember\n} from '../../../parser/statement/statement-types-parse-functions';\nimport {capitalize} from '../../../util/string-utils';\nimport {DatabaseModel, TableColumnDescriptor, TableDescriptor, TableReferenceDescriptor} from './database-model-types';\n\nexport interface DatabaseModelGenerator {\n\tgenerateDatabaseModel(model: EntityRelationshipModel): DatabaseModel;\n}\n\nconst databaseModelGenerator: DatabaseModelGenerator = {\n\n\tgenerateDatabaseModel(model: EntityRelationshipModel): DatabaseModel {\n\n\t\tconst tables: TableDescriptor[] = [];\n\n\t\tmodel.entities\n\t\t\t\t.map(entity => generateEntityTable(entity, model))\n\t\t\t\t.forEach(sentence => tables.push(sentence));\n\n\t\tmodel.relationships\n\t\t\t\t.filter(isManyToManyRelationship)\n\t\t\t\t.map(relationship => generateRelationshipTable(relationship))\n\t\t\t\t.forEach(sentence => tables.push(sentence));\n\n\t\treturn {\n\t\t\ttables\n\t\t};\n\n\t}\n\n};\n\nexport default databaseModelGenerator;\n\nfunction generateEntityTable(entity: EntityDescriptor, model: EntityRelationshipModel): TableDescriptor {\n\n\tconst name = capitalize(entity.name);\n\tconst id = getTableIdColumnName(name);\n\n\tconst columns: TableColumnDescriptor[] = [];\n\tconst references: TableReferenceDescriptor[] = [];\n\n\tfor (const property of entity.properties) {\n\t\tcolumns.push(mapPropertyToColumn(property));\n\t}\n\n\tfor (const relationship of model.relationships) {\n\t\tif (relationship.rightMember.cardinality === Cardinality.ONE) {\n\t\t\tif (relationship.leftMember.entity === entity.name) {\n\t\t\t\treferences.push(createTableReference(relationship.rightMember));\n\t\t\t}\n\t\t} else if (relationship.leftMember.cardinality === Cardinality.ONE) {\n\t\t\tif (relationship.rightMember.entity === entity.name) {\n\t\t\t\treferences.push(createTableReference(relationship.leftMember));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tname,\n\t\tid,\n\t\tcolumns,\n\t\treferences\n\t};\n\n}\n\nfunction generateRelationshipTable(relationship: RelationshipDescriptor): TableDescriptor {\n\n\tconst name = capitalize(relationship.relationShipName);\n\tconst id = getTableIdColumnName(name);\n\n\treturn {\n\t\tname,\n\t\tid,\n\t\tcolumns: [],\n\t\treferences: [\n\t\t\tcreateTableReference(relationship.leftMember),\n\t\t\tcreateTableReference(relationship.rightMember)\n\t\t]\n\t};\n\n}\n\nfunction createTableReference(toMember: RelationshipMember): TableReferenceDescriptor {\n\treturn {\n\t\talias: toMember.entityAlias,\n\t\tcolumnName: `${toMember.entityAlias}Id`,\n\t\ttargetTableName: toMember.entity,\n\t\tnotNull: !toMember.optional\n\t};\n}\n\nfunction mapRelationshipMemberToColumn(toMember: RelationshipMember): TableColumnDescriptor {\n\treturn {\n\t\tname: toMember.entityAlias,\n\t\tnotNull: !toMember.optional,\n\t\ttype: EntityPropertyType.LONG\n\t};\n}\n\nfunction getTableIdColumnName(tableName: string) {\n\t// TODO definir diferentes estrategias\n\t// return uncapitalize(tableName) + 'Id';\n\treturn 'id';\n}\n\nfunction mapPropertyToColumn(property: EntityPropertyDescriptor): TableColumnDescriptor {\n\n\tconst {\n\t\tname,\n\t\toptional,\n\t\ttype,\n\t\tlength\n\t} = property;\n\n\treturn {\n\t\tname,\n\t\tnotNull: !optional,\n\t\ttype,\n\t\tlength\n\t};\n\n}\n\nfunction isManyToManyRelationship(relationship: RelationshipDescriptor): boolean {\n\treturn [\n\t\trelationship.leftMember,\n\t\trelationship.rightMember\n\t].every(member => member.cardinality === Cardinality.MANY);\n}\n","import {ModelCodeGenerator} from '../../types';\nimport {EntityRelationshipModel} from '../../../parser/er-model-parser';\nimport {EntityPropertyType} from '../../../parser/statement/statement-types-parse-functions';\nimport databaseModelGenerator from '../database-model/database-model-generator';\nimport {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '../database-model/database-model-types';\n\nconst INDENT: string = '    ';\n\nexport default class MySqlCodeGenerator implements ModelCodeGenerator {\n\n\tpublic generateCode(entityRelationshipModel: EntityRelationshipModel): string {\n\n\t\tconst databaseModel = databaseModelGenerator.generateDatabaseModel(entityRelationshipModel);\n\n\t\treturn databaseModel.tables\n\t\t\t\t.map(table => this.generateTable(table, databaseModel))\n\t\t\t\t.join('\\n\\n');\n\n\t}\n\n\tprivate generateTable(table: TableDescriptor, model: DatabaseModel): string {\n\n\t\tconst tableId = getTableId(table.name);\n\n\t\tconst columnLines: string[] = [\n\t\t\tthis.createIdColumn(tableId)\n\t\t];\n\n\t\tconst constraintLines: string[] = [\n\t\t\tthis.createPrimaryKeyConstraint(table, tableId)\n\t\t];\n\n\t\tfor (const column of table.columns) {\n\t\t\tcolumnLines.push(this.createColumn(column));\n\t\t}\n\n\t\tfor (const reference of table.references) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tconstraintLine\n\t\t\t} = this.createForeignColumn(table.name, reference, model);\n\n\t\t\tcolumnLines.push(columnLine);\n\t\t\tconstraintLines.push(constraintLine);\n\n\t\t}\n\n\t\tconst lines = [\n\t\t\t...columnLines,\n\t\t\t...constraintLines\n\t\t];\n\n\t\treturn [\n\t\t\t`CREATE TABLE ${table.name} (`,\n\t\t\tindentLines(lines).join(',\\n'),\n\t\t\t');'\n\t\t].join('\\n');\n\n\t}\n\n\tprivate createPrimaryKeyConstraint(table: TableDescriptor, tableId: string) {\n\t\treturn `CONSTRAINT ${table.name}_pk PRIMARY KEY (${tableId})`;\n\t}\n\n\tprivate createIdColumn(tableId: string) {\n\n\t\tconst columnCode = this.createColumn({\n\t\t\tname: tableId,\n\t\t\ttype: EntityPropertyType.LONG,\n\t\t\tnotNull: true\n\t\t});\n\n\t\treturn columnCode + ' AUTO_INCREMENT';\n\n\t}\n\n\tprivate createColumn(column: TableColumnDescriptor) {\n\n\t\tconst {\n\t\t\tname,\n\t\t\tnotNull,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [];\n\t\tlineParts.push(name);\n\n\t\tconst mappedType = mapPropertyTypeToSqlType(type);\n\n\t\tif (length) {\n\t\t\tlineParts.push(`${type}(${length})`);\n\t\t} else {\n\t\t\tlineParts.push(type);\n\t\t}\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate createForeignColumn(sourceTableName: string, reference: TableReferenceDescriptor, model: DatabaseModel) {\n\n\t\tconst column: TableColumnDescriptor = {\n\t\t\tname: reference.columnName,\n\t\t\ttype: EntityPropertyType.LONG,\n\t\t\tnotNull: reference.notNull\n\t\t};\n\n\t\treturn {\n\t\t\tcolumnLine: this.createColumn(column),\n\t\t\tconstraintLine: this.createForeignKey(sourceTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKey(sourceTableName: string, reference: TableReferenceDescriptor) {\n\t\treturn `CONSTRAINT ${sourceTableName}_${reference.alias}_fk FOREIGN KEY (${reference.columnName})`\n\t\t\t\t+ ` REFERENCES ${reference.targetTableName} (${getTableId(reference.targetTableName)})`;\n\t}\n\n}\n\nfunction indentLines(lines: string[]) {\n\treturn lines.map(e => INDENT + e);\n}\n\nfunction getTableId(entityName: string) {\n\t// return uncapitalize(entityName) + 'Id';\n\treturn 'id';\n}\n\nfunction mapPropertyTypeToSqlType(type: EntityPropertyType): string {\n\n\tconst typesMap: Record<string, string> = {\n\t\t[EntityPropertyType.TEXT]: 'VARCHAR',\n\t\t[EntityPropertyType.LONG]: 'BIGINT',\n\t\t[EntityPropertyType.INT]: 'INT',\n\t\t[EntityPropertyType.DECIMAL]: 'DECIMAL',\n\t\t[EntityPropertyType.BOOLEAN]: 'BOOLEAN',\n\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t[EntityPropertyType.TIME]: 'TIME',\n\t\t[EntityPropertyType.DATETIME]: 'TIMESTAMP'\n\t};\n\n\tif (!typesMap.hasOwnProperty(type)) {\n\t\tthrow new Error('Unsupported type: ' + type);\n\t}\n\n\treturn typesMap[type];\n\n}\n","import {\n\tBaseDescriptor,\n\tEntityDescriptor,\n\tparseEntityNameStatement,\n\tparseEntityPropertyStatement,\n\tparseMetadataStatement,\n\tparseRelationshipStatement,\n\tRelationshipDescriptor\n} from './statement/statement-types-parse-functions';\nimport {guessStatementType, StatementType} from './statement/statement-type-guesser';\n\nexport interface EntityRelationshipModel {\n\tentities: EntityDescriptor[];\n\trelationships: RelationshipDescriptor[];\n}\n\nexport function parseEntityRelationshipModel(code: string): EntityRelationshipModel {\n\n\tconst lines = code.split('\\n');\n\n\tconst entities: EntityDescriptor[] = [];\n\tconst relationships: RelationshipDescriptor[] = [];\n\n\tlet lastDescriptorRead: BaseDescriptor | null = null;\n\tlet parsingEntity = false;\n\n\tlines.forEach(line => {\n\n\t\tconst statementType = guessStatementType(line);\n\n\t\tswitch (statementType) {\n\t\t\tcase StatementType.ENTITY_NAME:\n\t\t\t\tconst entityDescriptor = {\n\t\t\t\t\tname: parseEntityNameStatement(line),\n\t\t\t\t\tproperties: [],\n\t\t\t\t\tmetadata: []\n\t\t\t\t};\n\t\t\t\tentities.push(entityDescriptor);\n\t\t\t\tlastDescriptorRead = entityDescriptor;\n\t\t\t\tparsingEntity = true;\n\t\t\t\tbreak;\n\t\t\tcase StatementType.ENTITY_PROPERTY:\n\t\t\t\tif (!parsingEntity) {\n\t\t\t\t\tthrow new Error('Unexpected entity property statement');\n\t\t\t\t}\n\t\t\t\tconst lastEntity = entities[entities.length - 1];\n\t\t\t\tconst entityPropertyDescriptor = parseEntityPropertyStatement(line);\n\t\t\t\tlastEntity.properties.push(entityPropertyDescriptor);\n\t\t\t\tlastDescriptorRead = entityPropertyDescriptor;\n\t\t\t\tbreak;\n\t\t\tcase StatementType.RELATIONSHIP:\n\t\t\t\tconst relationshipDescriptor = parseRelationshipStatement(line);\n\t\t\t\trelationships.push(relationshipDescriptor);\n\t\t\t\tlastDescriptorRead = relationshipDescriptor;\n\t\t\t\tparsingEntity = false;\n\t\t\t\tbreak;\n\t\t\tcase StatementType.METADATA:\n\t\t\t\tif (lastDescriptorRead == null) {\n\t\t\t\t\tthrow new Error('Unexpected metadata statement');\n\t\t\t\t}\n\t\t\t\tconst metadata = parseMetadataStatement(line);\n\t\t\t\tlastDescriptorRead.metadata.push(metadata);\n\t\t\t\tbreak;\n\t\t\tcase StatementType.BLANK_LINE:\n\t\t\tcase StatementType.COMMENT:\n\t\t\t\t// Ignore\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown statement type: ' + statementType);\n\t\t}\n\n\t});\n\n\treturn validateModel({\n\t\tentities,\n\t\trelationships\n\t});\n\n}\n\nfunction validateModel(model: EntityRelationshipModel) {\n\n\tconst entityNames = model.entities.map(e => e.name);\n\n\tmodel.relationships.forEach(r => {\n\t\tif (!entityNames.includes(r.leftMember.entity)) {\n\t\t\tthrow new Error(`Uknown entity in relationship's left side: ${r.leftMember.entity}`);\n\t\t}\n\t\tif (!entityNames.includes(r.rightMember.entity)) {\n\t\t\tthrow new Error(`Uknown entity in relationship's right side: ${r.rightMember.entity}`);\n\t\t}\n\t});\n\n\treturn model;\n\n}\n","import {\n\tENTITY_NAME_LINE_REGEX,\n\tENTITY_PROPERTY_LINE_REGEX,\n\tMETADATA_LINE_REGEX,\n\tRELATIONSHIP_LINE_REGEX\n} from './statement-types-regexes';\n\nexport enum StatementType {\n\tENTITY_NAME = 'entityName',\n\tENTITY_PROPERTY = 'entityProperty',\n\tRELATIONSHIP = 'relationship',\n\tMETADATA = 'metadata',\n\tCOMMENT = 'comment',\n\tBLANK_LINE = 'blankLine',\n\tUNKNOWN = 'unknown'\n}\n\nexport function guessStatementType(line: string): StatementType {\n\tif (ENTITY_NAME_LINE_REGEX.test(line)) {\n\t\treturn StatementType.ENTITY_NAME;\n\t} else if (ENTITY_PROPERTY_LINE_REGEX.test(line)) {\n\t\treturn StatementType.ENTITY_PROPERTY;\n\t} else if (RELATIONSHIP_LINE_REGEX.test(line)) {\n\t\treturn StatementType.RELATIONSHIP;\n\t} else if (METADATA_LINE_REGEX.test(line)) {\n\t\treturn StatementType.METADATA;\n\t} else if (isBlankLine(line)) {\n\t\treturn StatementType.BLANK_LINE;\n\t} else if (isCommentLine(line)) {\n\t\treturn StatementType.COMMENT;\n\t} else {\n\t\treturn StatementType.UNKNOWN;\n\t}\n}\n\nfunction isBlankLine(line: string) {\n\treturn line.trim().length === 0;\n}\n\nfunction isCommentLine(line: string) {\n\treturn line.trim()[0] === '#';\n}\n","import {capitalize, uncapitalize} from '../../util/string-utils';\nimport {\n\tENTITY_NAME_LINE_REGEX,\n\tENTITY_PROPERTY_LINE_REGEX,\n\tMETADATA_LINE_REGEX,\n\tRELATIONSHIP_LINE_REGEX\n} from './statement-types-regexes';\n\nexport enum Cardinality {\n\tMANY = 'many',\n\tONE = 'one'\n}\n\nexport enum Direction {\n\tLEFT = 'left',\n\tRIGHT = 'right',\n\tBOTH = 'both'\n}\n\nexport interface BaseDescriptor {\n\tmetadata: Metadata[];\n}\n\nexport interface RelationshipDescriptor extends BaseDescriptor {\n\tleftMember: RelationshipMember;\n\trightMember: RelationshipMember;\n\tdirection: Direction;\n\trelationShipName: string;\n}\n\nexport interface RelationshipMember {\n\tentity: string;\n\tentityAlias: string;\n\tcardinality: Cardinality;\n\toptional: boolean;\n}\n\nexport interface EntityDescriptor extends BaseDescriptor {\n\tname: string;\n\tproperties: EntityPropertyDescriptor[];\n}\n\nexport interface EntityPropertyDescriptor extends BaseDescriptor {\n\tname: string;\n\toptional: boolean;\n\ttype: EntityPropertyType;\n\tlength?: number;\n}\n\nexport enum EntityPropertyType {\n\tTEXT = 'text',\n\tLONG = 'long',\n\tINT = 'int',\n\tDECIMAL = 'decimal',\n\tBOOLEAN = 'bool',\n\tDATE = 'date',\n\tTIME = 'time',\n\tDATETIME = 'datetime'\n}\n\nexport interface Metadata {\n\tkey: string;\n\tvalue: string;\n}\n\nexport function parseEntityNameStatement(line: string): string {\n\n\tconst result = ENTITY_NAME_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new Error('Syntax error');\n\t}\n\n\tconst [entityName] = result;\n\n\treturn entityName;\n\n}\n\nexport function parseEntityPropertyStatement(line: string): EntityPropertyDescriptor {\n\n\tconst result = ENTITY_PROPERTY_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new Error('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tname,\n\t\toptionalModifier,\n\t\ttype,\n\t\tlength\n\t] = result;\n\n\tconst mappedType = type.toLowerCase() as EntityPropertyType;\n\n\tif (!Object.values(EntityPropertyType).includes(mappedType)) {\n\t\tthrow new Error('Unknown type: ' + type);\n\t}\n\n\treturn {\n\t\tname,\n\t\toptional: optionalModifier === '?',\n\t\ttype: mappedType,\n\t\tlength: length ? parseInt(length, 10) : undefined,\n\t\tmetadata: []\n\t};\n\n}\n\nexport function parseRelationshipStatement(line: string): RelationshipDescriptor {\n\n\tconst result = RELATIONSHIP_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new Error('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tleftEntity,\n\t\tleftEntityAlias = uncapitalize(leftEntity),\n\t\tleftCardinality,\n\t\tdirection,\n\t\trightCardinality,\n\t\trightEntity,\n\t\trightEntityAlias = uncapitalize(rightEntity),\n\t\trelationShipName = `${leftEntity}${capitalize(rightEntity)}`\n\t] = result;\n\n\treturn {\n\t\tleftMember: {\n\t\t\tentity: leftEntity,\n\t\t\tentityAlias: leftEntityAlias,\n\t\t\tcardinality: leftCardinality === '*' ? Cardinality.MANY : Cardinality.ONE,\n\t\t\toptional: leftCardinality === '?'\n\t\t},\n\t\trightMember: {\n\t\t\tentity: rightEntity,\n\t\t\tentityAlias: rightEntityAlias,\n\t\t\tcardinality: rightCardinality === '*' ? Cardinality.MANY : Cardinality.ONE,\n\t\t\toptional: rightCardinality === '?'\n\t\t},\n\t\tdirection: direction === '->' ? Direction.RIGHT : (direction === '<-' ? Direction.LEFT : Direction.BOTH),\n\t\trelationShipName,\n\t\tmetadata: []\n\t};\n\n}\n\nexport function parseMetadataStatement(line: string): Metadata {\n\n\tconst result = METADATA_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new Error('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tkey,\n\t\tvalue\n\t] = result;\n\n\treturn {\n\t\tkey,\n\t\tvalue\n\t};\n\n}\n","import {joinRegExps} from '../../util/regex-utils';\n\nconst IDENTIFIER_REGEX = /[a-zA-Z_][a-zA-Z_0-9]*/;\n\n// Entity name\n\nexport const ENTITY_NAME_LINE_REGEX = new RegExp(`^${IDENTIFIER_REGEX.source}$`);\n\n// Entity property\n\nconst PROPERTY_NAME_REGEX = new RegExp(`(${IDENTIFIER_REGEX.source})`);\nconst OPTIONAL_PROPERTY_MODIFIER_REGEX = new RegExp(`(\\\\?)?`);\n\nconst PROPERTY_TYPE_NAME_REGEX = new RegExp(`(${IDENTIFIER_REGEX.source})`);\nconst PROPERTY_TYPE_LENGTH_REGEX = new RegExp(`(?:\\\\((\\\\d*)\\\\))?`);\n\nconst ENTITY_PROPERTY_REGEX = joinRegExps(PROPERTY_NAME_REGEX, OPTIONAL_PROPERTY_MODIFIER_REGEX, /\\s+/, PROPERTY_TYPE_NAME_REGEX, PROPERTY_TYPE_LENGTH_REGEX);\n\nexport const ENTITY_PROPERTY_LINE_REGEX = new RegExp(`^\\\\s*${ENTITY_PROPERTY_REGEX.source}$`);\n\n// Relationship\n\nconst DIRECTION_REGEX = /(<-|->|<->)/;\nconst CARDINALITY_REGEX = /([?1*])?/;\nconst DIRECTION_AND_CARDINALITY_REGEX = joinRegExps(CARDINALITY_REGEX, DIRECTION_REGEX, CARDINALITY_REGEX);\n\nconst ENTITY_AND_ALIAS_REGEX = new RegExp(`(${IDENTIFIER_REGEX.source})(?:\\\\s+(${IDENTIFIER_REGEX.source}))?`);\n\nexport const RELATIONSHIP_LINE_REGEX = new RegExp(`^${ENTITY_AND_ALIAS_REGEX.source}\\\\s*?${DIRECTION_AND_CARDINALITY_REGEX.source}\\\\s*?${ENTITY_AND_ALIAS_REGEX.source}(?:\\\\s+\\\\((${IDENTIFIER_REGEX.source})\\\\))?$`);\n\n// Metadata\n\nconst METADATA_VALUE_REGEX = new RegExp(`(.*)`);\nconst METADATA_ENTRY_REGEX = new RegExp(`-\\\\s*(${IDENTIFIER_REGEX.source})\\\\s*:\\\\s*${METADATA_VALUE_REGEX.source}\\\\s*`);\n\nexport const METADATA_LINE_REGEX = new RegExp(`^\\\\s*${METADATA_ENTRY_REGEX.source}$`);\n","export function escapeRegExp(text: string) {\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function joinRegExps(...regexes: (RegExp | string)[]): RegExp {\n\n    const source = regexes\n        .map((e): string => {\n            if (typeof e === 'string') {\n                return escapeRegExp(e);\n            } else {\n                return e.source\n            }\n        })\n        .join('');\n\n    return new RegExp(source);\n\n}\n","export function capitalize(text: string) {\n    return text[0].toUpperCase() + text.substring(1);\n}\n\nexport function uncapitalize(text: string) {\n    return text[0].toLowerCase() + text.substring(1);\n}\n","import {EntityRelationshipModel, parseEntityRelationshipModel} from './dsl/parser/er-model-parser';\nimport {ModelCodeGenerator} from './dsl/generator/types';\nimport MySqlCodeGenerator from './dsl/generator/database/sql/my-sql-code-generator';\n\n// [\n// \t'User follower *<->* User followed (a)',\n// \t'User->Shift',\n// ].map(parseRelationshipStatement).forEach(e => console.log(e));\n//\n// [\n// \t'User',\n// \t'Shift',\n// ].map(parseEntityNameStatement).forEach(e => console.log(e));\n//\n// [\n// \t'  username text(50)',\n// \t'  name text(50)',\n// \t'  birthday? date',\n// \t'  registrationDate datetime()',\n// \t'  active bool',\n// ].map(parseEntityPropertyStatement).forEach(e => console.log(e));\n\n// const model = parseEntityRelationshipModel(`\n//\n// User\n// \tusername text(50)\n// \tname text(50)\n// \tbirthday? date\n// \tregistrationDate datetime\n// \tactive bool\n//\n// # comment\n// Shift\n// \tfromTime time\n// \t# other comment :)\n// \ttoTime time\n//\n// Country\n// \tcode text(5)\n// \tname text(100)\n//\n// User ->? Shift\n// User people *-> Country\n//\n// User follower *<->* User follow (Follows)\n//\n// `);\n\nconst model: EntityRelationshipModel = parseEntityRelationshipModel(`\n\nUser\n\tusername text(50)\n\tname text(50)\n\tbirthday? date\n\tactive bool\n\nCountry\n\tcode text(5)\n\tname text(100)\n\nUser *-> Country\n\nUser ->? Country alternativeCountry\n\nPermission\n\t- permissionTableMeta: el valor de la meta\n\tcode text(30)\n\t\t- codeColumnMeta1: 1\n\t\t- codeColumnMeta2: false\n\tdescription text(200)\n\nUser *<->* Permission\n\n`);\n\nconst modelCodeGenerator: ModelCodeGenerator = new MySqlCodeGenerator();\n// const modelCodeGenerator: ModelCodeGenerator = new JavaCodeGenerator();\n\n// console.log(JSON.stringify(model, null, 4));\nconsole.log(modelCodeGenerator.generateCode(model));\n// console.log(JSON.stringify(databaseModelGenerator.generateDatabaseModel(model), null, 4));\n// console.log(JSON.stringify(classModelGenerator.generateClassModel(model), null, 4));\n"],"sourceRoot":""}