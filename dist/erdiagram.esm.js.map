{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/graphre/dist/graphre.js","webpack:///./node_modules/graphre/index.js","webpack:///./node_modules/nomnoml/dist/nomnoml.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/pluralize/pluralize.js","webpack:///./node_modules/process/browser.js","webpack:///./src/main/erdiagram/common/config/AbstractComponentConfigManager.ts","webpack:///./src/main/erdiagram/common/config/exports.ts","webpack:///./src/main/erdiagram/common/exports.ts","webpack:///./src/main/erdiagram/exports.ts","webpack:///./src/main/erdiagram/generator/common/case-format/AbstractCamelCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/AbstractUnderscoreCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/CapitalizedUnderscoreCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/CaseConverter.ts","webpack:///./src/main/erdiagram/generator/common/case-format/CaseInsensitiveUnderscoreCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/LowerCamelCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/LowerUnderscoreCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/StandardCaseFormats.ts","webpack:///./src/main/erdiagram/generator/common/case-format/UpperCamelCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/UpperUnderscoreCaseFormat.ts","webpack:///./src/main/erdiagram/generator/common/case-format/exports.ts","webpack:///./src/main/erdiagram/generator/common/exports.ts","webpack:///./src/main/erdiagram/generator/common/id-naming-strategy/StandardIdNamingStrategies.ts","webpack:///./src/main/erdiagram/generator/common/id-naming-strategy/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/EntityRelationshipModelToDatabaseCodeConverter.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/MySqlDatabaseModelToCodeConverter.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/column/MySqlColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/column/MySqlForeignColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/column/MySqlIdColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/config/MysqlDatabaseModelToCodeConverterConfigManager.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/config/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/mysql/type/MySqlTypeResolver.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/OracleDatabaseModelToCodeConverter.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/column/OracleColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/column/OracleForeignColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/column/OracleIdColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/config/OracleDatabaseModelToCodeConverterConfigManager.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/config/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/oracle/type/OracleTypeResolver.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/SqlServerDatabaseModelToCodeConverter.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerForeignColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerIdColumnCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/config/SqlServerDatabaseModelToCodeConverterConfigManager.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/config/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/exports.ts","webpack:///./src/main/erdiagram/generator/database/code-converter/sqlserver/type/SqlServerTypeResolver.ts","webpack:///./src/main/erdiagram/generator/database/exports.ts","webpack:///./src/main/erdiagram/generator/database/model/DatabaseModelGenerator.ts","webpack:///./src/main/erdiagram/generator/database/model/config/DatabaseModelGeneratorConfigManager.ts","webpack:///./src/main/erdiagram/generator/database/model/config/exports.ts","webpack:///./src/main/erdiagram/generator/database/model/exports.ts","webpack:///./src/main/erdiagram/generator/diagram/exports.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/EntityRelationshipModelToNomnomlCodeConverter.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/NomnomlDiagramGenerator.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/entity/EntityCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/entity/EntityIdentifierPropertyCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/entity/EntityPropertyCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/exports.ts","webpack:///./src/main/erdiagram/generator/diagram/nomnoml/relationship/RelationshipCodeGenerator.ts","webpack:///./src/main/erdiagram/generator/exports.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/EntityRelationshipModelToClassCodeConverter.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/exports.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/JavaClassModelToCodeConverter.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/config/JavaClassModelToCodeConverterConfigManager.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/config/exports.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/exports.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/type/JavaParameterizedType.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/type/JavaType.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/java/type/parseJavaType.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/TypeScriptClassModelToCodeConverter.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/config/TypeScriptClassModelToCodeConverterConfigManager.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/config/exports.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/exports.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptParameterizedType.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptType.ts","webpack:///./src/main/erdiagram/generator/oop/code-converter/typescript/type/parseTypeScriptType.ts","webpack:///./src/main/erdiagram/generator/oop/exports.ts","webpack:///./src/main/erdiagram/generator/oop/model/ClassModelGenerator.ts","webpack:///./src/main/erdiagram/generator/oop/model/config/ClassModelGeneratorConfigManager.ts","webpack:///./src/main/erdiagram/generator/oop/model/config/exports.ts","webpack:///./src/main/erdiagram/generator/oop/model/exports.ts","webpack:///./src/main/erdiagram/parser/EntityRelationshipModelParser.ts","webpack:///./src/main/erdiagram/parser/ParsedModelToPublicModelConverter.ts","webpack:///./src/main/erdiagram/parser/config/EntityRelationshipModelParserConfigManager.ts","webpack:///./src/main/erdiagram/parser/config/exports.ts","webpack:///./src/main/erdiagram/parser/entity-relationship-model-types.ts","webpack:///./src/main/erdiagram/parser/exports.ts","webpack:///./src/main/erdiagram/parser/parse-errors.ts","webpack:///./src/main/erdiagram/parser/statement/statement-type-guesser.ts","webpack:///./src/main/erdiagram/parser/statement/statement-types-parse-functions.ts","webpack:///./src/main/erdiagram/parser/statement/statement-types-regexes.ts","webpack:///./src/main/erdiagram/parser/validator/ParsedEntityRelationshipModelValidator.ts","webpack:///./src/main/erdiagram/util/array-utils.ts","webpack:///./src/main/erdiagram/util/indent-utils.ts","webpack:///./src/main/erdiagram/util/map-utils.ts","webpack:///./src/main/erdiagram/util/record-utils.ts","webpack:///./src/main/erdiagram/util/regex-utils.ts","webpack:///./src/main/erdiagram/util/string-utils.ts","webpack:///./src/main/module-entry.ts"],"names":[],"mappings":"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ACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,8DAAgB;;;;;;;;;;;;;;;;;;;;;;;ACtBzC,CAAC;AACD,MAAM,KAA0B;AAChC,8BAA8B,mBAAO,CAAC,gDAAS;AAC/C;AACA,CAAC;AACD;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,0BAA0B;AAC3B;AACA,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0CAA0C,gBAAgB;AAC1D;AACA,mCAAmC,+CAA+C;AAClF;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mIAAmI,YAAY,EAAE,iCAAiC,YAAY,EAAE;AAChM,iLAAiL,YAAY,EAAE;AAC/L,iIAAiI,YAAY,EAAE;AAC/I,qLAAqL,YAAY,EAAE;AACnM,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,8BAA8B,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,mBAAO,CAAC,0DAAI;AAC7B,mBAAmB,mBAAO,CAAC,qDAAM;AACjC;AACA;AACA;AACA,oEAAoE,mBAAmB;AACvF;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,sCAAsC,EAAE;AAC7E,qCAAqC,yCAAyC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sDAAsD,gCAAgC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ,QAAQ,kBAAkB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D,mCAAmC;AACnC,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yDAAyD,yBAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB,GAAG,qBAAqB;AAC9E;AACA;AACA,iCAAiC,aAAa,GAAG,iBAAiB;AAClE;AACA;AACA;AACA,aAAa;AACb;AACA,wDAAwD,mBAAmB,EAAE;AAC7E,oDAAoD,sBAAsB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6DAA6D,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAkD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,IAAI;AAC3E;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB,EAAE;AAC1D,oCAAoC,qBAAqB,EAAE;AAC3D,qCAAqC,sBAAsB,EAAE;AAC7D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,yCAAyC,mBAAmB,EAAE;AAC9D,2CAA2C,qBAAqB,EAAE;AAClE,yCAAyC,mBAAmB,EAAE;AAC9D,yCAAyC,mBAAmB,EAAE;AAC9D,2CAA2C,qBAAqB,EAAE;AAClE,yCAAyC,mBAAmB,EAAE;AAC9D,oCAAoC,wCAAwC,EAAE;AAC9E,wCAAwC,4CAA4C,EAAE;AACtF,uCAAuC,2CAA2C,EAAE;AACpF,qCAAqC,yCAAyC,EAAE;AAChF,0CAA0C,8CAA8C,EAAE;AAC1F,qCAAqC,yCAAyC,EAAE;AAChF,sCAAsC,0CAA0C,EAAE;AAClF,iDAAiD,EAAE;AACnD,mCAAmC,uCAAuC,EAAE;AAC5E,oCAAoC,wCAAwC,EAAE;AAC9E,0CAA0C,8CAA8C,EAAE;AAC1F,qCAAqC,yCAAyC,EAAE;AAChF,wCAAwC,4CAA4C;AACpF;AACA;AACA;AACA,KAAK,oDAAoD;AACzD,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,oCAAoC;AACpC,oCAAoC;AACpC,sCAAsC;AACtC,sCAAsC;AACtC;AACA,8BAA8B,2OAA2O,4iBAA4iB,gBAAgB;AACr0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B,gDAAgD;AAC1E;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B,gDAAgD;AAC1E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,kBAAkB,EAAE;AACjE;AACA;AACA,gCAAgC,gDAAgD;AAChF,gCAAgC,gDAAgD;AAChF;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA,oCAAoC;AACpC;AACA;AACA,iBAAiB;AACjB,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU,EAAE;AAChD,qCAAqC,UAAU,EAAE;AACjD,oCAAoC,EAAE;AACtC;AACA,iDAAiD,iCAAiC;AAClF,iBAAiB;AACjB;AACA;AACA;AACA,mDAAmD;AACnD;AACA,yBAAyB;AACzB;AACA;AACA,sDAAsD,2DAA2D;AACjH;AACA,iBAAiB;AACjB;AACA,kDAAkD,qCAAqC;AACvF,iBAAiB;AACjB;AACA,+CAA+C,wDAAwD;AACvG,iBAAiB;AACjB;AACA,+CAA+C,0CAA0C;AACzF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,+CAA+C,QAAQ;AACvD,iBAAiB;AACjB;AACA,gCAAgC,6DAA6D;AAC7F;AACA;AACA,yDAAyD;AACzD;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,iBAAiB;AACjB,yCAAyC,kBAAkB,uBAAuB,EAAE;AACpF,2CAA2C,kBAAkB,yBAAyB,EAAE;AACxF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,oCAAoC,EAAE;AACtC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oEAAoE,iDAAiD,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,oDAAoD;AACzD,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,oDAAoD;AACzD,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD,EAAE;AAC3F,kCAAkC,SAAS,8BAA8B,EAAE;AAC3E,mCAAmC,SAAS,8BAA8B,EAAE;AAC5E,wCAAwC,SAAS,oCAAoC,EAAE;AACvF,+BAA+B,yCAAyC,EAAE;AAC1E,qCAAqC,0DAA0D,EAAE;AACjG,+BAA+B,SAAS,mBAAmB;AAC3D;AACA,KAAK,oDAAoD;AACzD,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA,sCAAsC,kBAAkB,GAAG,6BAA6B;AACxF,mCAAmC,kBAAkB,GAAG,eAAe,GAAG,eAAe;AACzF,oCAAoC,kBAAkB,GAAG,eAAe,GAAG,eAAe;AAC1F,mCAAmC,kBAAkB,GAAG,2BAA2B;AACnF,sCAAsC,qBAAqB,GAAG,2BAA2B,GAAG,eAAe;AAC3G,iCAAiC,6BAA6B,IAAI;AAClE,mCAAmC,kBAAkB,IAAI;AACzD,oCAAoC,gCAAgC,IAAI;AACxE,mCAAmC,kBAAkB,GAAG,eAAe;AACvE,sCAAsC,kBAAkB,GAAG,gCAAgC;AAC3F,mCAAmC,iBAAiB,IAAI;AACxD,kCAAkC,iBAAiB,IAAI;AACvD,qCAAqC,oBAAoB,IAAI;AAC7D,sCAAsC,qBAAqB,IAAI;AAC/D,uCAAuC,gCAAgC,GAAG,eAAe;AACzF,oCAAoC,mBAAmB,IAAI;AAC3D,mCAAmC,+BAA+B,IAAI;AACtE,mCAAmC,sBAAsB,GAAG,eAAe;AAC3E,mCAAmC,kBAAkB,GAAG,2BAA2B;AACnF,yCAAyC,wBAAwB,IAAI;AACrE,qCAAqC,oBAAoB,GAAG,eAAe,GAAG,eAAe;AAC7F;AACA;AACA,8EAA8E,gBAAgB,EAAE;AAChG,2EAA2E,iBAAiB,EAAE;AAC9F;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa,GAAG,sBAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH,gBAAgB,EAAE;AACzI,oGAAoG,iBAAiB,EAAE;AACvH;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B,GAAG,uCAAuC;AAC7G;AACA,SAAS;AACT;AACA;AACA,kFAAkF,gBAAgB,EAAE;AACpG,+EAA+E,iBAAiB,EAAE;AAClG;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA,iFAAiF,gBAAgB,EAAE;AACnG,8EAA8E,iBAAiB,EAAE;AACjG;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,uCAAuC,oEAAoE;AAC3G,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0CAA0C;AACnE,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B,iBAAiB,qBAAqB;AACtC,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,gBAAgB,EAAE;AACnG,8EAA8E,iBAAiB,EAAE;AACjG;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0FAA0F;AACnH,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,yBAAyB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,gBAAgB,EAAE;AAC3I,yEAAyE,iBAAiB,EAAE;AAC5F;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB,GAAG,yBAAyB;AACvE,yCAAyC,UAAU,0BAA0B,GAAG,mCAAmC,EAAE,EAAE,gCAAgC,UAAU,4BAA4B,GAAG,qCAAqC,EAAE,EAAE;AACzO;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,mBAAmB,GAAG,2BAA2B;AACtE,qBAAqB,2BAA2B,GAAG,2BAA2B;AAC9E,qBAAqB,4CAA4C;AACjE,iBAAiB,oCAAoC;AACrD,iBAAiB,4CAA4C;AAC7D,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B,GAAG,wCAAwC;AAC1F;AACA,iBAAiB,uCAAuC;AACxD,iBAAiB;AACjB;AACA,uBAAuB,+BAA+B;AACtD,uBAAuB,6CAA6C;AACpE;AACA,SAAS;AACT;AACA,uBAAuB,uBAAuB;AAC9C,SAAS;AACT;AACA,sBAAsB,oCAAoC;AAC1D;AACA,sBAAsB,oCAAoC;AAC1D,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,iBAAiB,8BAA8B;AAC/C,iBAAiB,0BAA0B;AAC3C,iBAAiB,yDAAyD;AAC1E,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,iBAAiB,aAAa;AAC9B,iBAAiB,2CAA2C;AAC5D,iBAAiB,2CAA2C;AAC5D,iBAAiB,wCAAwC;AACzD,iBAAiB,2BAA2B;AAC5C,iBAAiB;AACjB;AACA;AACA,iBAAiB,2CAA2C;AAC5D,iBAAiB,4DAA4D;AAC7E,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C,iBAAiB,aAAa;AAC9B,iBAAiB,iBAAiB;AAClC,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,iBAAiB,8BAA8B;AAC/C,iBAAiB,0BAA0B;AAC3C,iBAAiB,wCAAwC;AACzD,iBAAiB,4CAA4C;AAC7D,iBAAiB,+BAA+B;AAChD;AACA,SAAS;AACT;AACA;AACA,iBAAiB,kBAAkB;AACnC,iBAAiB,+BAA+B;AAChD,iBAAiB,gCAAgC;AACjD,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,aAAa;AAC9B,iBAAiB,2CAA2C;AAC5D,iBAAiB,4CAA4C;AAC7D,iBAAiB,yDAAyD;AAC1E,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,sBAAsB,oCAAoC;AAC1D,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,8BAA8B;AAC/C,iBAAiB,0BAA0B;AAC3C,iBAAiB,6DAA6D;AAC9E,iBAAiB,wCAAwC;AACzD,iBAAiB,4CAA4C;AAC7D,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,sJAAsJ;AACjK,aAAa,yDAAyD;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,CAAC;AACD,SAAS,0CAA0C,EAAE,MAAM,EAAE,iBAAiB,EAAE,+BAA+B,wCAAwC,SAAS,gBAAgB,qCAAqC,EAAE,QAAQ,EAAE,oCAAoC,EAAE,kBAAkB,EAAE,YAAY,EAAE,oBAAoB,eAAe,MAAM,GAAG,QAAQ,eAAe,QAAQ,EAAE,oCAAoC,qDAAqD,+BAA+B,GAAG,2BAA2B,EAAE,QAAQ,eAAe,MAAM;AAC3iB,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mDAAmD,0CAA0C;AAC7F,aAAa,WAAW;AACxB,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;AACD;AACA,CAAC,E;;;;;;;;;;;AC3iED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7SA;;AAEA;AACA;AACA,MAAM,IAA0F;AAChG;AACA;AACA,GAAG,MAAM,EAQN;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA,8BAA8B,IAAI;AAClC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACtfD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;ACrLtC;AAAA;AAAe,MAAe,8BAA8B;IAO3D,sBAAsB,CAAC,aAAiB;QACvC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,aAAa,CAAC,CAAC;IAClE,CAAC;IAED,WAAW,CAAC,UAAa;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;CAMD;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAsG;AAKpG;;;;;;;;;;;;;ACNF;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;ACAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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","file":"erdiagram.esm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/module-entry.ts\");\n","!function(e,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):r((e=\"undefined\"!=typeof globalThis?globalThis:e||self).graphre={})}(this,(function(e){\"use strict\";class r{constructor(){var e={};e._next=e._prev=e,this._sentinel=e}dequeue(){var e=this._sentinel,r=e._prev;if(r!==e)return n(r),r}enqueue(e){var r=this._sentinel,t=e;t._prev&&t._next&&n(t),t._next=r._next,r._next._prev=t,r._next=t,t._prev=r}toString(){for(var e=[],r=this._sentinel,n=r._prev;n!==r;)e.push(JSON.stringify(n,t)),n=n._prev;return\"[\"+e.join(\", \")+\"]\"}}function n(e){e._prev._next=e._next,e._next._prev=e._prev,delete e._next,delete e._prev}function t(e,r){if(\"_next\"!==e&&\"_prev\"!==e)return r}var o=Object.freeze({__proto__:null,List:r});const i={};function a(e){var r=[];for(var n of e)r.push(...n);return r}function s(e,r){return null!=e&&e.hasOwnProperty(r)}function d(e){const r=null==e?0:e.length;return r?e[r-1]:void 0}function u(e,r){e=Object(e);const n={};return Object.keys(e).forEach((t=>{n[t]=r(e[t],t)})),n}function f(e,r){var n=Number.POSITIVE_INFINITY,t=void 0;for(var o of e){var i=r(o);i<n&&(n=i,t=o)}return t}function h(e,r){var n=e<r?1:-1;let t=-1,o=Math.max(Math.ceil((r-e)/(n||1)),0);const i=new Array(o);for(;o--;)i[++t]=e,e+=n;return i}function c(e,r){return e.slice().sort(((e,n)=>r(e)-r(n)))}function v(e){i[e]||(i[e]=0);return`${e}${++i[e]}`}function l(e){return e?Object.keys(e).map((r=>e[r])):[]}function g(e,r){for(var n=[],t=0;t<e;t++)n.push(r());return n}function p(e){return void 0===e}function m(e,r){for(var n of Object.keys(e))r(e[n],n)}function w(e){return 0===Object.keys(e).length}function _(e){var r={},n=e.nodes().filter((r=>!e.children(r).length)),t=g(Math.max(...n.map((r=>e.node(r).rank)))+1,(()=>[]));return c(n,(r=>e.node(r).rank)).forEach((function n(o){if(!s(r,o)){r[o]=!0;var i=e.node(o);t[i.rank].push(o),e.successors(o).forEach(n)}})),t}function b(e,r){for(var n=0,t=1;t<r.length;++t)n+=y(e,r[t-1],r[t]);return n}function y(e,r,n){for(var t={},o=0;o<n.length;o++)t[n[o]]=o;for(var i=a(r.map((function(r){return c(e.outEdges(r).map((function(r){return{pos:t[r.w],weight:e.edge(r).weight}})),(e=>e.pos))}))),s=1;s<n.length;)s<<=1;var d=2*s-1;s-=1;var u=g(d,(()=>0)),f=0;return i.forEach((function(e){var r=e.pos+s;u[r]+=e.weight;for(var n=0;r>0;)r%2&&(n+=u[r+1]),u[r=r-1>>1]+=e.weight;f+=e.weight*n})),f}function k(e,r){return r?r.map((function(r){var n=e.inEdges(r);if(n.length){var t=n.reduce((function(r,n){var t=e.edge(n),o=e.node(n.v);return{sum:r.sum+t.weight*o.order,weight:r.weight+t.weight}}),{sum:0,weight:0});return{v:r,barycenter:t.sum/t.weight,weight:t.weight}}return{v:r}})):[]}function E(e,r){for(var n={},t=0;t<e.length;t++){var o=e[t],i=n[o.v]={indegree:0,in:[],out:[],vs:[o.v],i:t};void 0!==o.barycenter&&(i.barycenter=o.barycenter,i.weight=o.weight)}for(var a of r.edges()){var s=n[a.v],d=n[a.w];void 0!==s&&void 0!==d&&(d.indegree++,s.out.push(n[a.w]))}return function(e){var r=[];function n(e){return function(r){r.merged||(void 0===r.barycenter||void 0===e.barycenter||r.barycenter>=e.barycenter)&&function(e,r){var n=0,t=0;e.weight&&(n+=e.barycenter*e.weight,t+=e.weight);r.weight&&(n+=r.barycenter*r.weight,t+=r.weight);e.vs=r.vs.concat(e.vs),e.barycenter=n/t,e.weight=t,e.i=Math.min(r.i,e.i),r.merged=!0}(e,r)}}function t(r){return function(n){n.in.push(r),0==--n.indegree&&e.push(n)}}for(;e.length;){var o=e.pop();r.push(o),o.in.reverse().forEach(n(o)),o.out.forEach(t(o))}return r.filter((e=>!e.merged)).map((function(e){var r={vs:e.vs,i:e.i};return\"barycenter\"in e&&(r.barycenter=e.barycenter),\"weight\"in e&&(r.weight=e.weight),r}))}(l(n).filter((e=>!e.indegree)))}var N=\"\\0\";class x{constructor(e={}){this._label=void 0,this._nodeCount=0,this._edgeCount=0,this._isDirected=!s(e,\"directed\")||e.directed,this._isMultigraph=!!s(e,\"multigraph\")&&e.multigraph,this._isCompound=!!s(e,\"compound\")&&e.compound,this._defaultNodeLabelFn=()=>{},this._defaultEdgeLabelFn=()=>{},this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children[\"\\0\"]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}isDirected(){return this._isDirected}isMultigraph(){return this._isMultigraph}isCompound(){return this._isCompound}setGraph(e){return this._label=e,this}graph(){return this._label}setDefaultNodeLabel(e){var r;return r=e,this._defaultNodeLabelFn=\"function\"!=typeof r?()=>e:e,this}nodeCount(){return this._nodeCount}nodes(){return Object.keys(this._nodes)}sources(){var e=this;return this.nodes().filter((function(r){return w(e._in[r])}))}sinks(){var e=this;return this.nodes().filter((r=>w(e._out[r])))}setNodes(e,r){for(var n of e)void 0!==r?this.setNode(n,r):this.setNode(n);return this}setNode(e,r){return s(this._nodes,e)?(arguments.length>1&&(this._nodes[e]=r),this):(this._nodes[e]=arguments.length>1?r:this._defaultNodeLabelFn(e),this._isCompound&&(this._parent[e]=N,this._children[e]={},this._children[\"\\0\"][e]=!0),this._in[e]={},this._preds[e]={},this._out[e]={},this._sucs[e]={},++this._nodeCount,this)}node(e){return this._nodes[e]}hasNode(e){return s(this._nodes,e)}removeNode(e){var r=this;if(s(this._nodes,e)){var n=e=>{r.removeEdge(this._edgeObjs[e])};if(delete this._nodes[e],this._isCompound){for(var t of(this._removeFromParentsChildList(e),delete this._parent[e],this.children(e)))r.setParent(t);delete this._children[e]}for(var o of Object.keys(this._in[e]))n(o);for(var o of(delete this._in[e],delete this._preds[e],Object.keys(this._out[e])))n(o);delete this._out[e],delete this._sucs[e],--this._nodeCount}return this}setParent(e,r){if(!this._isCompound)throw new Error(\"Cannot set parent in a non-compound graph\");if(void 0===r)r=N;else{for(var n=r+=\"\";!p(n);n=this.parent(n))if(n===e)throw new Error(`Setting ${r} as parent of ${e} would create a cycle`);this.setNode(r)}return this.setNode(e),this._removeFromParentsChildList(e),this._parent[e]=r,this._children[r][e]=!0,this}_removeFromParentsChildList(e){delete this._children[this._parent[e]][e]}parent(e){if(this._isCompound){var r=this._parent[e];if(r!==N)return r}}children(e){if(p(e)&&(e=N),this._isCompound){var r=this._children[e];return r?Object.keys(r):void 0}return e===N?this.nodes():this.hasNode(e)?[]:void 0}predecessors(e){var r=this._preds[e];if(r)return Object.keys(r)}successors(e){var r=this._sucs[e];if(r)return Object.keys(r)}neighbors(e){var r=this.predecessors(e);if(r)return function(e,r){var n=[...e];for(var t of r)-1===n.indexOf(t)&&n.push(t);return n}(r,this.successors(e))}isLeaf(e){return 0===(this.isDirected()?this.successors(e):this.neighbors(e)).length}filterNodes(e){var r=new x({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});r.setGraph(this.graph());var n=this;m(this._nodes,(function(n,t){e(t)&&r.setNode(t,n)})),m(this._edgeObjs,(function(e){r.hasNode(e.v)&&r.hasNode(e.w)&&r.setEdge(e,n.edge(e))}));var t={};function o(e){var i=n.parent(e);return void 0===i||r.hasNode(i)?(t[e]=i,i):i in t?t[i]:o(i)}if(this._isCompound)for(var i of r.nodes())r.setParent(i,o(i));return r}setDefaultEdgeLabel(e){var r;return r=e,this._defaultEdgeLabelFn=\"function\"!=typeof r?()=>e:e,this}edgeCount(){return this._edgeCount}edges(){return Object.values(this._edgeObjs)}setPath(e,r){var n=this,t=arguments;return e.reduce((function(e,o){return t.length>1?n.setEdge(e,o,r):n.setEdge(e,o),o})),this}setEdge(e,r,n,t){var o=!1,i=e;\"object\"==typeof i&&null!==i&&\"v\"in i?(e=i.v,r=i.w,t=i.name,2===arguments.length&&(n=arguments[1],o=!0)):(e=i,r=arguments[1],t=arguments[3],arguments.length>2&&(n=arguments[2],o=!0)),e=\"\"+e,r=\"\"+r,p(t)||(t=\"\"+t);var a=j(this._isDirected,e,r,t);if(s(this._edgeLabels,a))return o&&(this._edgeLabels[a]=n),this;if(!p(t)&&!this._isMultigraph)throw new Error(\"Cannot set a named edge when isMultigraph = false\");this.setNode(e),this.setNode(r),this._edgeLabels[a]=o?n:this._defaultEdgeLabelFn(e,r,t);var d=function(e,r,n,t){var o=\"\"+r,i=\"\"+n;if(!e&&o>i){var a=o;o=i,i=a}var s={v:o,w:i};t&&(s.name=t);return s}(this._isDirected,e,r,t);return e=d.v,r=d.w,Object.freeze(d),this._edgeObjs[a]=d,C(this._preds[r],e),C(this._sucs[e],r),this._in[r][a]=d,this._out[e][a]=d,this._edgeCount++,this}edge(e,r,n){var t=\"object\"==typeof e?M(this._isDirected,e):j(this._isDirected,e,r,n);return this._edgeLabels[t]}hasEdge(e,r,n){var t=1===arguments.length?M(this._isDirected,arguments[0]):j(this._isDirected,e,r,n);return s(this._edgeLabels,t)}removeEdge(e,r,n){var t=\"object\"==typeof e?M(this._isDirected,e):j(this._isDirected,e,r,n),o=this._edgeObjs[t];return o&&(e=o.v,r=o.w,delete this._edgeLabels[t],delete this._edgeObjs[t],O(this._preds[r],e),O(this._sucs[e],r),delete this._in[r][t],delete this._out[e][t],this._edgeCount--),this}inEdges(e,r){var n=this._in[e];if(n){var t=Object.values(n);return r?t.filter((function(e){return e.v===r})):t}}outEdges(e,r){var n=this._out[e];if(n){var t=Object.values(n);return r?t.filter((function(e){return e.w===r})):t}}nodeEdges(e,r){var n=this.inEdges(e,r);if(n)return n.concat(this.outEdges(e,r))}}class I extends x{}function C(e,r){e[r]?e[r]++:e[r]=1}function O(e,r){--e[r]||delete e[r]}function j(e,r,n,t){var o=\"\"+r,i=\"\"+n;if(!e&&o>i){var a=o;o=i,i=a}return o+\"\u0001\"+i+\"\u0001\"+(p(t)?\"\\0\":t)}function M(e,r){return j(e,r.v,r.w,r.name)}function L(e,r,n,t){var o;do{o=v(t)}while(e.hasNode(o));return n.dummy=r,e.setNode(o,n),o}function T(e){var r=(new x).setGraph(e.graph());for(var n of e.nodes())r.setNode(n,e.node(n));for(var t of e.edges()){var o=r.edge(t.v,t.w)||{weight:0,minlen:1},i=e.edge(t);r.setEdge(t.v,t.w,{weight:o.weight+i.weight,minlen:Math.max(o.minlen,i.minlen)})}return r}function S(e){var r=new x({multigraph:e.isMultigraph()}).setGraph(e.graph());for(var n of e.nodes())e.children(n).length||r.setNode(n,e.node(n));for(var t of e.edges())r.setEdge(t,e.edge(t));return r}function P(e,r){var n,t,o=e.x,i=e.y,a=r.x-o,s=r.y-i,d=e.width/2,u=e.height/2;if(!a&&!s)throw new Error(\"Not possible to find intersection inside of the rectangle\");return Math.abs(s)*d>Math.abs(a)*u?(s<0&&(u=-u),n=u*a/s,t=u):(a<0&&(d=-d),n=d,t=d*s/a),{x:o+n,y:i+t}}function R(e){var r=g(G(e)+1,(()=>[]));for(var n of e.nodes()){var t=e.node(n),o=t.rank;void 0!==o&&(r[o][t.order]=n)}return r}function F(e){var r=Math.min(...e.nodes().map((r=>e.node(r).rank)).filter((e=>void 0!==e)));for(var n of e.nodes()){var t=e.node(n);s(t,\"rank\")&&(t.rank-=r)}}function D(e){var r=Math.min(...e.nodes().map((r=>e.node(r).rank)).filter((e=>void 0!==e))),n=[];for(var t of e.nodes()){var o=e.node(t).rank-r;n[o]||(n[o]=[]),n[o].push(t)}for(var i=0,a=e.graph().nodeRankFactor,s=0;s<n.length;s++){var d=n[s];if(void 0===d&&s%a!=0)--i;else if(i&&null!=d)for(var t of d)e.node(t).rank+=i}}function z(e,r,n,t){var o={width:0,height:0};return arguments.length>=4&&(o.rank=n,o.order=t),L(e,\"border\",o,r)}function G(e){var r=e.nodes().map((r=>e.node(r).rank)).filter((e=>void 0!==e));return Math.max(...r)}function V(e,r){var n=[],t=[];for(var o of e)r(o)?n.push(o):t.push(o);return{lhs:n,rhs:t}}function Y(e,r){var n=Date.now();try{return r()}finally{console.log(e+\" time: \"+(Date.now()-n)+\"ms\")}}function B(e,r){return r()}var A=Object.freeze({__proto__:null,addDummyNode:L,simplify:T,asNonCompoundGraph:S,successorWeights:function(e){var r={};for(var n of e.nodes()){var t={};for(var o of e.outEdges(n))t[o.w]=(t[o.w]||0)+e.edge(o).weight;r[n]=t}return r},predecessorWeights:function(e){var r={};for(var n of e.nodes()){var t={};for(var o of e.inEdges(n))t[o.v]=(t[o.v]||0)+e.edge(o).weight;r[n]=t}return r},intersectRect:P,buildLayerMatrix:R,normalizeRanks:F,removeEmptyRanks:D,addBorderNode:z,maxRank:G,partition:V,time:Y,notime:B});function q(e,r){var n,t=V(e,(function(e){return s(e,\"barycenter\")})),o=t.lhs,i=c(t.rhs,(e=>-e.i)),d=[],u=0,f=0,h=0;for(var v of(o.sort((n=!!r,function(e,r){return e.barycenter<r.barycenter?-1:e.barycenter>r.barycenter?1:n?r.i-e.i:e.i-r.i})),h=W(d,i,h),o))h+=v.vs.length,d.push(v.vs),u+=v.barycenter*v.weight,f+=v.weight,h=W(d,i,h);var l={vs:a(d)};return f&&(l.barycenter=u/f,l.weight=f),l}function W(e,r,n){for(var t;r.length&&(t=d(r)).i<=n;)r.pop(),e.push(t.vs),n++;return n}function $(e,r,n,t){var o=e.children(r),i=e.node(r),d=i?i.borderLeft:void 0,u=i?i.borderRight:void 0,f={};d&&(o=o.filter((e=>e!==d&&e!==u)));var h=k(e,o);for(var c of h)if(e.children(c.v).length){var v=$(e,c.v,n,t);f[c.v]=v,s(v,\"barycenter\")&&J(c,v)}var l=E(h,n);!function(e,r){for(var n of e)n.vs=a(n.vs.map((function(e){return r[e]?r[e].vs:[e]})))}(l,f);var g=q(l,t);if(d&&(g.vs=[d,...g.vs,u],e.predecessors(d).length)){var p=e.node(e.predecessors(d)[0]),m=e.node(e.predecessors(u)[0]);s(g,\"barycenter\")||(g.barycenter=0,g.weight=0),g.barycenter=(g.barycenter*g.weight+p.order+m.order)/(g.weight+2),g.weight+=2}return g}function J(e,r){void 0!==e.barycenter?(e.barycenter=(e.barycenter*e.weight+r.barycenter*r.weight)/(e.weight+r.weight),e.weight+=r.weight):(e.barycenter=r.barycenter,e.weight=r.weight)}function Q(e,r,n){var t=function(e){var r;for(;e.hasNode(r=v(\"_root\")););return r}(e),o=new x({compound:!0}).setGraph({root:t}).setDefaultNodeLabel((r=>e.node(r)));for(var i of e.nodes()){var a=e.node(i),d=e.parent(i);if(a.rank===r||a.minRank<=r&&r<=a.maxRank){for(var u of(o.setNode(i),o.setParent(i,d||t),e[n](i))){var f=u.v===i?u.w:u.v,h=o.edge(f,i),c=void 0!==h?h.weight:0;o.setEdge(f,i,{weight:e.edge(u).weight+c})}s(a,\"minRank\")&&o.setNode(i,{borderLeft:a.borderLeft[r],borderRight:a.borderRight[r]})}}return o}function K(e,r,n){var t,o={};for(var i of n)!function(){for(var n,a=e.parent(i);a;){var s=e.parent(a);if(s?(n=o[s],o[s]=a):(n=t,t=a),n&&n!==a)return void r.setEdge(n,a);a=s}}()}function X(e){var r=G(e),n=H(e,h(1,r+1),\"inEdges\"),t=H(e,h(r-1,-1),\"outEdges\"),o=_(e);Z(e,o);for(var i,a=Number.POSITIVE_INFINITY,s=0,d=0;d<4;++s,++d){U(s%2?n:t,s%4>=2);var u=b(e,o=R(e));u<a&&(d=0,i=o.map((e=>e.slice(0))),a=u)}Z(e,i)}function H(e,r,n){return r.map((r=>Q(e,r,n)))}function U(e,r){var n=new x;for(var t of e){var o=t.graph().root,i=$(t,o,n,r);i.vs.map((function(e,r){t.node(e).order=r})),K(t,n,i.vs)}}function Z(e,r){for(var n of r)n.map((function(r,n){e.node(r).order=n}))}var ee=Object.freeze({__proto__:null,order:X,addSubgraphConstraints:K,barycenter:k,buildLayerGraph:Q,crossCount:b,initOrder:_,resolveConflicts:E,sortSubgraph:$,sort:q});function re(e,r){var n={};return r.reduce((function(r,t){for(var o=0,i=0,a=r.length,s=d(t),u=0;u<t.length;u++){var f=t[u],h=te(e,f),c=h?e.node(h).order:a;if(h||f===s){for(var v of t.slice(i,u+1))for(var l of e.predecessors(v)){var g=e.node(l),p=g.order;!(p<o||c<p)||g.dummy&&e.node(v).dummy||oe(n,l,v)}i=u+1,o=c}}return t})),n}function ne(e,r){var n={};function t(r,t,o,i,a){var s;for(var d of h(t,o))if(s=r[d],e.node(s).dummy)for(var u of e.predecessors(s)){var f=e.node(u);f.dummy&&(f.order<i||f.order>a)&&oe(n,u,s)}}return r.reduce((function(r,n){for(var o,i=-1,a=0,s=0;s<n.length;s++){var d=s,u=n[s];if(void 0!==u){if(\"border\"===e.node(u).dummy){var f=e.predecessors(u);f.length&&(t(n,a,d,i,o=e.node(f[0]).order),a=d,i=o)}t(n,a,n.length,o,r.length)}}return n})),n}function te(e,r){if(e.node(r).dummy)for(var n of e.predecessors(r))if(e.node(n).dummy)return n}function oe(e,r,n){if(r>n){var t=r;r=n,n=t}var o=e[r];o||(e[r]=o={}),o[n]=!0}function ie(e,r,n){if(r>n){var t=r;r=n,n=t}return s(e[r],n)}function ae(e,r,n,t){var o={},i={},a={};for(var s of r)for(var d=0;d<s.length;d++){o[f=s[d]]=f,i[f]=f,a[f]=d}for(var s of r){var u=-1;for(var f of s){var h=t(f);if(h.length)for(var v=((h=c(h,(e=>a[e]))).length-1)/2,l=Math.floor(v),g=Math.ceil(v);l<=g;++l){var p=h[l];i[f]===f&&u<a[p]&&!ie(n,f,p)&&(i[p]=f,i[f]=o[f]=o[p],u=a[p])}}}return{root:o,align:i}}function se(e,r,n,t,o){var i={},a=function(e,r,n,t){var o=new x,i=e.graph(),a=ce(i.nodesep,i.edgesep,t);for(var s of r){var d=null;for(var u of s){var f=n[u];if(o.setNode(f),d){var h=n[d],c=o.edge(h,f);o.setEdge(h,f,Math.max(a(e,u,d),c||0))}d=u}}return o}(e,r,n,o),s=o?\"borderLeft\":\"borderRight\";function d(e,r){for(var n=a.nodes(),t=n.pop(),o={};t;)o[t]?e(t):(o[t]=!0,n.push(t),n=n.concat(r(t))),t=n.pop()}for(var u of(d((function(e){i[e]=a.inEdges(e).reduce((function(e,r){return Math.max(e,i[r.v]+a.edge(r))}),0)}),(e=>a.predecessors(e))),d((function(r){var n=a.outEdges(r).reduce((function(e,r){return Math.min(e,i[r.w]-a.edge(r))}),Number.POSITIVE_INFINITY),t=e.node(r);n!==Number.POSITIVE_INFINITY&&t.borderType!==s&&(i[r]=Math.max(i[r],n))}),(e=>a.successors(e))),Object.keys(t))){var f=t[u];i[f]=i[n[f]]}return i}function de(e,r){return f(l(r),(function(r){var n=Number.NEGATIVE_INFINITY,t=Number.POSITIVE_INFINITY;for(var o in r){var i=r[o],a=ve(e,o)/2;n=Math.max(i+a,n),t=Math.min(i-a,t)}return n-t}))}function ue(e,r){var n=l(r),t=Math.min(...n),o=Math.max(...n);for(var i of[\"ul\",\"ur\",\"dl\",\"dr\"]){var a=i[1],s=e[i];if(s!==r){var d=l(s),f=\"l\"===a?t-Math.min(...d):o-Math.max(...d);f&&(e[i]=u(s,(e=>e+f)))}}}function fe(e,r){return u(e.ul,(function(n,t){if(r)return e[r.toLowerCase()][t];var o=c([e.ul[t],e.ur[t],e.dl[t],e.dr[t]],(e=>e));return(o[1]+o[2])/2}))}function he(e){var r,n=R(e),t=Object.assign(Object.assign({},re(e,n)),ne(e,n)),o={ul:{},ur:{},dl:{},dr:{}};for(var i of[\"u\",\"d\"])for(var a of(r=\"u\"===i?n:n.map((e=>e)).reverse(),[\"l\",\"r\"])){\"r\"===a&&(r=r.map((e=>e.map((e=>e)).reverse())));var s=ae(0,r,t,(\"u\"===i?e.predecessors:e.successors).bind(e)),d=se(e,r,s.root,s.align,\"r\"===a);\"r\"===a&&(d=u(d,(e=>-e))),o[i+a]=d}return ue(o,de(e,o)),fe(o,e.graph().align)}function ce(e,r,n){return function(t,o,i){var a,d=t.node(o),u=t.node(i),f=0;if(f+=d.width/2,s(d,\"labelpos\"))switch(d.labelpos.toLowerCase()){case\"l\":a=-d.width/2;break;case\"r\":a=d.width/2}if(a&&(f+=n?a:-a),a=0,f+=(d.dummy?r:e)/2,f+=(u.dummy?r:e)/2,f+=u.width/2,s(u,\"labelpos\"))switch(u.labelpos.toLowerCase()){case\"l\":a=u.width/2;break;case\"r\":a=-u.width/2}return a&&(f+=n?a:-a),a=0,f}}function ve(e,r){return e.node(r).width}var le=Object.freeze({__proto__:null,findType1Conflicts:re,findType2Conflicts:ne,findOtherInnerSegmentNode:te,addConflict:oe,hasConflict:ie,verticalAlignment:ae,horizontalCompaction:se,findSmallestWidthAlignment:de,alignCoordinates:ue,balance:fe,positionX:he,sep:ce,width:ve});function ge(e){!function(e){var r=R(e),n=e.graph().ranksep,t=0;for(var o of r){var i=Math.max(...o.map((r=>e.node(r).height)));for(var a of o)e.node(a).y=t+i/2;t+=i+n}}(e=S(e));var r=he(e);for(var n in r)e.node(n).x=r[n]}var pe=Object.freeze({__proto__:null,bk:le,position:ge});function me(e){var r={};e.sources().forEach((function n(t){var o=e.node(t);if(s(r,t))return o.rank;r[t]=!0;var i=Math.min(...e.outEdges(t).map((r=>n(r.w)-e.edge(r).minlen)));return i!==Number.POSITIVE_INFINITY&&null!=i||(i=0),o.rank=i}))}function we(e,r){return e.node(r.w).rank-e.node(r.v).rank-e.edge(r).minlen}function _e(e){var r,n=new x({directed:!1}),t=e.nodes()[0],o=e.nodeCount();for(n.setNode(t,{});i(e)<o;)r=a(e),s(e,n.hasNode(r.v)?we(e,r):-we(e,r));return n;function i(e){return n.nodes().forEach((function r(t){for(var o of e.nodeEdges(t)){var i=o.v,a=t===i?o.w:i;n.hasNode(a)||we(e,o)||(n.setNode(a,{}),n.setEdge(t,a,{}),r(a))}})),n.nodeCount()}function a(e){return f(e.edges(),(function(r){if(n.hasNode(r.v)!==n.hasNode(r.w))return we(e,r)}))}function s(e,r){for(var t of n.nodes())e.node(t).rank+=r}}class be{constructor(){this._arr=[],this._keyIndices={}}size(){return this._arr.length}keys(){return this._arr.map((function(e){return e.key}))}has(e){return e in this._keyIndices}priority(e){var r=this._keyIndices[e];if(void 0!==r)return this._arr[r].priority}min(){if(0===this.size())throw new Error(\"Queue underflow\");return this._arr[0].key}add(e,r){var n=this._keyIndices;if(!((e=String(e))in n)){var t=this._arr,o=t.length;return n[e]=o,t.push({key:e,priority:r}),this._decrease(o),!0}return!1}removeMin(){this._swap(0,this._arr.length-1);var e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key}decrease(e,r){var n=this._keyIndices[e];if(r>this._arr[n].priority)throw new Error(\"New priority is greater than current priority. Key: \"+e+\" Old: \"+this._arr[n].priority+\" New: \"+r);this._arr[n].priority=r,this._decrease(n)}_heapify(e){var r=this._arr,n=2*e,t=n+1,o=e;n<r.length&&(o=r[n].priority<r[o].priority?n:o,t<r.length&&(o=r[t].priority<r[o].priority?t:o),o!==e&&(this._swap(e,o),this._heapify(o)))}_decrease(e){for(var r,n=this._arr,t=n[e].priority;0!==e&&!(n[r=e>>1].priority<t);)this._swap(e,r),e=r}_swap(e,r){var n=this._arr,t=this._keyIndices,o=n[e],i=n[r];n[e]=i,n[r]=o,t[i.key]=e,t[o.key]=r}}var ye=()=>1;function ke(e,r,n,t){return function(e,r,n,t){var o,i,a={},s=new be,d=function(e){var r=e.v!==o?e.v:e.w,t=a[r],d=n(e),u=i.distance+d;if(d<0)throw new Error(\"dijkstra does not allow negative edge weights. Bad edge: \"+e+\" Weight: \"+d);u<t.distance&&(t.distance=u,t.predecessor=o,s.decrease(r,u))};e.nodes().forEach((function(e){var n=e===r?0:Number.POSITIVE_INFINITY;a[e]={distance:n},s.add(e,n)}));for(;s.size()>0&&(o=s.removeMin(),(i=a[o]).distance!==Number.POSITIVE_INFINITY);)t(o).forEach(d);return a}(e,String(r),n||ye,t||function(r){return e.outEdges(r)})}function Ee(e){var r=0,n=[],t={},o=[];function i(a){var s=t[a]={onStack:!0,lowlink:r,index:r++};if(n.push(a),e.successors(a).forEach((function(e){e in t?t[e].onStack&&(s.lowlink=Math.min(s.lowlink,t[e].index)):(i(e),s.lowlink=Math.min(s.lowlink,t[e].lowlink))})),s.lowlink===s.index){var d,u=[];do{d=n.pop(),t[d].onStack=!1,u.push(d)}while(a!==d);o.push(u)}}return e.nodes().forEach((function(e){e in t||i(e)})),o}var Ne=()=>1;class xe extends Error{}function Ie(e){var r={},n={},t=[];function o(i){if(i in n)throw new xe;if(!(i in r)){for(var a of(n[i]=!0,r[i]=!0,e.predecessors(i)))o(a);delete n[i],t.push(i)}}for(var i of e.sinks())o(i);if(Object.keys(r).length!==e.nodeCount())throw new xe;return t}function Ce(e,r,n){var t=Array.isArray(r)?r:[r],o=(e.isDirected()?e.successors:e.neighbors).bind(e),i=[],a={};for(var s of t){if(!e.hasNode(s))throw new Error(\"Graph does not have node: \"+s);Oe(e,s,\"post\"===n,a,o,i)}return i}function Oe(e,r,n,t,o,i){if(!(r in t)){for(var a of(t[r]=!0,n||i.push(r),o(r)))Oe(e,a,n,t,o,i);n&&i.push(r)}}function je(e,r){return Ce(e,r,\"post\")}function Me(e,r){return Ce(e,r,\"pre\")}var Le=Object.freeze({__proto__:null,components:function(e){var r,n={},t=[];function o(t){if(!(t in n)){for(var i of(n[t]=!0,r.push(t),e.successors(t)))o(i);for(var a of e.predecessors(t))o(a)}}for(var i of e.nodes())r=[],o(i),r.length&&t.push(r);return t},dijkstra:ke,dijkstraAll:function(e,r,n){var t={};for(var o of e.nodes())t[o]=ke(e,o,r,n);return t},findCycles:function(e){return Ee(e).filter((function(r){return r.length>1||1===r.length&&e.hasEdge(r[0],r[0])}))},floydWarshall:function(e,r,n){return function(e,r,n){var t={},o=e.nodes();return o.forEach((function(e){t[e]={},t[e][e]={distance:0},o.forEach((function(r){e!==r&&(t[e][r]={distance:Number.POSITIVE_INFINITY})})),n(e).forEach((function(n){var o=n.v===e?n.w:n.v,i=r(n);t[e][o]={distance:i,predecessor:e}}))})),o.forEach((function(e){var r=t[e];o.forEach((function(n){var i=t[n];o.forEach((function(n){var t=i[e],o=r[n],a=i[n],s=t.distance+o.distance;s<a.distance&&(a.distance=s,a.predecessor=o.predecessor)}))}))})),t}(e,r||Ne,n||function(r){return e.outEdges(r)})},isAcyclic:function(e){try{Ie(e)}catch(e){if(e instanceof xe)return!1;throw e}return!0},postorder:je,preorder:Me,prim:function(e,r){var n,t=new I({}),o={},i=new be;function a(e){var t=e.v===n?e.w:e.v,a=i.priority(t);if(void 0!==a){var s=r(e);s<a&&(o[t]=n,i.decrease(t,s))}}if(0===e.nodeCount())return t;for(n of e.nodes())i.add(n,Number.POSITIVE_INFINITY),t.setNode(n);i.decrease(e.nodes()[0],0);for(var s=!1;i.size()>0;){if((n=i.removeMin())in o)t.setEdge(n,o[n]);else{if(s)throw new Error(\"Input graph is not connected: \"+e);s=!0}e.nodeEdges(n).forEach(a)}return t},tarjan:Ee,topsort:Ie});function Te(e){me(e=T(e));var r,n=_e(e);for(Fe(n),Se(n,e);r=ze(n);)Ve(n,e,r,Ge(n,e,r))}function Se(e,r){var n=je(e,e.nodes());for(var t of n=n.slice(0,n.length-1))Pe(e,r,t)}function Pe(e,r,n){var t=e.node(n).parent;e.edge(n,t).cutvalue=Re(e,r,n)}function Re(e,r,n){var t,o,i=e.node(n).parent,a=!0,s=r.edge(n,i),d=0;for(var u of(s||(a=!1,s=r.edge(i,n)),d=s.weight,r.nodeEdges(n))){var f=u.v===n,h=f?u.w:u.v;if(h!==i){var c=f===a,v=r.edge(u).weight;if(d+=c?v:-v,t=n,o=h,e.hasEdge(t,o)){var l=e.edge(n,h).cutvalue;d+=c?-l:l}}}return d}function Fe(e,r){arguments.length<2&&(r=e.nodes()[0]),De(e,{},1,r)}function De(e,r,n,t,o){var i=n,a=e.node(t);for(var d of(r[t]=!0,e.neighbors(t)))s(r,d)||(n=De(e,r,n,d,t));return a.low=i,a.lim=n++,o?a.parent=o:delete a.parent,n}function ze(e){for(var r of e.edges())if(e.edge(r).cutvalue<0)return r}function Ge(e,r,n){var t=n.v,o=n.w;r.hasEdge(t,o)||(t=n.w,o=n.v);var i=e.node(t),a=e.node(o),s=i,d=!1;return i.lim>a.lim&&(s=a,d=!0),f(r.edges().filter((function(r){return d===Ye(e,e.node(r.v),s)&&d!==Ye(e,e.node(r.w),s)})),(e=>we(r,e)))}function Ve(e,r,n,t){var o=n.v,i=n.w;e.removeEdge(o,i),e.setEdge(t.v,t.w,{}),Fe(e),Se(e,r),function(e,r){var n=function(e,r){for(var n of e.nodes())if(!r.node(n).parent)return n;return}(e,r),t=Me(e,n);for(var o of t=t.slice(1)){var i=e.node(o).parent,a=r.edge(o,i),s=!1;a||(a=r.edge(i,o),s=!0),r.node(o).rank=r.node(i).rank+(s?a.minlen:-a.minlen)}}(e,r)}function Ye(e,r,n){return n.low<=r.lim&&r.lim<=n.lim}function Be(e){switch(e.graph().ranker){case\"network-simplex\":We(e);break;case\"tight-tree\":qe(e);break;case\"longest-path\":Ae(e);break;default:We(e)}}Te.initLowLimValues=Fe,Te.initCutValues=Se,Te.calcCutValue=Re,Te.leaveEdge=ze,Te.enterEdge=Ge,Te.exchangeEdges=Ve;var Ae=me;function qe(e){me(e),_e(e)}function We(e){Te(e)}var $e=Object.freeze({__proto__:null,rank:Be,tightTreeRanker:qe,networkSimplexRanker:We,networkSimplex:Te,feasibleTree:_e,longestPath:me}),Je=e=>1;function Qe(e,n){if(e.nodeCount()<=1)return[];var t=function(e,n){var t=new x,o=0,i=0;for(var a of e.nodes())t.setNode(a,{v:a,in:0,out:0});for(var s of e.edges()){var d=t.edge(s.v,s.w)||0,u=n(s),f=d+u;t.setEdge(s.v,s.w,f),i=Math.max(i,t.node(s.v).out+=u),o=Math.max(o,t.node(s.w).in+=u)}var h=g(i+o+3,(()=>new r)),c=o+1;for(var a of t.nodes())Xe(h,c,t.node(a));return{graph:t,buckets:h,zeroIdx:c}}(e,n||Je);return a(function(e,r,n){var t,o=[],i=r[r.length-1],a=r[0];for(;e.nodeCount();){for(;t=a.dequeue();)Ke(e,r,n,t);for(;t=i.dequeue();)Ke(e,r,n,t);if(e.nodeCount())for(var s=r.length-2;s>0;--s)if(t=r[s].dequeue()){o=o.concat(Ke(e,r,n,t,!0));break}}return o}(t.graph,t.buckets,t.zeroIdx).map((r=>e.outEdges(r.v,r.w))))}function Ke(e,r,n,t,o){var i=o?[]:void 0;for(var a of e.inEdges(t.v)){var s=e.edge(a),d=e.node(a.v);o&&i.push({v:a.v,w:a.w}),d.out-=s,Xe(r,n,d)}for(var a of e.outEdges(t.v)){s=e.edge(a);var u=a.w,f=e.node(u);f.in-=s,Xe(r,n,f)}return e.removeNode(t.v),i}function Xe(e,r,n){n.out?n.in?e[n.out-n.in+r].enqueue(n):e[e.length-1].enqueue(n):e[0].enqueue(n)}var He={run:function(e){var r=\"greedy\"===e.graph().acyclicer?Qe(e,function(e){return function(r){return e.edge(r).weight}}(e)):function(e){var r=[],n={},t={};function o(i){if(!s(t,i)){for(var a of(t[i]=!0,n[i]=!0,e.outEdges(i)))s(n,a.w)?r.push(a):o(a.w);delete n[i]}}return e.nodes().forEach(o),r}(e);for(var n of r){var t=e.edge(n);e.removeEdge(n),t.forwardName=n.name,t.reversed=!0,e.setEdge(n.w,n.v,t,v(\"rev\"))}},undo:function(e){for(var r of e.edges()){var n=e.edge(r);if(n.reversed){e.removeEdge(r);var t=n.forwardName;delete n.reversed,delete n.forwardName,e.setEdge(r.w,r.v,n,t)}}}};function Ue(e){e.children().forEach((function r(n){var t=e.children(n),o=e.node(n);if(t.length&&t.forEach(r),s(o,\"minRank\")){o.borderLeft=[],o.borderRight=[];for(var i=o.minRank,a=o.maxRank+1;i<a;++i)Ze(e,\"borderLeft\",\"_bl\",n,o,i),Ze(e,\"borderRight\",\"_br\",n,o,i)}}))}function Ze(e,r,n,t,o,i){var a={width:0,height:0,rank:i,borderType:r},s=o[r][i-1],d=L(e,\"border\",a,n);o[r][i]=d,e.setParent(d,t),s&&e.setEdge(s,d,{weight:1})}var er={adjust:function(e){var r=e.graph().rankdir.toLowerCase();\"lr\"!==r&&\"rl\"!==r||rr(e)},undo:function(e){var r=e.graph().rankdir.toLowerCase();\"bt\"!==r&&\"rl\"!==r||function(e){for(var r of e.nodes())tr(e.node(r));for(var n of e.edges()){var t=e.edge(n);t.points.forEach(tr),s(t,\"y\")&&tr(t)}}(e);\"lr\"!==r&&\"rl\"!==r||(!function(e){for(var r of e.nodes())or(e.node(r));for(var n of e.edges()){var t=e.edge(n);t.points.forEach(or),s(t,\"x\")&&or(t)}}(e),rr(e))}};function rr(e){for(var r of e.nodes())nr(e.node(r));for(var n of e.edges())nr(e.edge(n))}function nr(e){var r=e.width;e.width=e.height,e.height=r}function tr(e){e.y=-e.y}function or(e){var r=e.x;e.x=e.y,e.y=r}var ir=Object.freeze({__proto__:null,debugOrdering:function(e){var r=R(e),n=new x({compound:!0,multigraph:!0}).setGraph({});for(var t of e.nodes())n.setNode(t,{label:t}),n.setParent(t,\"layer\"+e.node(t).rank);for(var o of e.edges())n.setEdge(o.v,o.w,{},o.name);var i=0;for(var a of r){var s=\"layer\"+i;i++,n.setNode(s,{rank:\"same\"}),a.reduce((function(e,r){return n.setEdge(e.toString(),r,{style:\"invis\"}),r}))}return n}}),ar={run:function(e){for(var r of(e.graph().dummyChains=[],e.edges()))sr(e,r)},undo:function(e){for(var r of e.graph().dummyChains){var n,t=e.node(r),o=t.edgeLabel;for(e.setEdge(t.edgeObj,o);t.dummy;)n=e.successors(r)[0],e.removeNode(r),o.points.push({x:t.x,y:t.y}),\"edge-label\"===t.dummy&&(o.x=t.x,o.y=t.y,o.width=t.width,o.height=t.height),r=n,t=e.node(r)}}};function sr(e,r){var n=r.v,t=e.node(n).rank,o=r.w,i=e.node(o).rank,a=r.name,s=e.edge(r),d=s.labelRank;if(i!==t+1){var u,f,h;for(e.removeEdge(r),h=0,++t;t<i;++h,++t)s.points=[],u=L(e,\"edge\",f={width:0,height:0,edgeLabel:s,edgeObj:r,rank:t},\"_d\"),t===d&&(f.width=s.width,f.height=s.height,f.dummy=\"edge-label\",f.labelpos=s.labelpos),e.setEdge(n,u,{weight:s.weight},a),0===h&&e.graph().dummyChains.push(u),n=u;e.setEdge(n,o,{weight:s.weight},a)}}function dr(e){var r=function(e){var r={},n=0;function t(o){var i=n;e.children(o).forEach(t),r[o]={low:i,lim:n++}}return e.children().forEach(t),r}(e);for(var n of e.graph().dummyChains)for(var t=e.node(n),o=t.edgeObj,i=ur(e,r,o.v,o.w),a=i.path,s=i.lca,d=0,u=a[d],f=!0;n!==o.w;){if(t=e.node(n),f){for(;(u=a[d])!==s&&e.node(u).maxRank<t.rank;)d++;u===s&&(f=!1)}if(!f){for(;d<a.length-1&&e.node(u=a[d+1]).minRank<=t.rank;)d++;u=a[d]}e.setParent(n,u),n=e.successors(n)[0]}}function ur(e,r,n,t){var o,i,a=[],s=[],d=Math.min(r[n].low,r[t].low),u=Math.max(r[n].lim,r[t].lim);o=n;do{o=e.parent(o),a.push(o)}while(o&&(r[o].low>d||u>r[o].lim));for(i=o,o=t;(o=e.parent(o))!==i;)s.push(o);return{path:a.concat(s.reverse()),lca:i}}var fr={run:function(e){var r=L(e,\"root\",{},\"_root\"),n=function(e){var r={};function n(t,o){var i=e.children(t);if(i&&i.length)for(var a of i)n(a,o+1);r[t]=o}for(var t of e.children())n(t,1);return r}(e),t=Math.max(...l(n))-1,o=2*t+1;for(var i of(e.graph().nestingRoot=r,e.edges()))e.edge(i).minlen*=o;var a=function(e){return e.edges().reduce(((r,n)=>r+e.edge(n).weight),0)}(e)+1;for(var s of e.children())hr(e,r,o,a,t,n,s);e.graph().nodeRankFactor=o},cleanup:function(e){var r=e.graph();for(var n of(e.removeNode(r.nestingRoot),delete r.nestingRoot,e.edges())){e.edge(n).nestingEdge&&e.removeEdge(n)}}};function hr(e,r,n,t,o,i,a){var s=e.children(a);if(s.length){var d=z(e,\"_bt\"),u=z(e,\"_bb\"),f=e.node(a);for(var h of(e.setParent(d,a),f.borderTop=d,e.setParent(u,a),f.borderBottom=u,s)){hr(e,r,n,t,o,i,h);var c=e.node(h),v=c.borderTop?c.borderTop:h,l=c.borderBottom?c.borderBottom:h,g=c.borderTop?t:2*t,p=v!==l?1:o-i[a]+1;e.setEdge(d,v,{weight:g,minlen:p,nestingEdge:!0}),e.setEdge(l,u,{weight:g,minlen:p,nestingEdge:!0})}e.parent(a)||e.setEdge(r,d,{weight:0,minlen:o+i[a]})}else a!==r&&e.setEdge(r,a,{weight:0,minlen:n})}function cr(e){return\"edge-proxy\"==e.dummy}function vr(e){return\"selfedge\"==e.dummy}var lr=50,gr=20,pr=50,mr=\"tb\",wr=1,_r=1,br=0,yr=0,kr=10,Er=\"r\";function Nr(e={}){var r={};for(var n of Object.keys(e))r[n.toLowerCase()]=e[n];return r}function xr(e){return e.nodes().map((function(r){var n=e.node(r),t=e.parent(r),o={v:r};return void 0!==n&&(o.value=n),void 0!==t&&(o.parent=t),o}))}function Ir(e){return e.edges().map((function(r){var n=e.edge(r),t={v:r.v,w:r.w};return void 0!==r.name&&(t.name=r.name),void 0!==n&&(t.value=n),t}))}var Cr=Object.freeze({__proto__:null,write:function(e){var r={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:xr(e),edges:Ir(e)};return void 0!==e.graph()&&(r.value=JSON.parse(JSON.stringify(e.graph()))),r},read:function(e){var r=new x(e.options).setGraph(e.value);for(var n of e.nodes)r.setNode(n.v,n.value),n.parent&&r.setParent(n.v,n.parent);for(var n of e.edges)r.setEdge({v:n.v,w:n.w,name:n.name},n.value);return r}}),Or={Graph:x,GraphLike:I,alg:Le,json:Cr,PriorityQueue:be};e.Graph=x,e.GraphLike=I,e.PriorityQueue=be,e.acyclic=He,e.addBorderSegments=Ue,e.alg=Le,e.coordinateSystem=er,e.data=o,e.debug=ir,e.graphlib=Or,e.greedyFAS=Qe,e.json=Cr,e.layout=function(e,r){var n=r&&r.debugTiming?Y:B;n(\"layout\",(function(){var r=n(\"  buildLayoutGraph\",(function(){return function(e){var r,n,t,o,i,a,s,d,u,f,h,c,v,l,g,p=new x({multigraph:!0,compound:!0}),m=Nr(e.graph()),w={nodesep:null!==(r=m.nodesep)&&void 0!==r?r:pr,edgesep:null!==(n=m.edgesep)&&void 0!==n?n:gr,ranksep:null!==(t=m.ranksep)&&void 0!==t?t:lr,marginx:+(null!==(o=m.marginx)&&void 0!==o?o:0),marginy:+(null!==(i=m.marginy)&&void 0!==i?i:0),acyclicer:m.acyclicer,ranker:null!==(a=m.ranker)&&void 0!==a?a:\"network-simplex\",rankdir:null!==(s=m.rankdir)&&void 0!==s?s:mr,align:m.align};for(var _ of(p.setGraph(w),e.nodes())){var b=Nr(e.node(_)),y={width:+(null!==(d=b&&b.width)&&void 0!==d?d:0),height:+(null!==(u=b&&b.height)&&void 0!==u?u:0)};p.setNode(_,y),p.setParent(_,e.parent(_))}for(var k of e.edges()){var E=Nr(e.edge(k)),N={minlen:null!==(f=E.minlen)&&void 0!==f?f:wr,weight:null!==(h=E.weight)&&void 0!==h?h:_r,width:null!==(c=E.width)&&void 0!==c?c:br,height:null!==(v=E.height)&&void 0!==v?v:yr,labeloffset:null!==(l=E.labeloffset)&&void 0!==l?l:kr,labelpos:null!==(g=E.labelpos)&&void 0!==g?g:Er};p.setEdge(k,N)}return p}(e)}));n(\"  runLayout\",(function(){!function(e,r){r(\"    makeSpaceForEdgeLabels\",(function(){!function(e){var r=e.graph();for(var n of(r.ranksep/=2,e.edges())){var t=e.edge(n);t.minlen*=2,\"c\"!==t.labelpos.toLowerCase()&&(\"TB\"===r.rankdir||\"BT\"===r.rankdir?t.width+=t.labeloffset:t.height+=t.labeloffset)}}(e)})),r(\"    removeSelfEdges\",(function(){!function(e){for(var r of e.edges())if(r.v===r.w){var n=e.node(r.v);n.selfEdges||(n.selfEdges=[]),n.selfEdges.push({e:r,label:e.edge(r)}),e.removeEdge(r)}}(e)})),r(\"    acyclic\",(function(){He.run(e)})),r(\"    nestingGraph.run\",(function(){fr.run(e)})),r(\"    rank\",(function(){Be(S(e))})),r(\"    injectEdgeLabelProxies\",(function(){!function(e){for(var r of e.edges()){var n=e.edge(r);if(n.width&&n.height){var t=e.node(r.v),o=e.node(r.w);L(e,\"edge-proxy\",{rank:(o.rank-t.rank)/2+t.rank,e:r},\"_ep\")}}}(e)})),r(\"    removeEmptyRanks\",(function(){D(e)})),r(\"    nestingGraph.cleanup\",(function(){fr.cleanup(e)})),r(\"    normalizeRanks\",(function(){F(e)})),r(\"    assignRankMinMax\",(function(){!function(e){var r=0;for(var n of e.nodes()){var t=e.node(n);t.borderTop&&(t.minRank=e.node(t.borderTop).rank,t.maxRank=e.node(t.borderBottom).rank,r=Math.max(r,t.maxRank))}e.graph().maxRank=r}(e)})),r(\"    removeEdgeLabelProxies\",(function(){!function(e){for(var r of e.nodes()){var n=e.node(r);cr(n)&&(e.edge(n.e).labelRank=n.rank,e.removeNode(r))}}(e)})),r(\"    normalize.run\",(function(){ar.run(e)})),r(\"    parentDummyChains\",(function(){dr(e)})),r(\"    addBorderSegments\",(function(){Ue(e)})),r(\"    order\",(function(){X(e)})),r(\"    insertSelfEdges\",(function(){!function(e){var r,n=R(e);for(var t of n)for(var o=0,i=0;i<t.length;i++){var a=t[i],s=e.node(a);for(var d of(s.order=i+o,null!==(r=s.selfEdges)&&void 0!==r?r:[]))L(e,\"selfedge\",{width:d.label.width,height:d.label.height,rank:s.rank,order:i+ ++o,e:d.e,label:d.label},\"_se\");delete s.selfEdges}}(e)})),r(\"    adjustCoordinateSystem\",(function(){er.adjust(e)})),r(\"    position\",(function(){ge(e)})),r(\"    positionSelfEdges\",(function(){!function(e){for(var r of e.nodes()){var n=e.node(r);if(vr(n)){var t=e.node(n.e.v),o=t.x+t.width/2,i=t.y,a=n.x-o,s=t.height/2;e.setEdge(n.e,n.label),e.removeNode(r),n.label.points=[{x:o+2*a/3,y:i-s},{x:o+5*a/6,y:i-s},{x:o+a,y:i},{x:o+5*a/6,y:i+s},{x:o+2*a/3,y:i+s}],n.label.x=n.x,n.label.y=n.y}}}(e)})),r(\"    removeBorderNodes\",(function(){!function(e){for(var r of e.nodes())if(e.children(r).length){var n=e.node(r),t=e.node(n.borderTop),o=e.node(n.borderBottom),i=e.node(d(n.borderLeft)),a=e.node(d(n.borderRight));n.width=Math.abs(a.x-i.x),n.height=Math.abs(o.y-t.y),n.x=i.x+n.width/2,n.y=t.y+n.height/2}for(var r of e.nodes())\"border\"===e.node(r).dummy&&e.removeNode(r)}(e)})),r(\"    normalize.undo\",(function(){ar.undo(e)})),r(\"    fixupEdgeLabelCoords\",(function(){!function(e){for(var r of e.edges()){var n=e.edge(r);if(s(n,\"x\"))switch(\"l\"!==n.labelpos&&\"r\"!==n.labelpos||(n.width-=n.labeloffset),n.labelpos){case\"l\":n.x-=n.width/2+n.labeloffset;break;case\"r\":n.x+=n.width/2+n.labeloffset}}}(e)})),r(\"    undoCoordinateSystem\",(function(){er.undo(e)})),r(\"    translateGraph\",(function(){!function(e){var r,n,t,o=Number.POSITIVE_INFINITY,i=0,a=Number.POSITIVE_INFINITY,d=0,u=e.graph(),f=null!==(r=u.marginx)&&void 0!==r?r:0,h=null!==(n=u.marginy)&&void 0!==n?n:0;function c(e){var r=e.x,n=e.y,t=e.width,s=e.height;o=Math.min(o,r-t/2),i=Math.max(i,r+t/2),a=Math.min(a,n-s/2),d=Math.max(d,n+s/2)}for(var v of e.nodes())c(e.node(v));for(var l of e.edges()){s(p=e.edge(l),\"x\")&&c(p)}for(var v of(o-=f,a-=h,e.nodes())){var g=e.node(v);g.x-=o,g.y-=a}for(var l of e.edges()){var p=e.edge(l);for(var m of null!==(t=p.points)&&void 0!==t?t:[])m.x-=o,m.y-=a;p.hasOwnProperty(\"x\")&&(p.x-=o),p.hasOwnProperty(\"y\")&&(p.y-=a)}u.width=i-o+f,u.height=d-a+h}(e)})),r(\"    assignNodeIntersects\",(function(){!function(e){for(var r of e.edges()){var n,t,o=e.edge(r),i=e.node(r.v),a=e.node(r.w);o.points?(n=o.points[0],t=o.points[o.points.length-1]):(o.points=[],n=a,t=i),o.points.unshift(P(i,n)),o.points.push(P(a,t))}}(e)})),r(\"    reversePoints\",(function(){!function(e){for(var r of e.edges()){var n=e.edge(r);n.reversed&&n.points.reverse()}}(e)})),r(\"    acyclic.undo\",(function(){He.undo(e)}))}(r,n)})),n(\"  updateInputGraph\",(function(){!function(e,r){for(var n of e.nodes()){var t=e.node(n),o=r.node(n);t&&(t.x=o.x,t.y=o.y,r.children(n).length&&(t.width=o.width,t.height=o.height))}for(var i of e.edges()){var a=e.edge(i),d=r.edge(i);a.points=d.points,s(d,\"x\")&&(a.x=d.x,a.y=d.y)}e.graph().width=r.graph().width,e.graph().height=r.graph().height}(e,r)}))}))},e.nestingGraph=fr,e.normalize=ar,e.order=ee,e.parentDummyChains=dr,e.position=pe,e.rank=$e,e.util=A,e.version=\"0.1.3\",Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = require('./dist/graphre');\n",";(function (factoryFn) {\n  if (typeof module === 'object' && module.exports)\n  \tmodule.exports = factoryFn(require('graphre'));\n  else window.nomnoml = factoryFn(graphre);\n})(function (graphre) {\n  var nomnoml;\n(function (nomnoml) {\n    function buildStyle(conf, title, body) {\n        if (body === void 0) { body = {}; }\n        return {\n            title: {\n                bold: title.bold || false,\n                underline: title.underline || false,\n                italic: title.italic || false,\n                center: title.center || false,\n            },\n            body: {\n                bold: body.bold || false,\n                underline: body.underline || false,\n                italic: body.italic || false,\n                center: body.center || false,\n            },\n            dashed: conf.dashed || false,\n            empty: conf.empty || false,\n            fill: conf.fill || undefined,\n            stroke: conf.stroke || undefined,\n            visual: conf.visual || 'class',\n            direction: conf.direction || undefined,\n        };\n    }\n    nomnoml.buildStyle = buildStyle;\n    var Compartment = (function () {\n        function Compartment(lines, nodes, relations) {\n            this.lines = lines;\n            this.nodes = nodes;\n            this.relations = relations;\n        }\n        return Compartment;\n    }());\n    nomnoml.Compartment = Compartment;\n    var Relation = (function () {\n        function Relation() {\n        }\n        return Relation;\n    }());\n    nomnoml.Relation = Relation;\n    var Classifier = (function () {\n        function Classifier(type, name, compartments) {\n            this.type = type;\n            this.name = name;\n            this.compartments = compartments;\n            this.dividers = [];\n        }\n        return Classifier;\n    }());\n    nomnoml.Classifier = Classifier;\n})(nomnoml || (nomnoml = {}));\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar nomnoml;\n(function (nomnoml) {\n    function layout(measurer, config, ast) {\n        function measureLines(lines, fontWeight) {\n            if (!lines.length)\n                return { width: 0, height: config.padding };\n            measurer.setFont(config, fontWeight, 'normal');\n            return {\n                width: Math.round(Math.max.apply(Math, lines.map(measurer.textWidth)) + 2 * config.padding),\n                height: Math.round(measurer.textHeight() * lines.length + 2 * config.padding)\n            };\n        }\n        function layoutCompartment(c, compartmentIndex, style) {\n            var _a;\n            var textSize = measureLines(c.lines, compartmentIndex ? 'normal' : 'bold');\n            if (!c.nodes.length && !c.relations.length) {\n                c.width = textSize.width;\n                c.height = textSize.height;\n                c.offset = { x: config.padding, y: config.padding };\n                return;\n            }\n            c.nodes.forEach(layoutClassifier);\n            var g = new graphre.graphlib.Graph();\n            g.setGraph({\n                rankdir: style.direction || config.direction,\n                nodesep: config.spacing,\n                edgesep: config.spacing,\n                ranksep: config.spacing,\n                acyclicer: config.acyclicer,\n                ranker: config.ranker\n            });\n            for (var _i = 0, _b = c.nodes; _i < _b.length; _i++) {\n                var e = _b[_i];\n                g.setNode(e.name, { width: e.layoutWidth, height: e.layoutHeight });\n            }\n            for (var _c = 0, _d = c.relations; _c < _d.length; _c++) {\n                var r = _d[_c];\n                if (r.assoc.indexOf('_') > -1) {\n                    g.setEdge(r.start, r.end, { id: r.id, minlen: 0 });\n                }\n                else if (((_a = config.gravity) !== null && _a !== void 0 ? _a : 1) != 1) {\n                    g.setEdge(r.start, r.end, { id: r.id, minlen: config.gravity });\n                }\n                else {\n                    g.setEdge(r.start, r.end, { id: r.id });\n                }\n            }\n            graphre.layout(g);\n            var rels = nomnoml.skanaar.indexBy(c.relations, 'id');\n            var nodes = nomnoml.skanaar.indexBy(c.nodes, 'name');\n            g.nodes().forEach(function (name) {\n                var node = g.node(name);\n                nodes[name].x = node.x;\n                nodes[name].y = node.y;\n            });\n            var left = 0;\n            var right = 0;\n            var top = 0;\n            var bottom = 0;\n            g.edges().forEach(function (edgeObj) {\n                var edge = g.edge(edgeObj);\n                var start = nodes[edgeObj.v];\n                var end = nodes[edgeObj.w];\n                var rel = rels[edge.id];\n                rel.path = __spreadArrays([start], edge.points, [end]).map(toPoint);\n                var startP = rel.path[1];\n                var endP = rel.path[rel.path.length - 2];\n                layoutLabel(rel.startLabel, startP, adjustQuadrant(quadrant(startP, start, 4), start, end));\n                layoutLabel(rel.endLabel, endP, adjustQuadrant(quadrant(endP, end, 2), end, start));\n                left = Math.min.apply(Math, __spreadArrays([left, rel.startLabel.x, rel.endLabel.x], edge.points.map(function (e) { return e.x; }), edge.points.map(function (e) { return e.x; })));\n                right = Math.max.apply(Math, __spreadArrays([right, rel.startLabel.x + rel.startLabel.width, rel.endLabel.x + rel.endLabel.width], edge.points.map(function (e) { return e.x; })));\n                top = Math.min.apply(Math, __spreadArrays([top, rel.startLabel.y, rel.endLabel.y], edge.points.map(function (e) { return e.y; })));\n                bottom = Math.max.apply(Math, __spreadArrays([bottom, rel.startLabel.y + rel.startLabel.height, rel.endLabel.y + rel.endLabel.height], edge.points.map(function (e) { return e.y; })));\n            });\n            var graph = g.graph();\n            var width = Math.max(graph.width, right - left);\n            var height = Math.max(graph.height, bottom - top);\n            var graphHeight = height ? height + 2 * config.gutter : 0;\n            var graphWidth = width ? width + 2 * config.gutter : 0;\n            c.width = Math.max(textSize.width, graphWidth) + 2 * config.padding;\n            c.height = textSize.height + graphHeight + config.padding;\n            c.offset = { x: config.padding - left, y: config.padding - top };\n        }\n        function toPoint(o) {\n            return { x: o.x, y: o.y };\n        }\n        function layoutLabel(label, point, quadrant) {\n            if (!label.text) {\n                label.width = 0;\n                label.height = 0;\n                label.x = point.x;\n                label.y = point.y;\n            }\n            else {\n                var fontSize = config.fontSize;\n                var lines = label.text.split('`');\n                label.width = Math.max.apply(Math, lines.map(function (l) { return measurer.textWidth(l); })),\n                    label.height = fontSize * lines.length;\n                label.x = point.x + ((quadrant == 1 || quadrant == 4) ? config.padding : -label.width - config.padding),\n                    label.y = point.y + ((quadrant == 3 || quadrant == 4) ? config.padding : -label.height - config.padding);\n            }\n        }\n        function quadrant(point, node, fallback) {\n            if (point.x < node.x && point.y < node.y)\n                return 1;\n            if (point.x > node.x && point.y < node.y)\n                return 2;\n            if (point.x > node.x && point.y > node.y)\n                return 3;\n            if (point.x < node.x && point.y > node.y)\n                return 4;\n            return fallback;\n        }\n        function adjustQuadrant(quadrant, point, opposite) {\n            if ((opposite.x == point.x) || (opposite.y == point.y))\n                return quadrant;\n            var flipHorizontally = [4, 3, 2, 1];\n            var flipVertically = [2, 1, 4, 3];\n            var oppositeQuadrant = (opposite.y < point.y) ?\n                ((opposite.x < point.x) ? 2 : 1) :\n                ((opposite.x < point.x) ? 3 : 4);\n            if (oppositeQuadrant === quadrant) {\n                if (config.direction === 'LR')\n                    return flipHorizontally[quadrant - 1];\n                if (config.direction === 'TB')\n                    return flipVertically[quadrant - 1];\n            }\n            return quadrant;\n        }\n        function layoutClassifier(clas) {\n            var style = config.styles[clas.type] || nomnoml.styles.CLASS;\n            clas.compartments.forEach(function (co, i) { layoutCompartment(co, i, style); });\n            nomnoml.layouters[style.visual](config, clas);\n            clas.layoutWidth = clas.width + 2 * config.edgeMargin;\n            clas.layoutHeight = clas.height + 2 * config.edgeMargin;\n        }\n        layoutCompartment(ast, 0, nomnoml.styles.CLASS);\n        return ast;\n    }\n    nomnoml.layout = layout;\n})(nomnoml || (nomnoml = {}));\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar nomnoml;\n(function (nomnoml) {\n    var ImportDepthError = (function (_super) {\n        __extends(ImportDepthError, _super);\n        function ImportDepthError() {\n            return _super.call(this, 'max_import_depth exceeded') || this;\n        }\n        return ImportDepthError;\n    }(Error));\n    nomnoml.ImportDepthError = ImportDepthError;\n    function compileFile(filepath, maxImportDepth) {\n        var fs = require('fs');\n        var path = require('path');\n        var directory = path.dirname(filepath);\n        var rootFileName = filepath.substr(directory.length);\n        function loadFile(filename) {\n            return fs.readFileSync(path.join(directory, filename), { encoding: 'utf8' });\n        }\n        return nomnoml.processImports(loadFile(rootFileName), loadFile, maxImportDepth);\n    }\n    nomnoml.compileFile = compileFile;\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    nomnoml.version = '1.3.1';\n    function fitCanvasSize(canvas, rect, zoom) {\n        canvas.width = rect.width * zoom;\n        canvas.height = rect.height * zoom;\n    }\n    function Measurer(config, graphics) {\n        return {\n            setFont: function (conf, bold, ital) {\n                graphics.setFont(conf.font, bold, ital, config.fontSize);\n            },\n            textWidth: function (s) { return graphics.measureText(s).width; },\n            textHeight: function () { return config.leading * config.fontSize; }\n        };\n    }\n    ;\n    function parseAndRender(code, graphics, canvas, scale) {\n        var parsedDiagram = nomnoml.parse(code);\n        var config = parsedDiagram.config;\n        var measurer = Measurer(config, graphics);\n        var layout = nomnoml.layout(measurer, config, parsedDiagram.root);\n        if (canvas) {\n            fitCanvasSize(canvas, layout, config.zoom * scale);\n        }\n        config.zoom *= scale;\n        nomnoml.render(graphics, config, layout, measurer.setFont);\n        return { config: config, layout: layout };\n    }\n    function draw(canvas, code, scale) {\n        return parseAndRender(code, nomnoml.skanaar.Canvas(canvas), canvas, scale || 1);\n    }\n    nomnoml.draw = draw;\n    function renderSvg(code, document) {\n        var skCanvas = nomnoml.skanaar.Svg('', document);\n        var _a = parseAndRender(code, skCanvas, null, 1), config = _a.config, layout = _a.layout;\n        return skCanvas.serialize({\n            width: layout.width,\n            height: layout.height\n        }, code, config.title);\n    }\n    nomnoml.renderSvg = renderSvg;\n    function processImports(source, loadFile, maxImportDepth) {\n        if (maxImportDepth === void 0) { maxImportDepth = 10; }\n        if (maxImportDepth == -1) {\n            throw new nomnoml.ImportDepthError();\n        }\n        function lenientLoadFile(key) {\n            try {\n                return loadFile(key) || '';\n            }\n            catch (e) {\n                return '';\n            }\n        }\n        return source.replace(/#import: *(.*)/g, function (a, file) {\n            return processImports(lenientLoadFile(file), loadFile, maxImportDepth - 1);\n        });\n    }\n    nomnoml.processImports = processImports;\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    var Line = (function () {\n        function Line() {\n        }\n        return Line;\n    }());\n    function parse(source) {\n        function onlyCompilables(line) {\n            var ok = line[0] !== '#' && line.trim().substring(0, 2) !== '//';\n            return ok ? line.trim() : '';\n        }\n        function isDirective(line) { return line.text[0] === '#'; }\n        var lines = source.split('\\n').map(function (s, i) {\n            return { text: s, index: i };\n        });\n        var pureDirectives = lines.filter(isDirective);\n        var directives = {};\n        pureDirectives.forEach(function (line) {\n            try {\n                var tokens = line.text.substring(1).split(':');\n                directives[tokens[0].trim()] = tokens[1].trim();\n            }\n            catch (e) {\n                throw new Error('line ' + (line.index + 1) + ': Malformed directive');\n            }\n        });\n        var pureDiagramCode = lines.map(function (e) { return onlyCompilables(e.text); }).join('\\n');\n        if (pureDiagramCode == '') {\n            return {\n                root: new nomnoml.Compartment([], [], []),\n                config: getConfig(directives)\n            };\n        }\n        var parseTree = nomnoml.intermediateParse(pureDiagramCode);\n        return {\n            root: nomnoml.transformParseIntoSyntaxTree(parseTree),\n            config: getConfig(directives)\n        };\n        function directionToDagre(word) {\n            if (word == 'down')\n                return 'TB';\n            if (word == 'right')\n                return 'LR';\n            else\n                return 'TB';\n        }\n        function parseRanker(word) {\n            if (word == 'network-simplex' || word == 'tight-tree' || word == 'longest-path') {\n                return word;\n            }\n            return 'network-simplex';\n        }\n        function parseCustomStyle(styleDef) {\n            var contains = nomnoml.skanaar.hasSubstring;\n            var floatingKeywords = styleDef.replace(/[a-z]*=[^ ]+/g, '');\n            var titleDef = nomnoml.skanaar.last(styleDef.match('title=([^ ]*)') || ['']);\n            var bodyDef = nomnoml.skanaar.last(styleDef.match('body=([^ ]*)') || ['']);\n            return {\n                title: {\n                    bold: contains(titleDef, 'bold') || contains(floatingKeywords, 'bold'),\n                    underline: contains(titleDef, 'underline') || contains(floatingKeywords, 'underline'),\n                    italic: contains(titleDef, 'italic') || contains(floatingKeywords, 'italic'),\n                    center: !(contains(titleDef, 'left') || contains(styleDef, 'align=left')),\n                },\n                body: {\n                    bold: contains(bodyDef, 'bold'),\n                    underline: contains(bodyDef, 'underline'),\n                    italic: contains(bodyDef, 'italic'),\n                    center: contains(bodyDef, 'center'),\n                },\n                dashed: contains(styleDef, 'dashed'),\n                empty: contains(styleDef, 'empty'),\n                fill: nomnoml.skanaar.last(styleDef.match('fill=([^ ]*)') || []),\n                stroke: nomnoml.skanaar.last(styleDef.match('stroke=([^ ]*)') || []),\n                visual: (nomnoml.skanaar.last(styleDef.match('visual=([^ ]*)') || []) || 'class'),\n                direction: directionToDagre(nomnoml.skanaar.last(styleDef.match('direction=([^ ]*)') || [])),\n            };\n        }\n        function getConfig(d) {\n            var _a;\n            var userStyles = {};\n            for (var key in d) {\n                if (key[0] != '.')\n                    continue;\n                var styleDef = d[key];\n                userStyles[key.substring(1).toUpperCase()] = parseCustomStyle(styleDef);\n            }\n            return {\n                arrowSize: +d.arrowSize || 1,\n                bendSize: +d.bendSize || 0.3,\n                direction: directionToDagre(d.direction),\n                gutter: +d.gutter || 5,\n                edgeMargin: (+d.edgeMargin) || 0,\n                gravity: +((_a = d.gravity) !== null && _a !== void 0 ? _a : 1),\n                edges: d.edges == 'hard' ? 'hard' : 'rounded',\n                fill: (d.fill || '#eee8d5;#fdf6e3;#eee8d5;#fdf6e3').split(';'),\n                background: d.background || 'transparent',\n                fillArrows: d.fillArrows === 'true',\n                font: d.font || 'Helvetica',\n                fontSize: (+d.fontSize) || 12,\n                leading: (+d.leading) || 1.25,\n                lineWidth: (+d.lineWidth) || 3,\n                padding: (+d.padding) || 8,\n                spacing: (+d.spacing) || 40,\n                stroke: d.stroke || '#33322E',\n                title: d.title || '',\n                zoom: +d.zoom || 1,\n                acyclicer: d.acyclicer === 'greedy' ? 'greedy' : undefined,\n                ranker: parseRanker(d.ranker),\n                styles: nomnoml.skanaar.merged(nomnoml.styles, userStyles)\n            };\n        }\n    }\n    nomnoml.parse = parse;\n    function intermediateParse(source) {\n        return nomnomlCoreParser.parse(source);\n    }\n    nomnoml.intermediateParse = intermediateParse;\n    function transformParseIntoSyntaxTree(entity) {\n        function isAstClassifier(obj) {\n            return obj.parts !== undefined;\n        }\n        function isAstRelation(obj) {\n            return obj.assoc !== undefined;\n        }\n        function isAstCompartment(obj) {\n            return Array.isArray(obj);\n        }\n        var relationId = 0;\n        function transformCompartment(slots) {\n            var lines = [];\n            var rawClassifiers = [];\n            var relations = [];\n            slots.forEach(function (p) {\n                if (typeof p === 'string')\n                    lines.push(p);\n                if (isAstRelation(p)) {\n                    rawClassifiers.push(p.start);\n                    rawClassifiers.push(p.end);\n                    relations.push({\n                        id: relationId++,\n                        assoc: p.assoc,\n                        start: p.start.parts[0][0],\n                        end: p.end.parts[0][0],\n                        startLabel: { text: p.startLabel },\n                        endLabel: { text: p.endLabel }\n                    });\n                }\n                if (isAstClassifier(p)) {\n                    rawClassifiers.push(p);\n                }\n            });\n            var allClassifiers = rawClassifiers\n                .map(transformClassifier)\n                .sort(function (a, b) {\n                return b.compartments.length - a.compartments.length;\n            });\n            var uniqClassifiers = nomnoml.skanaar.uniqueBy(allClassifiers, 'name');\n            var uniqRelations = relations.filter(function (a) {\n                for (var _i = 0, relations_1 = relations; _i < relations_1.length; _i++) {\n                    var b = relations_1[_i];\n                    if (a === b)\n                        return true;\n                    if (b.start == a.start && b.end == a.end)\n                        return false;\n                }\n                return true;\n            });\n            return new nomnoml.Compartment(lines, uniqClassifiers, uniqRelations);\n        }\n        function transformClassifier(entity) {\n            var compartments = entity.parts.map(transformCompartment);\n            return new nomnoml.Classifier(entity.type, entity.id, compartments);\n        }\n        return transformCompartment(entity);\n    }\n    nomnoml.transformParseIntoSyntaxTree = transformParseIntoSyntaxTree;\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    function render(graphics, config, compartment, setFont) {\n        var g = graphics;\n        var vm = nomnoml.skanaar.vector;\n        function renderCompartment(compartment, color, style, level) {\n            g.save();\n            g.translate(compartment.offset.x, compartment.offset.y);\n            g.fillStyle(color || config.stroke);\n            compartment.lines.forEach(function (text, i) {\n                g.textAlign(style.center ? 'center' : 'left');\n                var x = style.center ? compartment.width / 2 - config.padding : 0;\n                var y = (0.5 + (i + 0.5) * config.leading) * config.fontSize;\n                if (text) {\n                    g.fillText(text, x, y);\n                }\n                if (style.underline) {\n                    var w = g.measureText(text).width;\n                    y += Math.round(config.fontSize * 0.2) + 0.5;\n                    if (style.center) {\n                        g.path([{ x: x - w / 2, y: y }, { x: x + w / 2, y: y }]).stroke();\n                    }\n                    else {\n                        g.path([{ x: x, y: y }, { x: x + w, y: y }]).stroke();\n                    }\n                    g.lineWidth(config.lineWidth);\n                }\n            });\n            g.translate(config.gutter, config.gutter);\n            compartment.relations.forEach(function (r) { renderRelation(r); });\n            compartment.nodes.forEach(function (n) { renderNode(n, level); });\n            g.restore();\n        }\n        function renderNode(node, level) {\n            var x = Math.round(node.x - node.width / 2);\n            var y = Math.round(node.y - node.height / 2);\n            var style = config.styles[node.type] || nomnoml.styles.CLASS;\n            g.fillStyle(style.fill || config.fill[level] || nomnoml.skanaar.last(config.fill));\n            g.strokeStyle(style.stroke || config.stroke);\n            if (style.dashed) {\n                var dash = Math.max(4, 2 * config.lineWidth);\n                g.setLineDash([dash, dash]);\n            }\n            var drawNode = nomnoml.visualizers[style.visual] || nomnoml.visualizers.class;\n            g.setData('name', node.name);\n            drawNode(node, x, y, config, g);\n            g.setLineDash([]);\n            g.save();\n            g.translate(x, y);\n            node.compartments.forEach(function (part, i) {\n                var textStyle = i == 0 ? style.title : style.body;\n                if (style.empty)\n                    return;\n                g.save();\n                g.translate(part.x, part.y);\n                setFont(config, textStyle.bold ? 'bold' : 'normal', textStyle.italic ? 'italic' : undefined);\n                renderCompartment(part, style.stroke, textStyle, level + 1);\n                g.restore();\n            });\n            for (var _i = 0, _a = node.dividers; _i < _a.length; _i++) {\n                var divider = _a[_i];\n                g.path(divider).stroke();\n            }\n            g.restore();\n        }\n        function strokePath(p) {\n            if (config.edges === 'rounded') {\n                var radius = config.spacing * config.bendSize;\n                g.beginPath();\n                g.moveTo(p[0].x, p[0].y);\n                for (var i = 1; i < p.length - 1; i++) {\n                    g.arcTo(p[i].x, p[i].y, p[i + 1].x, p[i + 1].y, radius);\n                }\n                g.lineTo(nomnoml.skanaar.last(p).x, nomnoml.skanaar.last(p).y);\n                g.stroke();\n            }\n            else\n                g.path(p).stroke();\n        }\n        var empty = false, filled = true, diamond = true;\n        function renderLabel(label) {\n            if (!label || !label.text)\n                return;\n            var fontSize = config.fontSize;\n            var lines = label.text.split('`');\n            lines.forEach(function (l, i) { return g.fillText(l, label.x, label.y + fontSize * (i + 1)); });\n        }\n        function renderRelation(r) {\n            var start = r.path[1];\n            var end = r.path[r.path.length - 2];\n            var path = r.path.slice(1, -1);\n            g.fillStyle(config.stroke);\n            setFont(config, 'normal');\n            renderLabel(r.startLabel);\n            renderLabel(r.endLabel);\n            if (r.assoc !== '-/-' && r.assoc !== '_/_') {\n                if (nomnoml.skanaar.hasSubstring(r.assoc, '--') || nomnoml.skanaar.hasSubstring(r.assoc, '__')) {\n                    var dash = Math.max(4, 2 * config.lineWidth);\n                    g.setLineDash([dash, dash]);\n                    strokePath(path);\n                    g.setLineDash([]);\n                }\n                else\n                    strokePath(path);\n            }\n            function drawArrowEnd(id, path, end) {\n                if (id === '>' || id === '<')\n                    drawArrow(path, filled, end, false);\n                else if (id === ':>' || id === '<:')\n                    drawArrow(path, empty, end, false);\n                else if (id === '+')\n                    drawArrow(path, filled, end, diamond);\n                else if (id === 'o')\n                    drawArrow(path, empty, end, diamond);\n            }\n            var tokens = r.assoc.split(/[-_]/);\n            drawArrowEnd(nomnoml.skanaar.last(tokens), path, end);\n            drawArrowEnd(tokens[0], path.reverse(), start);\n        }\n        function drawArrow(path, isOpen, arrowPoint, diamond) {\n            var size = config.spacing * config.arrowSize / 30;\n            var v = vm.diff(path[path.length - 2], nomnoml.skanaar.last(path));\n            var nv = vm.normalize(v);\n            function getArrowBase(s) { return vm.add(arrowPoint, vm.mult(nv, s * size)); }\n            var arrowBase = getArrowBase(diamond ? 7 : 10);\n            var t = vm.rot(nv);\n            var arrowButt = (diamond) ? getArrowBase(14)\n                : (isOpen && !config.fillArrows) ? getArrowBase(5) : arrowBase;\n            var arrow = [\n                vm.add(arrowBase, vm.mult(t, 4 * size)),\n                arrowButt,\n                vm.add(arrowBase, vm.mult(t, -4 * size)),\n                arrowPoint\n            ];\n            g.fillStyle(isOpen ? config.stroke : config.fill[0]);\n            g.circuit(arrow).fillAndStroke();\n        }\n        function snapToPixels() {\n            if (config.lineWidth % 2 === 1)\n                g.translate(0.5, 0.5);\n        }\n        function setBackground() {\n            g.clear();\n            g.save();\n            g.strokeStyle('transparent');\n            g.fillStyle(config.background);\n            g.rect(0, 0, compartment.width, compartment.height).fill();\n            g.restore();\n        }\n        g.save();\n        g.scale(config.zoom, config.zoom);\n        setBackground();\n        setFont(config, 'bold');\n        g.lineWidth(config.lineWidth);\n        g.lineJoin('round');\n        g.lineCap('round');\n        g.strokeStyle(config.stroke);\n        snapToPixels();\n        renderCompartment(compartment, undefined, nomnoml.buildStyle({}, {}).title, 0);\n        g.restore();\n    }\n    nomnoml.render = render;\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    var skanaar;\n    (function (skanaar) {\n        function Canvas(canvas, callbacks) {\n            var ctx = canvas.getContext('2d');\n            var mousePos = { x: 0, y: 0 };\n            var twopi = 2 * 3.1416;\n            function mouseEventToPos(event) {\n                var e = canvas;\n                return {\n                    x: event.clientX - e.getBoundingClientRect().left - e.clientLeft + e.scrollLeft,\n                    y: event.clientY - e.getBoundingClientRect().top - e.clientTop + e.scrollTop\n                };\n            }\n            if (callbacks) {\n                canvas.addEventListener('mousedown', function (event) {\n                    if (callbacks.mousedown)\n                        callbacks.mousedown(mouseEventToPos(event));\n                });\n                canvas.addEventListener('mouseup', function (event) {\n                    if (callbacks.mouseup)\n                        callbacks.mouseup(mouseEventToPos(event));\n                });\n                canvas.addEventListener('mousemove', function (event) {\n                    mousePos = mouseEventToPos(event);\n                    if (callbacks.mousemove)\n                        callbacks.mousemove(mouseEventToPos(event));\n                });\n            }\n            var chainable = {\n                stroke: function () {\n                    ctx.stroke();\n                    return chainable;\n                },\n                fill: function () {\n                    ctx.fill();\n                    return chainable;\n                },\n                fillAndStroke: function () {\n                    ctx.fill();\n                    ctx.stroke();\n                    return chainable;\n                }\n            };\n            function tracePath(path, offset, s) {\n                s = s === undefined ? 1 : s;\n                offset = offset || { x: 0, y: 0 };\n                ctx.beginPath();\n                ctx.moveTo(offset.x + s * path[0].x, offset.y + s * path[0].y);\n                for (var i = 1, len = path.length; i < len; i++)\n                    ctx.lineTo(offset.x + s * path[i].x, offset.y + s * path[i].y);\n                return chainable;\n            }\n            return {\n                mousePos: function () { return mousePos; },\n                width: function () { return canvas.width; },\n                height: function () { return canvas.height; },\n                clear: function () {\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                },\n                circle: function (p, r) {\n                    ctx.beginPath();\n                    ctx.arc(p.x, p.y, r, 0, twopi);\n                    return chainable;\n                },\n                ellipse: function (center, rx, ry, start, stop) {\n                    if (start === undefined)\n                        start = 0;\n                    if (stop === undefined)\n                        stop = twopi;\n                    ctx.beginPath();\n                    ctx.save();\n                    ctx.translate(center.x, center.y);\n                    ctx.scale(1, ry / rx);\n                    ctx.arc(0, 0, rx / 2, start, stop);\n                    ctx.restore();\n                    return chainable;\n                },\n                arc: function (x, y, r, start, stop) {\n                    ctx.beginPath();\n                    ctx.moveTo(x, y);\n                    ctx.arc(x, y, r, start, stop);\n                    return chainable;\n                },\n                roundRect: function (x, y, w, h, r) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + r, y);\n                    ctx.arcTo(x + w, y, x + w, y + r, r);\n                    ctx.lineTo(x + w, y + h - r);\n                    ctx.arcTo(x + w, y + h, x + w - r, y + h, r);\n                    ctx.lineTo(x + r, y + h);\n                    ctx.arcTo(x, y + h, x, y + h - r, r);\n                    ctx.lineTo(x, y + r);\n                    ctx.arcTo(x, y, x + r, y, r);\n                    ctx.closePath();\n                    return chainable;\n                },\n                rect: function (x, y, w, h) {\n                    ctx.beginPath();\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + w, y);\n                    ctx.lineTo(x + w, y + h);\n                    ctx.lineTo(x, y + h);\n                    ctx.closePath();\n                    return chainable;\n                },\n                path: tracePath,\n                circuit: function (path, offset, s) {\n                    tracePath(path, offset, s);\n                    ctx.closePath();\n                    return chainable;\n                },\n                setFont: function (font, bold, ital, fontSize) {\n                    ctx.font = bold + \" \" + (ital || '') + \" \" + fontSize + \"pt \" + font + \", Helvetica, sans-serif\";\n                },\n                fillStyle: function (s) { ctx.fillStyle = s; },\n                strokeStyle: function (s) { ctx.strokeStyle = s; },\n                textAlign: function (a) { ctx.textAlign = a; },\n                lineCap: function (cap) { ctx.lineCap = cap; },\n                lineJoin: function (join) { ctx.lineJoin = join; },\n                lineWidth: function (w) { ctx.lineWidth = w; },\n                arcTo: function () { return ctx.arcTo.apply(ctx, arguments); },\n                beginPath: function () { return ctx.beginPath.apply(ctx, arguments); },\n                fillText: function () { return ctx.fillText.apply(ctx, arguments); },\n                lineTo: function () { return ctx.lineTo.apply(ctx, arguments); },\n                measureText: function () { return ctx.measureText.apply(ctx, arguments); },\n                moveTo: function () { return ctx.moveTo.apply(ctx, arguments); },\n                restore: function () { return ctx.restore.apply(ctx, arguments); },\n                setData: function (name, value) { },\n                save: function () { return ctx.save.apply(ctx, arguments); },\n                scale: function () { return ctx.scale.apply(ctx, arguments); },\n                setLineDash: function () { return ctx.setLineDash.apply(ctx, arguments); },\n                stroke: function () { return ctx.stroke.apply(ctx, arguments); },\n                translate: function () { return ctx.translate.apply(ctx, arguments); }\n            };\n        }\n        skanaar.Canvas = Canvas;\n    })(skanaar = nomnoml.skanaar || (nomnoml.skanaar = {}));\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    var skanaar;\n    (function (skanaar) {\n        function xmlEncode(str) {\n            return (str !== null && str !== void 0 ? str : '').toString()\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&apos;');\n        }\n        skanaar.charWidths = {`\": 6, \"a\": 10, \"b\": 10, \"c\": 9, \"d\": 10, \"e\": 10, \"f\": 5, \"g\": 10, \"h\": 10, \"i\": 4, \"j\": 4, \"k\": 9, \"l\": 4, \"m\": 14, \"n\": 10, \"o\": 10, \"p\": 10, \"q\": 10, \"r\": 6, \"s\": 9, \"t\": 5, \"u\": 10, \"v\": 9, \"w\": 12, \"x\": 9, \"y\": 9, \"z\": 9, \"{\": 6, \"|\": 5, \"}\": 6, \"~\": 10 };\n        function Svg(globalStyle, document) {\n            var initialState = {\n                x: 0,\n                y: 0,\n                stroke: 'none',\n                strokeWidth: 1,\n                dashArray: 'none',\n                fill: 'none',\n                textAlign: 'left',\n                font: 'Helvetica, Arial, sans-serif',\n                fontSize: 12,\n                attributes: {}\n            };\n            var states = [initialState];\n            var elements = [];\n            var measurementCanvas = document ? document.createElement('canvas') : null;\n            var ctx = measurementCanvas ? measurementCanvas.getContext('2d') : null;\n            var Element = (function () {\n                function Element(name, attr, content) {\n                    this.name = name;\n                    this.attr = attr;\n                    this.content = content || undefined;\n                }\n                Element.prototype.stroke = function () {\n                    var base = this.attr.style || '';\n                    this.attr.style = base +\n                        'stroke:' + lastDefined('stroke') +\n                        ';fill:none' +\n                        ';stroke-dasharray:' + lastDefined('dashArray') +\n                        ';stroke-width:' + lastDefined('strokeWidth') + ';';\n                    return this;\n                };\n                Element.prototype.fill = function () {\n                    var base = this.attr.style || '';\n                    this.attr.style = base + 'stroke:none; fill:' + lastDefined('fill') + ';';\n                    return this;\n                };\n                Element.prototype.fillAndStroke = function () {\n                    var base = this.attr.style || '';\n                    this.attr.style = base +\n                        'stroke:' + lastDefined('stroke') +\n                        ';fill:' + lastDefined('fill') +\n                        ';stroke-dasharray:' + lastDefined('dashArray') +\n                        ';stroke-width:' + lastDefined('strokeWidth') + ';';\n                    return this;\n                };\n                return Element;\n            }());\n            function State(dx, dy) {\n                return {\n                    x: dx,\n                    y: dy,\n                    stroke: null,\n                    strokeWidth: null,\n                    fill: null,\n                    textAlign: null,\n                    dashArray: 'none',\n                    font: null,\n                    fontSize: null,\n                    attributes: null\n                };\n            }\n            function trans(coord, axis) {\n                states.forEach(function (t) { coord += t[axis]; });\n                return coord;\n            }\n            function tX(coord) { return Math.round(10 * trans(coord, 'x')) / 10; }\n            function tY(coord) { return Math.round(10 * trans(coord, 'y')) / 10; }\n            function lastDefined(property) {\n                for (var i = states.length - 1; i >= 0; i--)\n                    if (states[i][property])\n                        return states[i][property];\n                return undefined;\n            }\n            function last(list) { return list[list.length - 1]; }\n            function tracePath(path, offset, s) {\n                s = s === undefined ? 1 : s;\n                offset = offset || { x: 0, y: 0 };\n                var d = path.map(function (e, i) {\n                    return (i ? 'L' : 'M') + tX(offset.x + s * e.x) + ' ' + tY(offset.y + s * e.y);\n                }).join(' ');\n                return newElement('path', { d: d });\n            }\n            function newElement(type, attr, content) {\n                var element = new Element(type, attr, content);\n                var extraData = lastDefined('attributes');\n                for (var key in extraData) {\n                    element.attr['data-' + key] = extraData[key];\n                }\n                elements.push(element);\n                return element;\n            }\n            return {\n                width: function () { return 0; },\n                height: function () { return 0; },\n                clear: function () { },\n                circle: function (p, r) {\n                    return newElement('circle', { r: r, cx: tX(p.x), cy: tY(p.y) });\n                },\n                ellipse: function (center, w, h, start, stop) {\n                    if (stop) {\n                        var y = tY(center.y);\n                        return newElement('path', { d: 'M' + tX(center.x - w / 2) + ' ' + y +\n                                'A' + w / 2 + ' ' + h / 2 + ' 0 1 0 ' + tX(center.x + w / 2) + ' ' + y\n                        });\n                    }\n                    else {\n                        return newElement('ellipse', { cx: tX(center.x), cy: tY(center.y), rx: w / 2, ry: h / 2 });\n                    }\n                },\n                arc: function (x, y, r) {\n                    return newElement('ellipse', { cx: tX(x), cy: tY(y), rx: r, ry: r });\n                },\n                roundRect: function (x, y, w, h, r) {\n                    return newElement('rect', { x: tX(x), y: tY(y), rx: r, ry: r, height: h, width: w });\n                },\n                rect: function (x, y, w, h) {\n                    return newElement('rect', { x: tX(x), y: tY(y), height: h, width: w });\n                },\n                path: tracePath,\n                circuit: function (path, offset, s) {\n                    var element = tracePath(path, offset, s);\n                    element.attr.d += ' Z';\n                    return element;\n                },\n                setFont: function (font, bold, ital, fontSize) {\n                    var font = bold + \" \" + (ital || '') + \" \" + fontSize + \"pt \" + font + \", Helvetica, sans-serif\";\n                    last(states).font = font;\n                    last(states).fontSize = fontSize;\n                },\n                strokeStyle: function (stroke) {\n                    last(states).stroke = stroke;\n                },\n                fillStyle: function (fill) {\n                    last(states).fill = fill;\n                },\n                arcTo: function (x1, y1, x2, y2) {\n                    last(elements).attr.d += ('L' + tX(x1) + ' ' + tY(y1) + ' L' + tX(x2) + ' ' + tY(y2) + ' ');\n                },\n                beginPath: function () {\n                    return newElement('path', { d: '' });\n                },\n                fillText: function (text, x, y) {\n                    var attr = { x: tX(x), y: tY(y), style: 'fill: ' + last(states).fill + ';' };\n                    var font = lastDefined('font');\n                    if (font) {\n                        attr.style += 'font:' + font + ';';\n                    }\n                    if (lastDefined('textAlign') === 'center') {\n                        attr.style += 'text-anchor: middle;';\n                    }\n                    return newElement('text', attr, text);\n                },\n                lineCap: function (cap) { globalStyle += ';stroke-linecap:' + cap; },\n                lineJoin: function (join) { globalStyle += ';stroke-linejoin:' + join; },\n                lineTo: function (x, y) {\n                    last(elements).attr.d += ('L' + tX(x) + ' ' + tY(y) + ' ');\n                    return last(elements);\n                },\n                lineWidth: function (w) {\n                    last(states).strokeWidth = w;\n                },\n                measureText: function (s) {\n                    if (ctx) {\n                        ctx.font = lastDefined('font') || 'normal 12pt Helvetica';\n                        return ctx.measureText(s);\n                    }\n                    else {\n                        return {\n                            width: skanaar.sum(s, function (c) {\n                                var scale = lastDefined('fontSize') / 12;\n                                if (skanaar.charWidths[c]) {\n                                    return skanaar.charWidths[c] * scale;\n                                }\n                                return 16 * scale;\n                            })\n                        };\n                    }\n                },\n                moveTo: function (x, y) {\n                    last(elements).attr.d += ('M' + tX(x) + ' ' + tY(y) + ' ');\n                },\n                restore: function () {\n                    states.pop();\n                },\n                save: function () {\n                    states.push(State(0, 0));\n                },\n                setData: function (name, value) {\n                    lastDefined('attributes')[name] = value;\n                },\n                scale: function () { },\n                setLineDash: function (d) {\n                    last(states).dashArray = (d.length === 0) ? 'none' : d[0] + ' ' + d[1];\n                },\n                stroke: function () {\n                    last(elements).stroke();\n                },\n                textAlign: function (a) {\n                    last(states).textAlign = a;\n                },\n                translate: function (dx, dy) {\n                    last(states).x += dx;\n                    last(states).y += dy;\n                },\n                serialize: function (size, desc, title) {\n                    function toAttr(obj) {\n                        return Object.keys(obj).map(function (key) { return key + \"=\\\"\" + xmlEncode(obj[key]) + \"\\\"\"; }).join(' ');\n                    }\n                    function toHtml(e) {\n                        return \"<\" + e.name + \" \" + toAttr(e.attr) + \">\" + xmlEncode(e.content) + \"</\" + e.name + \">\";\n                    }\n                    var elementsToSerialize = elements;\n                    if (desc) {\n                        elementsToSerialize.unshift(new Element('desc', {}, desc));\n                    }\n                    if (title) {\n                        elementsToSerialize.unshift(new Element('title', {}, title));\n                    }\n                    var innerSvg = elementsToSerialize.map(toHtml).join('\\n  ');\n                    var attrs = {\n                        version: '1.1',\n                        baseProfile: 'full',\n                        width: size.width,\n                        height: size.height,\n                        viewbox: '0 0 ' + size.width + ' ' + size.height,\n                        xmlns: 'http://www.w3.org/2000/svg',\n                        'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n                        'xmlns:ev': 'http://www.w3.org/2001/xml-events',\n                        style: 'font:' + lastDefined('font') + ';' + globalStyle,\n                    };\n                    return '<svg ' + toAttr(attrs) + '>\\n  ' + innerSvg + '\\n</svg>';\n                }\n            };\n        }\n        skanaar.Svg = Svg;\n    })(skanaar = nomnoml.skanaar || (nomnoml.skanaar = {}));\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    var skanaar;\n    (function (skanaar) {\n        function range(_a, count) {\n            var min = _a[0], max = _a[1];\n            var output = [];\n            for (var i = 0; i < count; i++)\n                output.push(min + (max - min) * i / (count - 1));\n            return output;\n        }\n        skanaar.range = range;\n        function sum(list, transform) {\n            for (var i = 0, summation = 0, len = list.length; i < len; i++)\n                summation += transform(list[i]);\n            return summation;\n        }\n        skanaar.sum = sum;\n        function find(list, predicate) {\n            for (var i = 0; i < list.length; i++)\n                if (predicate(list[i]))\n                    return list[i];\n            return undefined;\n        }\n        skanaar.find = find;\n        function last(list) {\n            return list[list.length - 1];\n        }\n        skanaar.last = last;\n        function hasSubstring(haystack, needle) {\n            if (needle === '')\n                return true;\n            if (!haystack)\n                return false;\n            return haystack.indexOf(needle) !== -1;\n        }\n        skanaar.hasSubstring = hasSubstring;\n        function merged(a, b) {\n            function assign(target, data) {\n                for (var key in data)\n                    target[key] = data[key];\n            }\n            var obj = {};\n            assign(obj, a);\n            assign(obj, b);\n            return obj;\n        }\n        skanaar.merged = merged;\n        function indexBy(list, key) {\n            var obj = {};\n            for (var i = 0; i < list.length; i++)\n                obj[list[i][key]] = list[i];\n            return obj;\n        }\n        skanaar.indexBy = indexBy;\n        function uniqueBy(list, property) {\n            var seen = {};\n            var out = [];\n            for (var i = 0; i < list.length; i++) {\n                var key = list[i][property];\n                if (!seen[key]) {\n                    seen[key] = true;\n                    out.push(list[i]);\n                }\n            }\n            return out;\n        }\n        skanaar.uniqueBy = uniqueBy;\n    })(skanaar = nomnoml.skanaar || (nomnoml.skanaar = {}));\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    var skanaar;\n    (function (skanaar) {\n        skanaar.vector = {\n            dist: function (a, b) { return skanaar.vector.mag(skanaar.vector.diff(a, b)); },\n            add: function (a, b) { return { x: a.x + b.x, y: a.y + b.y }; },\n            diff: function (a, b) { return { x: a.x - b.x, y: a.y - b.y }; },\n            mult: function (v, factor) { return { x: factor * v.x, y: factor * v.y }; },\n            mag: function (v) { return Math.sqrt(v.x * v.x + v.y * v.y); },\n            normalize: function (v) { return skanaar.vector.mult(v, 1 / skanaar.vector.mag(v)); },\n            rot: function (a) { return { x: a.y, y: -a.x }; }\n        };\n    })(skanaar = nomnoml.skanaar || (nomnoml.skanaar = {}));\n})(nomnoml || (nomnoml = {}));\nvar nomnoml;\n(function (nomnoml) {\n    nomnoml.styles = {\n        ABSTRACT: nomnoml.buildStyle({ visual: 'class' }, { center: true, italic: true }),\n        ACTOR: nomnoml.buildStyle({ visual: 'actor' }, { center: true }, { center: true }),\n        CHOICE: nomnoml.buildStyle({ visual: 'rhomb' }, { center: true }, { center: true }),\n        CLASS: nomnoml.buildStyle({ visual: 'class' }, { center: true, bold: true }),\n        DATABASE: nomnoml.buildStyle({ visual: 'database' }, { center: true, bold: true }, { center: true }),\n        END: nomnoml.buildStyle({ visual: 'end', empty: true }, {}),\n        FRAME: nomnoml.buildStyle({ visual: 'frame' }, {}),\n        HIDDEN: nomnoml.buildStyle({ visual: 'hidden', empty: true }, {}),\n        INPUT: nomnoml.buildStyle({ visual: 'input' }, { center: true }),\n        INSTANCE: nomnoml.buildStyle({ visual: 'class' }, { center: true, underline: true }),\n        LABEL: nomnoml.buildStyle({ visual: 'none' }, {}),\n        NOTE: nomnoml.buildStyle({ visual: 'note' }, {}),\n        PACKAGE: nomnoml.buildStyle({ visual: 'package' }, {}),\n        RECEIVER: nomnoml.buildStyle({ visual: 'receiver' }, {}),\n        REFERENCE: nomnoml.buildStyle({ visual: 'class', dashed: true }, { center: true }),\n        SENDER: nomnoml.buildStyle({ visual: 'sender' }, {}),\n        START: nomnoml.buildStyle({ visual: 'start', empty: true }, {}),\n        STATE: nomnoml.buildStyle({ visual: 'roundrect' }, { center: true }),\n        TABLE: nomnoml.buildStyle({ visual: 'table' }, { center: true, bold: true }),\n        TRANSCEIVER: nomnoml.buildStyle({ visual: 'transceiver' }, {}),\n        USECASE: nomnoml.buildStyle({ visual: 'ellipse' }, { center: true }, { center: true }),\n    };\n    function box(config, clas) {\n        clas.width = Math.max.apply(Math, clas.compartments.map(function (e) { return e.width; }));\n        clas.height = nomnoml.skanaar.sum(clas.compartments, function (e) { return e.height; });\n        clas.dividers = [];\n        var y = 0;\n        for (var _i = 0, _a = clas.compartments; _i < _a.length; _i++) {\n            var comp = _a[_i];\n            comp.x = 0;\n            comp.y = y;\n            comp.width = clas.width;\n            y += comp.height;\n            if (comp != nomnoml.skanaar.last(clas.compartments))\n                clas.dividers.push([{ x: 0, y: y }, { x: clas.width, y: y }]);\n        }\n    }\n    function icon(config, clas) {\n        clas.dividers = [];\n        clas.compartments = [];\n        clas.width = config.fontSize * 2.5;\n        clas.height = config.fontSize * 2.5;\n    }\n    nomnoml.layouters = {\n        actor: function (config, clas) {\n            clas.width = Math.max.apply(Math, __spreadArrays([config.padding * 2], clas.compartments.map(function (e) { return e.width; })));\n            clas.height = config.padding * 3 + nomnoml.skanaar.sum(clas.compartments, function (e) { return e.height; });\n            clas.dividers = [];\n            var y = config.padding * 3;\n            for (var _i = 0, _a = clas.compartments; _i < _a.length; _i++) {\n                var comp = _a[_i];\n                comp.x = 0;\n                comp.y = y;\n                comp.width = clas.width;\n                y += comp.height;\n                if (comp != nomnoml.skanaar.last(clas.compartments))\n                    clas.dividers.push([{ x: config.padding, y: y }, { x: clas.width - config.padding, y: y }]);\n            }\n        },\n        class: box,\n        database: function (config, clas) {\n            clas.width = Math.max.apply(Math, clas.compartments.map(function (e) { return e.width; }));\n            clas.height = nomnoml.skanaar.sum(clas.compartments, function (e) { return e.height; }) + config.padding * 2;\n            clas.dividers = [];\n            var y = config.padding * 1.5;\n            for (var _i = 0, _a = clas.compartments; _i < _a.length; _i++) {\n                var comp = _a[_i];\n                comp.x = 0;\n                comp.y = y;\n                comp.width = clas.width;\n                y += comp.height;\n                if (comp != nomnoml.skanaar.last(clas.compartments)) {\n                    var path = nomnoml.skanaar.range([0, Math.PI], 16).map(function (a) { return ({\n                        x: clas.width * 0.5 * (1 - Math.cos(a)),\n                        y: y + config.padding * (0.75 * Math.sin(a) - 0.5),\n                    }); });\n                    clas.dividers.push(path);\n                }\n            }\n        },\n        ellipse: function (config, clas) {\n            var width = Math.max.apply(Math, clas.compartments.map(function (e) { return e.width; }));\n            var height = nomnoml.skanaar.sum(clas.compartments, function (e) { return e.height; });\n            clas.width = width * 1.25;\n            clas.height = height * 1.25;\n            clas.dividers = [];\n            var y = height * 0.125;\n            var sq = function (x) { return x * x; };\n            var rimPos = function (y) { return Math.sqrt(sq(0.5) - sq(y / clas.height - 0.5)) * clas.width; };\n            for (var _i = 0, _a = clas.compartments; _i < _a.length; _i++) {\n                var comp = _a[_i];\n                comp.x = width * 0.125;\n                comp.y = y;\n                comp.width = width;\n                y += comp.height;\n                if (comp != nomnoml.skanaar.last(clas.compartments))\n                    clas.dividers.push([\n                        { x: clas.width / 2 + rimPos(y) - 1, y: y },\n                        { x: clas.width / 2 - rimPos(y) + 1, y: y }\n                    ]);\n            }\n        },\n        end: icon,\n        frame: function (config, clas) {\n            var w = clas.compartments[0].width;\n            var h = clas.compartments[0].height;\n            box(config, clas);\n            if (clas.dividers.length)\n                clas.dividers.shift();\n            clas.dividers.unshift([\n                { x: 0, y: h },\n                { x: w - h / 4, y: h },\n                { x: w + h / 4, y: h / 2 },\n                { x: w + h / 4, y: 0 }\n            ]);\n        },\n        hidden: function (config, clas) {\n            clas.dividers = [];\n            clas.compartments = [];\n            clas.width = 1;\n            clas.height = 1;\n        },\n        input: box,\n        none: box,\n        note: box,\n        package: box,\n        receiver: box,\n        rhomb: function (config, clas) {\n            var width = Math.max.apply(Math, clas.compartments.map(function (e) { return e.width; }));\n            var height = nomnoml.skanaar.sum(clas.compartments, function (e) { return e.height; });\n            clas.width = width * 1.5;\n            clas.height = height * 1.5;\n            clas.dividers = [];\n            var y = height * 0.25;\n            for (var _i = 0, _a = clas.compartments; _i < _a.length; _i++) {\n                var comp = _a[_i];\n                comp.x = width * 0.25;\n                comp.y = y;\n                comp.width = width;\n                y += comp.height;\n                var slope = clas.width / clas.height;\n                if (comp != nomnoml.skanaar.last(clas.compartments))\n                    clas.dividers.push([\n                        { x: clas.width / 2 + (y < clas.height / 2 ? y * slope : (clas.height - y) * slope), y: y },\n                        { x: clas.width / 2 - (y < clas.height / 2 ? y * slope : (clas.height - y) * slope), y: y }\n                    ]);\n            }\n        },\n        roundrect: box,\n        sender: box,\n        start: icon,\n        table: function (config, clas) {\n            if (clas.compartments.length == 1) {\n                box(config, clas);\n                return;\n            }\n            var gridcells = clas.compartments.slice(1);\n            var rows = [[]];\n            function isRowBreak(e) {\n                return !e.lines.length && !e.nodes.length && !e.relations.length;\n            }\n            function isRowFull(e) {\n                var current = nomnoml.skanaar.last(rows);\n                return rows[0] != current && rows[0].length == current.length;\n            }\n            function isEnd(e) {\n                return comp == nomnoml.skanaar.last(gridcells);\n            }\n            for (var _i = 0, gridcells_1 = gridcells; _i < gridcells_1.length; _i++) {\n                var comp = gridcells_1[_i];\n                if (!isEnd(comp) && isRowBreak(comp) && nomnoml.skanaar.last(rows).length) {\n                    rows.push([]);\n                }\n                else if (isRowFull(comp)) {\n                    rows.push([comp]);\n                }\n                else {\n                    nomnoml.skanaar.last(rows).push(comp);\n                }\n            }\n            var header = clas.compartments[0];\n            var cellW = Math.max.apply(Math, __spreadArrays([header.width / rows[0].length], gridcells.map(function (e) { return e.width; })));\n            var cellH = Math.max.apply(Math, gridcells.map(function (e) { return e.height; }));\n            clas.width = cellW * rows[0].length;\n            clas.height = header.height + cellH * rows.length;\n            var hh = header.height;\n            clas.dividers = __spreadArrays([\n                [{ x: 0, y: header.height }, { x: 0, y: header.height }]\n            ], rows.map(function (e, i) { return [{ x: 0, y: hh + i * cellH }, { x: clas.width, y: hh + i * cellH }]; }), rows[0].map(function (e, i) { return [{ x: (i + 1) * cellW, y: hh }, { x: (i + 1) * cellW, y: clas.height }]; }));\n            header.x = 0;\n            header.y = 0;\n            header.width = clas.width;\n            for (var i = 0; i < rows.length; i++) {\n                for (var j = 0; j < rows[i].length; j++) {\n                    var cell = rows[i][j];\n                    cell.x = j * cellW;\n                    cell.y = hh + i * cellH;\n                    cell.width = cellW;\n                }\n            }\n        },\n        transceiver: box,\n    };\n    nomnoml.visualizers = {\n        actor: function (node, x, y, config, g) {\n            var a = config.padding / 2;\n            var yp = y + a * 4;\n            var faceCenter = { x: node.x, y: yp - a };\n            g.circle(faceCenter, a).fillAndStroke();\n            g.path([{ x: node.x, y: yp }, { x: node.x, y: yp + 2 * a }]).stroke();\n            g.path([{ x: node.x - a, y: yp + a }, { x: node.x + a, y: yp + a }]).stroke();\n            g.path([{ x: node.x - a, y: yp + a + config.padding },\n                { x: node.x, y: yp + config.padding },\n                { x: node.x + a, y: yp + a + config.padding }]).stroke();\n        },\n        class: function (node, x, y, config, g) {\n            g.rect(x, y, node.width, node.height).fillAndStroke();\n        },\n        database: function (node, x, y, config, g) {\n            var pad = config.padding;\n            var cy = y - pad / 2;\n            var pi = 3.1416;\n            g.rect(x, y + pad, node.width, node.height - pad * 1.5).fill();\n            g.path([{ x: x, y: cy + pad * 1.5 }, { x: x, y: cy - pad * 0.5 + node.height }]).stroke();\n            g.path([\n                { x: x + node.width, y: cy + pad * 1.5 },\n                { x: x + node.width, y: cy - pad * 0.5 + node.height }\n            ]).stroke();\n            g.ellipse({ x: node.x, y: cy + pad * 1.5 }, node.width, pad * 1.5).fillAndStroke();\n            g.ellipse({ x: node.x, y: cy - pad * 0.5 + node.height }, node.width, pad * 1.5, 0, pi)\n                .fillAndStroke();\n        },\n        ellipse: function (node, x, y, config, g) {\n            g.ellipse({ x: node.x, y: node.y }, node.width, node.height).fillAndStroke();\n        },\n        end: function (node, x, y, config, g) {\n            g.circle({ x: node.x, y: y + node.height / 2 }, node.height / 3).fillAndStroke();\n            g.fillStyle(config.stroke);\n            g.circle({ x: node.x, y: y + node.height / 2 }, node.height / 3 - config.padding / 2).fill();\n        },\n        frame: function (node, x, y, config, g) {\n            g.rect(x, y, node.width, node.height).fillAndStroke();\n        },\n        hidden: function (node, x, y, config, g) {\n        },\n        input: function (node, x, y, config, g) {\n            g.circuit([\n                { x: x + config.padding, y: y },\n                { x: x + node.width, y: y },\n                { x: x + node.width - config.padding, y: y + node.height },\n                { x: x, y: y + node.height }\n            ]).fillAndStroke();\n        },\n        none: function (node, x, y, config, g) {\n        },\n        note: function (node, x, y, config, g) {\n            g.circuit([\n                { x: x, y: y },\n                { x: x + node.width - config.padding, y: y },\n                { x: x + node.width, y: y + config.padding },\n                { x: x + node.width, y: y + node.height },\n                { x: x, y: y + node.height },\n                { x: x, y: y }\n            ]).fillAndStroke();\n            g.path([\n                { x: x + node.width - config.padding, y: y },\n                { x: x + node.width - config.padding, y: y + config.padding },\n                { x: x + node.width, y: y + config.padding }\n            ]).stroke();\n        },\n        package: function (node, x, y, config, g) {\n            var headHeight = node.compartments[0].height;\n            g.rect(x, y + headHeight, node.width, node.height - headHeight).fillAndStroke();\n            var w = g.measureText(node.name).width + 2 * config.padding;\n            g.circuit([\n                { x: x, y: y + headHeight },\n                { x: x, y: y },\n                { x: x + w, y: y },\n                { x: x + w, y: y + headHeight }\n            ]).fillAndStroke();\n        },\n        receiver: function (node, x, y, config, g) {\n            g.circuit([\n                { x: x - config.padding, y: y },\n                { x: x + node.width, y: y },\n                { x: x + node.width, y: y + node.height },\n                { x: x - config.padding, y: y + node.height },\n                { x: x, y: y + node.height / 2 },\n            ]).fillAndStroke();\n        },\n        rhomb: function (node, x, y, config, g) {\n            g.circuit([\n                { x: node.x, y: y },\n                { x: x + node.width, y: node.y },\n                { x: node.x, y: y + node.height },\n                { x: x, y: node.y }\n            ]).fillAndStroke();\n        },\n        roundrect: function (node, x, y, config, g) {\n            var r = Math.min(config.padding * 2 * config.leading, node.height / 2);\n            g.roundRect(x, y, node.width, node.height, r).fillAndStroke();\n        },\n        sender: function (node, x, y, config, g) {\n            g.circuit([\n                { x: x, y: y },\n                { x: x + node.width - config.padding, y: y },\n                { x: x + node.width, y: y + node.height / 2 },\n                { x: x + node.width - config.padding, y: y + node.height },\n                { x: x, y: y + node.height }\n            ]).fillAndStroke();\n        },\n        start: function (node, x, y, config, g) {\n            g.fillStyle(config.stroke);\n            g.circle({ x: node.x, y: y + node.height / 2 }, node.height / 2.5).fill();\n        },\n        table: function (node, x, y, config, g) {\n            g.rect(x, y, node.width, node.height).fillAndStroke();\n        },\n        transceiver: function (node, x, y, config, g) {\n            g.circuit([\n                { x: x - config.padding, y: y },\n                { x: x + node.width, y: y },\n                { x: x + node.width + config.padding, y: y + node.height / 2 },\n                { x: x + node.width, y: y + node.height },\n                { x: x - config.padding, y: y + node.height },\n                { x: x, y: y + node.height / 2 }\n            ]).fillAndStroke();\n        },\n    };\n})(nomnoml || (nomnoml = {}));\n;\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar nomnomlCoreParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,8],$V2=[5,6,12,14],$V3=[12,14],$V4=[1,22];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"compartment\":4,\"EOF\":5,\"SEP\":6,\"slot\":7,\"IDENT\":8,\"class\":9,\"association\":10,\"parts\":11,\"|\":12,\"[\":13,\"]\":14,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\"SEP\",8:\"IDENT\",12:\"|\",13:\"[\",14:\"]\"},\nproductions_: [0,[3,2],[3,3],[3,4],[3,3],[7,1],[7,1],[7,1],[4,1],[4,3],[11,1],[11,3],[11,2],[10,3],[9,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n return $$[$0-1] \nbreak;\ncase 3: case 4:\n return $$[$0-2] \nbreak;\ncase 5:\nthis.$ = $$[$0].trim().replace(/\\\\(\\[|\\]|\\|)/g, '$'+'1');\nbreak;\ncase 6: case 7:\nthis.$ = $$[$0];\nbreak;\ncase 8: case 10:\nthis.$ = [$$[$0]];\nbreak;\ncase 9:\nthis.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 11:\nthis.$ = $$[$0-2].concat([$$[$0]]);\nbreak;\ncase 12:\nthis.$ = $$[$0-1].concat([[]]);\nbreak;\ncase 13:\n\n           var t = $$[$0-1].trim().replace(/\\\\(\\[|\\]|\\|)/g, '$'+'1').match('^(.*?)([<:o+]*[-_]/?[-_]*[:o+>]*)(.*)$');\n           if (!t) {\n             throw new Error('line '+_$[$0].first_line+': Classifiers must be separated by a relation or a line break')\n           }\n           this.$ = {assoc:t[2], start:$$[$0-2], end:$$[$0], startLabel:t[1].trim(), endLabel:t[3].trim()};\n  \nbreak;\ncase 14:\n\n           var type = 'CLASS';\n           var id = $$[$0-1][0][0];\n           var typeMatch = $$[$0-1][0][0].match('<([a-z]*)>(.*)');\n           if (typeMatch) {\n               type = typeMatch[1].toUpperCase();\n               id = typeMatch[2].trim();\n           }\n           $$[$0-1][0][0] = id;\n           this.$ = {type:type, id:id, parts:$$[$0-1]};\n  \nbreak;\n}\n},\ntable: [{3:1,4:2,6:[1,3],7:4,8:$V0,9:6,10:7,13:$V1},{1:[3]},{5:[1,9],6:[1,10]},{4:11,7:4,8:$V0,9:6,10:7,13:$V1},o($V2,[2,8]),o($V2,[2,5]),o($V2,[2,6],{8:[1,12]}),o($V2,[2,7]),{4:14,7:4,8:$V0,9:6,10:7,11:13,13:$V1},{1:[2,1]},{5:[1,15],7:16,8:$V0,9:6,10:7,13:$V1},{5:[1,17],6:[1,18]},{9:19,13:$V1},{12:[1,21],14:[1,20]},o($V3,[2,10],{6:$V4}),{1:[2,4]},o($V2,[2,9]),{1:[2,2]},{5:[1,23],7:16,8:$V0,9:6,10:7,13:$V1},o($V2,[2,13]),o([5,6,8,12,14],[2,14]),o($V3,[2,12],{7:4,9:6,10:7,4:24,8:$V0,13:$V1}),{7:16,8:$V0,9:6,10:7,13:$V1},{1:[2,3]},o($V3,[2,11],{6:$V4})],\ndefaultActions: {9:[2,1],15:[2,4],17:[2,2],23:[2,3]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 12\nbreak;\ncase 1:return 8\nbreak;\ncase 2:return 13\nbreak;\ncase 3:return 14\nbreak;\ncase 4:return 6\nbreak;\ncase 5:return 5\nbreak;\ncase 6:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s*\\|\\s*)/,/^(?:(\\\\(\\[|\\]|\\|)|[^\\]\\[|;\\n])+)/,/^(?:\\[)/,/^(?:\\s*\\])/,/^(?:[ ]*(;|\\n)+[ ]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();;\n  return nomnoml;\n});","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import ComponentConfigManager from '@/erdiagram/common/config/ComponentConfigManager';\n\nexport default abstract class AbstractComponentConfigManager<C, P = Partial<C>, S = C>\n\t\timplements ComponentConfigManager<C, P, S> {\n\n\tabstract getDefaultConfig(): C;\n\n\tabstract mergeConfigs(fullConfig: C, partialConfig?: P): C;\n\n\tmergeWithDefaultConfig(partialConfig?: P): C {\n\t\treturn this.mergeConfigs(this.getDefaultConfig(), partialConfig);\n\t}\n\n\tcloneConfig(fullConfig: C): C {\n\t\treturn this.mergeConfigs(fullConfig);\n\t}\n\n\tabstract convertToSerializableObject(fullConfig: C): S;\n\n\tabstract convertFromSerializableObject(serializableConfig: S): C;\n\n}\n","import ComponentConfigManager from '@/erdiagram/common/config/ComponentConfigManager';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\n\nexport {\n\tComponentConfigManager,\n\tAbstractComponentConfigManager\n};\n","export * from './config/exports';\n","export * from './common/exports';\nexport * from './generator/exports';\nexport * from './parser/exports';\n","import CaseFormat from '@/erdiagram/generator/common/case-format/CaseFormat';\n\nconst CAMEL_CASE_WORD_BOUNDARIES_REGEX = /((?<=[^A-Z])(?=[A-Z])|(?=[A-Z][a-z]))/;\n\nexport default abstract class AbstractCamelCaseFormat implements CaseFormat {\n\n\tabstract joinWords(words: string[]): string;\n\n\tpublic splitWords(text: string): string[] {\n\t\treturn text.split(CAMEL_CASE_WORD_BOUNDARIES_REGEX)\n\t\t\t\t.filter(chunk => chunk.length > 0);\n\t}\n\n}\n","import CaseFormat from '@/erdiagram/generator/common/case-format/CaseFormat';\n\nexport default abstract class AbstractUnderscoreCaseFormat implements CaseFormat {\n\n\tabstract joinWords(words: string[]): string;\n\n\tpublic splitWords(text: string): string[] {\n\t\treturn text.split('_');\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/AbstractUnderscoreCaseFormat';\nimport {capitalizeWord} from '@/erdiagram/util/string-utils';\n\nexport default class CapitalizedUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn words\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.map(capitalizeWord)\n\t\t\t\t.join('_');\n\t}\n\n}\n","import CaseFormat from '@/erdiagram/generator/common/case-format/CaseFormat';\n\nexport default class CaseConverter {\n\n\tconstructor(\n\t\t\tprivate readonly originCaseFormat: CaseFormat,\n\t\t\tprivate readonly targetCaseFormat: CaseFormat\n\t) {\n\n\t}\n\n\tpublic convertCase(text: string) {\n\t\tconst words = this.originCaseFormat.splitWords(text);\n\t\treturn this.targetCaseFormat.joinWords(words);\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/AbstractUnderscoreCaseFormat';\n\nexport default class CaseInsensitiveUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn words.join('_');\n\t}\n\n}\n","import AbstractCamelCaseFormat from '@/erdiagram/generator/common/case-format/AbstractCamelCaseFormat';\nimport {capitalizeWord} from '@/erdiagram/util/string-utils';\n\nexport default class LowerCamelCaseFormat extends AbstractCamelCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\n\t\tif (words.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst [firstWord, ...otherWords] = words;\n\n\t\tconst lowerCaseFirstWord = firstWord.toLowerCase();\n\n\t\tconst capitalizedOtherWords = otherWords\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.map(capitalizeWord);\n\n\t\treturn lowerCaseFirstWord + capitalizedOtherWords.join('');\n\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/AbstractUnderscoreCaseFormat';\n\nexport default class LowerUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn words\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.join('_');\n\t}\n\n}\n","import LowerCamelCaseFormat from '@/erdiagram/generator/common/case-format/LowerCamelCaseFormat';\nimport UpperCamelCaseFormat from '@/erdiagram/generator/common/case-format/UpperCamelCaseFormat';\nimport LowerUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/LowerUnderscoreCaseFormat';\nimport CapitalizedUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/CapitalizedUnderscoreCaseFormat';\nimport UpperUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/UpperUnderscoreCaseFormat';\nimport CaseInsensitiveUnderscoreCaseFormat\n\tfrom '@/erdiagram/generator/common/case-format/CaseInsensitiveUnderscoreCaseFormat';\nimport CaseFormat from '@/erdiagram/generator/common/case-format/CaseFormat';\n\nconst StandardCaseFormats = {\n\tLOWER_CAMEL: new LowerCamelCaseFormat() as CaseFormat,\n\tUPPER_CAMEL: new UpperCamelCaseFormat() as CaseFormat,\n\tLOWER_UNDERSCORE: new LowerUnderscoreCaseFormat() as CaseFormat,\n\tCAPITALIZED_UNDERSCORE: new CapitalizedUnderscoreCaseFormat() as CaseFormat,\n\tUPPER_UNDERSCORE: new UpperUnderscoreCaseFormat() as CaseFormat,\n\tCASE_INSENSITIVE_UNDERSCORE: new CaseInsensitiveUnderscoreCaseFormat() as CaseFormat,\n};\n\nexport default StandardCaseFormats;\n","import AbstractCamelCaseFormat from '@/erdiagram/generator/common/case-format/AbstractCamelCaseFormat';\nimport {capitalizeWord} from '@/erdiagram/util/string-utils';\n\nexport default class UpperCamelCaseFormat extends AbstractCamelCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn words\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.map(capitalizeWord)\n\t\t\t\t.join('');\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/generator/common/case-format/AbstractUnderscoreCaseFormat';\n\nexport default class UpperUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn words\n\t\t\t\t.map(word => word.toUpperCase())\n\t\t\t\t.join('_');\n\t}\n\n}\n","import CaseConverter from './CaseConverter';\nimport CaseFormat from './CaseFormat';\nimport StandardCaseFormats from './StandardCaseFormats';\n\nexport {\n\tCaseFormat,\n\tStandardCaseFormats,\n\tCaseConverter\n};\n","export * from './case-format/exports';\nexport * from './id-naming-strategy/exports';\n","import {uncapitalizeWord} from '@/erdiagram/util/string-utils';\nimport IdNamingStrategy from '@/erdiagram/generator/common/id-naming-strategy/IdNamingStrategy';\n\nconst defaultIdNamingStrategy: IdNamingStrategy = () => 'id';\nconst entityNamePrefixIdNamingStrategy: IdNamingStrategy = entityName => `${uncapitalizeWord(entityName)}Id`;\n\nconst StandardIdNamingStrategies = {\n\tDEFAULT: defaultIdNamingStrategy,\n\tENTITY_NAME_PREFIX: entityNamePrefixIdNamingStrategy\n};\n\nexport default StandardIdNamingStrategies;\n","import StandardIdNamingStrategies from './StandardIdNamingStrategies';\nimport IdNamingStrategy from './IdNamingStrategy';\n\nexport {\n\tIdNamingStrategy,\n\tStandardIdNamingStrategies\n};\n","import DatabaseModelGenerator from '@/erdiagram/generator/database/model/DatabaseModelGenerator';\nimport DatabaseModelToCodeConverter from '@/erdiagram/generator/database/code-converter/DatabaseModelToCodeConverter';\nimport EntityRelationshipModelToCodeConverter from '@/erdiagram/generator/EntityRelationshipModelToCodeConverter';\nimport {EntityRelationshipModel} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class EntityRelationshipModelToDatabaseCodeConverter implements EntityRelationshipModelToCodeConverter {\n\n\tprivate readonly databaseModelGenerator: DatabaseModelGenerator;\n\tprivate readonly databaseModelToCodeConverter: DatabaseModelToCodeConverter;\n\n\tconstructor(\n\t\t\tdatabaseModelGenerator: DatabaseModelGenerator,\n\t\t\tdatabaseModelToCodeConverter: DatabaseModelToCodeConverter\n\t) {\n\t\tthis.databaseModelGenerator = databaseModelGenerator;\n\t\tthis.databaseModelToCodeConverter = databaseModelToCodeConverter;\n\t}\n\n\tpublic generateCode(entityRelationshipModel: EntityRelationshipModel): string {\n\t\tconst databaseModel = this.databaseModelGenerator.generateDatabaseModel(entityRelationshipModel);\n\t\treturn this.databaseModelToCodeConverter.generateCode(databaseModel);\n\t}\n\n}\n","import DatabaseModelToCodeConverter from './DatabaseModelToCodeConverter';\nimport DatabaseModelToCodeConverterConfig from './DatabaseModelToCodeConverterConfig';\nimport DatabaseModelToCodeConverterSerializableConfig from './DatabaseModelToCodeConverterSerializableConfig';\nimport EntityRelationshipModelToDatabaseCodeConverter from './EntityRelationshipModelToDatabaseCodeConverter';\n\nexport * from './mysql/exports';\nexport * from './oracle/exports';\nexport * from './sqlserver/exports';\n\nexport {\n\tDatabaseModelToCodeConverter,\n\tDatabaseModelToCodeConverterConfig,\n\tDatabaseModelToCodeConverterSerializableConfig,\n\tEntityRelationshipModelToDatabaseCodeConverter\n};\n","import {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport MySqlDatabaseModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/config/MySqlDatabaseModelToCodeConverterConfig';\nimport DatabaseModelToCodeConverter from '@/erdiagram/generator/database/code-converter/DatabaseModelToCodeConverter';\nimport TableCreationStatements\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/types/TableCreationStatements';\nimport MySqlColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/MySqlColumnCodeGenerator';\nimport MySqlTypeResolver from '@/erdiagram/generator/database/code-converter/mysql/type/MySqlTypeResolver';\nimport MySqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/MySqlIdColumnCodeGenerator';\nimport MySqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/MySqlForeignColumnCodeGenerator';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\nimport StandardCaseFormats from '@/erdiagram/generator/common/case-format/StandardCaseFormats';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\nimport mysqlDatabaseModelToCodeConverterConfigManager\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/config/MysqlDatabaseModelToCodeConverterConfigManager';\n\nexport default class MySqlDatabaseModelToCodeConverter implements DatabaseModelToCodeConverter {\n\n\tprivate readonly config: MySqlDatabaseModelToCodeConverterConfig;\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: MySqlColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: MySqlIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: MySqlForeignColumnCodeGenerator;\n\n\tconstructor(config?: Partial<MySqlDatabaseModelToCodeConverterConfig>) {\n\n\t\tthis.config = mysqlDatabaseModelToCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tthis.config.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tthis.config.columnNameCaseFormat\n\t\t);\n\n\t\tthis.columnCodeGenerator = new MySqlColumnCodeGenerator(\n\t\t\t\tnew MySqlTypeResolver(this.config.typeBindings),\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new MySqlIdColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new MySqlForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tpublic generateCode(databaseModel: DatabaseModel): string {\n\n\t\tconst allCreateTableStatements: string[] = [];\n\t\tconst allAlterTableStatements: string[] = [];\n\n\t\tdatabaseModel.tables\n\t\t\t\t.map(table => this.generateTableCode(table))\n\t\t\t\t.forEach(({createTableStatement, alterTableStatements}) => {\n\n\t\t\t\t\tallCreateTableStatements.push(createTableStatement);\n\n\t\t\t\t\tif (alterTableStatements) {\n\t\t\t\t\t\tallAlterTableStatements.push(alterTableStatements);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\treturn allCreateTableStatements.join('\\n\\n')\n\t\t\t\t+ '\\n\\n'\n\t\t\t\t+ allAlterTableStatements.join('\\n\\n');\n\n\t}\n\n\t// FIXME split this method\n\tprivate generateTableCode(table: TableDescriptor): TableCreationStatements {\n\n\t\tconst columnLines: string[] = [];\n\t\tconst fkConstraintLines: string[] = [];\n\t\tconst otherConstraintLines: string[] = [];\n\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(table.name);\n\n\t\tconst {\n\t\t\tcolumnLine: idColumnLine,\n\t\t\tpkConstraintLine\n\t\t} = this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, table.identifierColumnName);\n\n\t\tcolumnLines.push(idColumnLine);\n\t\totherConstraintLines.push(pkConstraintLine);\n\n\t\tthis.processColumns(outputTableName, table.columns, columnLines, otherConstraintLines);\n\t\tthis.processReferences(outputTableName, table.references, columnLines, fkConstraintLines, otherConstraintLines);\n\n\t\tconst createTableInnerLines = [\n\t\t\t...columnLines,\n\t\t\t...otherConstraintLines\n\t\t];\n\n\t\tconst createTableLines = [\n\t\t\t`CREATE TABLE \\`${outputTableName}\\` (`,\n\t\t\tindentLines(createTableInnerLines).join(',\\n'),\n\t\t\t');'\n\t\t];\n\n\t\tconst createTableStatement = createTableLines.join('\\n');\n\t\tconst alterTableStatements = fkConstraintLines.map(fkConstraintLine => {\n\t\t\treturn `ALTER TABLE \\`${outputTableName}\\` ADD ${fkConstraintLine};`;\n\t\t}).join('\\n');\n\n\t\treturn {\n\t\t\tcreateTableStatement,\n\t\t\talterTableStatements\n\t\t};\n\n\t}\n\n\tprivate processReferences(outputTableName: string, references: TableReferenceDescriptor[], columnLines: string[], fkConstraintLines: string[], otherConstraintLines: string[]) {\n\n\t\tfor (const reference of references) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tuniqueConstraintLine,\n\t\t\t\tfkConstraintLine\n\t\t\t} = this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\n\t\t\tcolumnLines.push(columnLine);\n\t\t\tfkConstraintLines.push(fkConstraintLine);\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\totherConstraintLines.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tprivate processColumns(outputTableName: string, columns: TableColumnDescriptor[], columnLines: string[], otherConstraintLines: string[]) {\n\n\t\tfor (const column of columns) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tuniqueConstraintLine\n\t\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\n\t\t\tcolumnLines.push(columnLine);\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\totherConstraintLines.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/generator/database/model/database-model-types';\nimport RegularColumnCode from '@/erdiagram/generator/database/code-converter/mysql/column/types/RegularColumnCode';\nimport MySqlTypeResolver from '@/erdiagram/generator/database/code-converter/mysql/type/MySqlTypeResolver';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class MySqlColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: MySqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: TableColumnDescriptor): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\tautoincremental,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\\`${outputColumnName}\\``,\n\t\t\tthis.generateMySqlTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\tif (autoincremental) {\n\t\t\tlineParts.push('AUTO_INCREMENT');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateMySqlTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst mysqlType = this.typeResolver.resolveMySqlType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn mysqlType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \\`${outputTableName}_${outputColumnName}_unique\\` UNIQUE (\\`${outputColumnName}\\`)`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport ForeignKeyColumnCode\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/types/ForeignKeyColumnCode';\nimport MySqlColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/MySqlColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class MySqlForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: MySqlColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: TableReferenceDescriptor): TableColumnDescriptor {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTIFIER,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique,\n\t\t\tautoincremental: false\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: TableReferenceDescriptor) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentifierColumnName);\n\n\t\treturn `CONSTRAINT \\`${outputTableName}_${outputColumnName}_fk\\` FOREIGN KEY (\\`${outputColumnName}\\`)`\n\t\t\t\t+ ` REFERENCES \\`${outputTargetTableName}\\` (\\`${outputTargetColumnName}\\`)`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/generator/database/model/database-model-types';\nimport IdColumnCode from '@/erdiagram/generator/database/code-converter/mysql/column/types/IdColumnCode';\nimport MySqlColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/column/MySqlColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class MySqlIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: MySqlColumnCodeGenerator,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identifierColumnName: string): IdColumnCode {\n\n\t\tconst column = this.createIdColumnDescriptor(identifierColumnName);\n\n\t\tconst {\n\t\t\tcolumnLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\n\t\tconst pkConstraintLine = this.createPrimaryKeyConstraint(outputTableName, column);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tpkConstraintLine\n\t\t};\n\n\t}\n\n\tprivate createIdColumnDescriptor(identifierColumnName: string): TableColumnDescriptor {\n\t\treturn {\n\t\t\tname: identifierColumnName,\n\t\t\ttype: EntityPropertyType.IDENTIFIER,\n\t\t\tlength: [],\n\t\t\tnotNull: true,\n\t\t\tautoincremental: true,\n\t\t\t// As primary keys are unique by default, we don't\n\t\t\t// need to manually define an UNIQUE KEY constraint\n\t\t\tunique: false\n\t\t};\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, column: TableColumnDescriptor) {\n\t\tconst columnName = this.columnNameCaseConverter.convertCase(column.name);\n\t\treturn `CONSTRAINT \\`${outputTableName}_pk\\` PRIMARY KEY (\\`${columnName}\\`)`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/generator/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport MySqlDatabaseModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/config/MySqlDatabaseModelToCodeConverterConfig';\nimport {findKeyFromValue, findValueFromNullableKey} from '@/erdiagram/util/record-utils';\nimport MySqlDatabaseModelToCodeConverterSerializableConfig\n\tfrom '@/erdiagram/generator/database/code-converter/mysql/config/MySqlDatabaseModelToCodeConverterSerializableConfig';\n\nexport class MySqlDatabaseModelToCodeConverterConfigManager\n\t\textends AbstractComponentConfigManager<MySqlDatabaseModelToCodeConverterConfig, Partial<MySqlDatabaseModelToCodeConverterConfig>, MySqlDatabaseModelToCodeConverterSerializableConfig> {\n\n\tgetDefaultConfig(): MySqlDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTIFIER]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.TEXT]: 'VARCHAR',\n\t\t\t\t[EntityPropertyType.LONG]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.INT]: 'INT',\n\t\t\t\t[EntityPropertyType.SHORT]: 'SHORT',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'DECIMAL',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'BOOLEAN',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIME',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.BLOB]: 'BLOB'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.LOWER_CAMEL,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: MySqlDatabaseModelToCodeConverterConfig, partialConfig?: Partial<MySqlDatabaseModelToCodeConverterConfig>): MySqlDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: MySqlDatabaseModelToCodeConverterConfig): MySqlDatabaseModelToCodeConverterSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\ttableNameCaseFormat: findKeyFromValue(StandardCaseFormats, fullConfig.tableNameCaseFormat),\n\t\t\tcolumnNameCaseFormat: findKeyFromValue(StandardCaseFormats, fullConfig.columnNameCaseFormat),\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: MySqlDatabaseModelToCodeConverterSerializableConfig): MySqlDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\ttableNameCaseFormat: findValueFromNullableKey(StandardCaseFormats, serializableConfig.tableNameCaseFormat, StandardCaseFormats.UPPER_CAMEL),\n\t\t\tcolumnNameCaseFormat: findValueFromNullableKey(StandardCaseFormats, serializableConfig.columnNameCaseFormat, StandardCaseFormats.UPPER_CAMEL),\n\t\t};\n\t}\n\n}\n\nconst mysqlDatabaseModelToCodeConverterConfigManager = new MySqlDatabaseModelToCodeConverterConfigManager();\nexport default mysqlDatabaseModelToCodeConverterConfigManager;\n","import MySqlDatabaseModelToCodeConverterConfig from './MySqlDatabaseModelToCodeConverterConfig';\nimport MySqlDatabaseModelToCodeConverterSerializableConfig from './MySqlDatabaseModelToCodeConverterSerializableConfig';\nimport mysqlDatabaseModelToCodeConverterConfigManager, {MySqlDatabaseModelToCodeConverterConfigManager} from './MysqlDatabaseModelToCodeConverterConfigManager';\n\nexport {\n\tMySqlDatabaseModelToCodeConverterConfig,\n\tMySqlDatabaseModelToCodeConverterSerializableConfig,\n\tMySqlDatabaseModelToCodeConverterConfigManager,\n\tmysqlDatabaseModelToCodeConverterConfigManager\n};\n","import MySqlDatabaseModelToCodeConverter from './MySqlDatabaseModelToCodeConverter';\n\nexport * from './config/exports';\n\nexport {\n\tMySqlDatabaseModelToCodeConverter\n};\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class MySqlTypeResolver {\n\n\tprivate readonly typeBindings: Partial<Record<EntityPropertyType, string>>;\n\n\tconstructor(typeBindings: Partial<Record<EntityPropertyType, string>>) {\n\t\tthis.typeBindings = typeBindings;\n\t}\n\n\tpublic resolveMySqlType(type: EntityPropertyType): string {\n\n\t\tif (!this.typeBindings.hasOwnProperty(type)) {\n\t\t\tthrow new Error('Unsupported type: ' + type);\n\t\t}\n\n\t\treturn this.typeBindings[type]!;\n\n\t}\n\n}\n","import {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport OracleDatabaseModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/config/OracleDatabaseModelToCodeConverterConfig';\nimport DatabaseModelToCodeConverter from '@/erdiagram/generator/database/code-converter/DatabaseModelToCodeConverter';\nimport TableCreationStatements\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/types/TableCreationStatements';\nimport OracleColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/OracleColumnCodeGenerator';\nimport OracleTypeResolver from '@/erdiagram/generator/database/code-converter/oracle/type/OracleTypeResolver';\nimport OracleIdColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/OracleIdColumnCodeGenerator';\nimport OracleForeignColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/OracleForeignColumnCodeGenerator';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\nimport StandardCaseFormats from '@/erdiagram/generator/common/case-format/StandardCaseFormats';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\nimport oracleDatabaseModelToCodeConverterConfigManager\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/config/OracleDatabaseModelToCodeConverterConfigManager';\n\nexport default class OracleDatabaseModelToCodeConverter implements DatabaseModelToCodeConverter {\n\n\tprivate readonly config: OracleDatabaseModelToCodeConverterConfig;\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: OracleColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: OracleIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: OracleForeignColumnCodeGenerator;\n\n\tconstructor(config?: Partial<OracleDatabaseModelToCodeConverterConfig>) {\n\n\t\tthis.config = oracleDatabaseModelToCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tthis.config.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tthis.config.columnNameCaseFormat\n\t\t);\n\n\t\tthis.columnCodeGenerator = new OracleColumnCodeGenerator(\n\t\t\t\tnew OracleTypeResolver(this.config.typeBindings),\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new OracleIdColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new OracleForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tpublic generateCode(databaseModel: DatabaseModel): string {\n\n\t\tconst allCreateTableStatements: string[] = [];\n\t\tconst allAlterTableStatements: string[] = [];\n\n\t\tdatabaseModel.tables\n\t\t\t\t.map(table => this.generateTableCode(table))\n\t\t\t\t.forEach(({createTableStatement, alterTableStatements}) => {\n\n\t\t\t\t\tallCreateTableStatements.push(createTableStatement);\n\n\t\t\t\t\tif (alterTableStatements) {\n\t\t\t\t\t\tallAlterTableStatements.push(alterTableStatements);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\treturn allCreateTableStatements.join('\\n\\n')\n\t\t\t\t+ '\\n\\n'\n\t\t\t\t+ allAlterTableStatements.join('\\n\\n');\n\n\t}\n\n\t// FIXME split this method\n\tprivate generateTableCode(table: TableDescriptor): TableCreationStatements {\n\n\t\tconst columnLines: string[] = [];\n\t\tconst createSequenceLines: string[] = [];\n\t\tconst fkConstraintLines: string[] = [];\n\t\tconst otherConstraintLines: string[] = [];\n\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(table.name);\n\n\t\tconst {\n\t\t\tcreateSequenceLine: idCreateSequenceLine,\n\t\t\tcolumnLine: idColumnLine,\n\t\t\tpkConstraintLine\n\t\t} = this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, table.identifierColumnName);\n\n\t\tcreateSequenceLines.push(idCreateSequenceLine);\n\t\tcolumnLines.push(idColumnLine);\n\t\totherConstraintLines.push(pkConstraintLine);\n\n\t\tthis.processColumns(outputTableName, table.columns, columnLines, createSequenceLines, otherConstraintLines);\n\t\tthis.processReferences(outputTableName, table.references, columnLines, fkConstraintLines, otherConstraintLines);\n\n\t\tconst createTableInnerLines = [\n\t\t\t...columnLines,\n\t\t\t...otherConstraintLines\n\t\t];\n\n\t\tconst createTableLines = [\n\t\t\t...createSequenceLines,\n\t\t\t`CREATE TABLE \"${outputTableName}\" (`,\n\t\t\tindentLines(createTableInnerLines).join(',\\n'),\n\t\t\t');'\n\t\t];\n\n\t\tconst createTableStatement = createTableLines.join('\\n');\n\t\tconst alterTableStatements = fkConstraintLines.map(fkConstraintLine => {\n\t\t\treturn `ALTER TABLE \"${outputTableName}\" ADD ${fkConstraintLine};`;\n\t\t}).join('\\n');\n\n\t\treturn {\n\t\t\tcreateTableStatement,\n\t\t\talterTableStatements\n\t\t};\n\n\t}\n\n\tprivate processReferences(outputTableName: string, references: TableReferenceDescriptor[], columnLines: string[], fkConstraintLines: string[], otherConstraintLines: string[]) {\n\n\t\tfor (const reference of references) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tuniqueConstraintLine,\n\t\t\t\tfkConstraintLine\n\t\t\t} = this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\n\t\t\tcolumnLines.push(columnLine);\n\t\t\tfkConstraintLines.push(fkConstraintLine);\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\totherConstraintLines.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tprivate processColumns(\n\t\t\toutputTableName: string,\n\t\t\tcolumns: TableColumnDescriptor[],\n\t\t\tcolumnLines: string[],\n\t\t\tcreateSequenceLines: string[],\n\t\t\totherConstraintLines: string[]\n\t) {\n\n\t\tfor (const column of columns) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tcreateSequenceLine,\n\t\t\t\tuniqueConstraintLine\n\t\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\n\t\t\tcolumnLines.push(columnLine);\n\n\t\t\tif (createSequenceLine) {\n\t\t\t\tcreateSequenceLines.push(createSequenceLine);\n\t\t\t}\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\totherConstraintLines.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/generator/database/model/database-model-types';\nimport RegularColumnCode from '@/erdiagram/generator/database/code-converter/oracle/column/types/RegularColumnCode';\nimport OracleTypeResolver from '@/erdiagram/generator/database/code-converter/oracle/type/OracleTypeResolver';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class OracleColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: OracleTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\t\tconst autoincrementalSequenceName = this.getAutoincrementalSequenceName(outputTableName, outputColumnName);\n\n\t\treturn {\n\t\t\tcreateSequenceLine: column.autoincremental ? this.generateCreateSequenceLine(autoincrementalSequenceName) : undefined,\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column, autoincrementalSequenceName),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate getAutoincrementalSequenceName(outputTableName: string, outputColumnName: string): string {\n\t\treturn `${outputTableName}_${outputColumnName}_SEQ`;\n\t}\n\n\tprivate generateCreateSequenceLine(autoincrementalSequenceName: string): string {\n\t\treturn `CREATE SEQUENCE \"${autoincrementalSequenceName}\" START WITH 1;`;\n\t}\n\n\t// FIXME refactor this methods - it receives too much arguments\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: TableColumnDescriptor, autoincrementalSequenceName: string): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\tautoincremental,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\"${outputColumnName}\"`,\n\t\t\tthis.generateOracleTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\tif (autoincremental) {\n\t\t\tlineParts.push(`DEFAULT \"${autoincrementalSequenceName}\".nextval`);\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateOracleTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst oracleType = this.typeResolver.resolveOracleType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn oracleType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_UNIQUE\" UNIQUE (\"${outputColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport ForeignKeyColumnCode\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/types/ForeignKeyColumnCode';\nimport OracleColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/OracleColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class OracleForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: OracleColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: TableReferenceDescriptor): TableColumnDescriptor {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTIFIER,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique,\n\t\t\tautoincremental: false\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: TableReferenceDescriptor) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentifierColumnName);\n\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_FK\" FOREIGN KEY (\"${outputColumnName}\")`\n\t\t\t\t+ ` REFERENCES \"${outputTargetTableName}\" (\"${outputTargetColumnName}\")`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/generator/database/model/database-model-types';\nimport IdColumnCode from '@/erdiagram/generator/database/code-converter/oracle/column/types/IdColumnCode';\nimport OracleColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/column/OracleColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class OracleIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: OracleColumnCodeGenerator,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identifierColumnName: string): IdColumnCode {\n\n\t\tconst column = this.createIdColumnDescriptor(identifierColumnName);\n\n\t\tconst {\n\t\t\tcreateSequenceLine,\n\t\t\tcolumnLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\n\t\tif (createSequenceLine == null) {\n\t\t\tthrow new Error('Unexpected error: missing sequence for primary key column');\n\t\t}\n\n\t\tconst pkConstraintLine = this.createPrimaryKeyConstraint(outputTableName, column);\n\n\t\treturn {\n\t\t\tcreateSequenceLine,\n\t\t\tcolumnLine,\n\t\t\tpkConstraintLine\n\t\t};\n\n\t}\n\n\tprivate createIdColumnDescriptor(identifierColumnName: string): TableColumnDescriptor {\n\t\treturn {\n\t\t\tname: identifierColumnName,\n\t\t\ttype: EntityPropertyType.IDENTIFIER,\n\t\t\tlength: [],\n\t\t\tnotNull: true,\n\t\t\t// FIXME when different IDENTITY strategies are supported, we must\n\t\t\t//  change this to false and manage the IDENTITY generation manually.\n\t\t\tautoincremental: true,\n\t\t\t// As primary keys are unique by default, we don't\n\t\t\t// need to manually define an UNIQUE KEY constraint\n\t\t\tunique: false\n\t\t};\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, column: TableColumnDescriptor) {\n\t\tconst columnName = this.columnNameCaseConverter.convertCase(column.name);\n\t\treturn `CONSTRAINT \"${outputTableName}_PK\" PRIMARY KEY (\"${columnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/generator/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport OracleDatabaseModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/config/OracleDatabaseModelToCodeConverterConfig';\nimport OracleDatabaseModelToCodeConverterSerializableConfig\n\tfrom '@/erdiagram/generator/database/code-converter/oracle/config/OracleDatabaseModelToCodeConverterSerializableConfig';\nimport {findKeyFromValue, findValueFromNullableKey} from '@/erdiagram/util/record-utils';\n\nexport class OracleDatabaseModelToCodeConverterConfigManager\n\t\textends AbstractComponentConfigManager<OracleDatabaseModelToCodeConverterConfig, Partial<OracleDatabaseModelToCodeConverterConfig>, OracleDatabaseModelToCodeConverterSerializableConfig> {\n\n\tgetDefaultConfig(): OracleDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTIFIER]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.TEXT]: 'VARCHAR2',\n\t\t\t\t[EntityPropertyType.LONG]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.INT]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.SHORT]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'NUMBER(1, 0)',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.BLOB]: 'BLOB'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_UNDERSCORE,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.UPPER_UNDERSCORE,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: OracleDatabaseModelToCodeConverterConfig, partialConfig?: Partial<OracleDatabaseModelToCodeConverterConfig>): OracleDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: OracleDatabaseModelToCodeConverterConfig): OracleDatabaseModelToCodeConverterSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\ttableNameCaseFormat: findKeyFromValue(StandardCaseFormats, fullConfig.tableNameCaseFormat),\n\t\t\tcolumnNameCaseFormat: findKeyFromValue(StandardCaseFormats, fullConfig.columnNameCaseFormat),\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: OracleDatabaseModelToCodeConverterSerializableConfig): OracleDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\ttableNameCaseFormat: findValueFromNullableKey(StandardCaseFormats, serializableConfig.tableNameCaseFormat, StandardCaseFormats.UPPER_CAMEL),\n\t\t\tcolumnNameCaseFormat: findValueFromNullableKey(StandardCaseFormats, serializableConfig.columnNameCaseFormat, StandardCaseFormats.UPPER_CAMEL),\n\t\t};\n\t}\n\n}\n\nconst oracleDatabaseModelToCodeConverterConfigManager = new OracleDatabaseModelToCodeConverterConfigManager();\nexport default oracleDatabaseModelToCodeConverterConfigManager;\n","import OracleDatabaseModelToCodeConverterConfig from './OracleDatabaseModelToCodeConverterConfig';\nimport OracleDatabaseModelToCodeConverterSerializableConfig\n\tfrom './OracleDatabaseModelToCodeConverterSerializableConfig';\nimport oracleDatabaseModelToCodeConverterConfigManager, {OracleDatabaseModelToCodeConverterConfigManager} from './OracleDatabaseModelToCodeConverterConfigManager';\n\nexport {\n\tOracleDatabaseModelToCodeConverterConfig,\n\tOracleDatabaseModelToCodeConverterSerializableConfig,\n\tOracleDatabaseModelToCodeConverterConfigManager,\n\toracleDatabaseModelToCodeConverterConfigManager\n};\n","import OracleDatabaseModelToCodeConverter from './OracleDatabaseModelToCodeConverter';\n\nexport * from './config/exports';\n\nexport {\n\tOracleDatabaseModelToCodeConverter\n};\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class OracleTypeResolver {\n\n\tprivate readonly typeBindings: Partial<Record<EntityPropertyType, string>>;\n\n\tconstructor(typeBindings: Partial<Record<EntityPropertyType, string>>) {\n\t\tthis.typeBindings = typeBindings;\n\t}\n\n\tpublic resolveOracleType(type: EntityPropertyType): string {\n\n\t\tif (!this.typeBindings.hasOwnProperty(type)) {\n\t\t\tthrow new Error('Unsupported type: ' + type);\n\t\t}\n\n\t\treturn this.typeBindings[type]!;\n\n\t}\n\n}\n","import {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport SqlServerDatabaseModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/config/SqlServerDatabaseModelToCodeConverterConfig';\nimport DatabaseModelToCodeConverter from '@/erdiagram/generator/database/code-converter/DatabaseModelToCodeConverter';\nimport TableCreationStatements\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/types/TableCreationStatements';\nimport SqlServerColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerColumnCodeGenerator';\nimport SqlServerTypeResolver from '@/erdiagram/generator/database/code-converter/sqlserver/type/SqlServerTypeResolver';\nimport SqlServerIdColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerIdColumnCodeGenerator';\nimport SqlServerForeignColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerForeignColumnCodeGenerator';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\nimport StandardCaseFormats from '@/erdiagram/generator/common/case-format/StandardCaseFormats';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\nimport sqlServerDatabaseModelToCodeConverterConfigManager\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/config/SqlServerDatabaseModelToCodeConverterConfigManager';\n\nexport default class SqlServerDatabaseModelToCodeConverter implements DatabaseModelToCodeConverter {\n\n\tprivate readonly config: SqlServerDatabaseModelToCodeConverterConfig;\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: SqlServerColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: SqlServerIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: SqlServerForeignColumnCodeGenerator;\n\n\tconstructor(config?: Partial<SqlServerDatabaseModelToCodeConverterConfig>) {\n\n\t\tthis.config = sqlServerDatabaseModelToCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tthis.config.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tthis.config.columnNameCaseFormat\n\t\t);\n\n\t\tthis.columnCodeGenerator = new SqlServerColumnCodeGenerator(\n\t\t\t\tnew SqlServerTypeResolver(this.config.typeBindings),\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new SqlServerIdColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new SqlServerForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tpublic generateCode(databaseModel: DatabaseModel): string {\n\n\t\tconst allCreateTableStatements: string[] = [];\n\t\tconst allAlterTableStatements: string[] = [];\n\n\t\tdatabaseModel.tables\n\t\t\t\t.map(table => this.generateTableCode(table))\n\t\t\t\t.forEach(({createTableStatement, alterTableStatements}) => {\n\n\t\t\t\t\tallCreateTableStatements.push(createTableStatement);\n\n\t\t\t\t\tif (alterTableStatements) {\n\t\t\t\t\t\tallAlterTableStatements.push(alterTableStatements);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\treturn allCreateTableStatements.join('\\n\\n')\n\t\t\t\t+ '\\n\\n'\n\t\t\t\t+ allAlterTableStatements.join('\\n\\n');\n\n\t}\n\n\t// FIXME split this method\n\tprivate generateTableCode(table: TableDescriptor): TableCreationStatements {\n\n\t\tconst columnLines: string[] = [];\n\t\tconst createSequenceLines: string[] = [];\n\t\tconst fkConstraintLines: string[] = [];\n\t\tconst otherConstraintLines: string[] = [];\n\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(table.name);\n\n\t\tconst {\n\t\t\tcolumnLine: idColumnLine,\n\t\t\tpkConstraintLine\n\t\t} = this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, table.identifierColumnName);\n\n\t\tcolumnLines.push(idColumnLine);\n\t\totherConstraintLines.push(pkConstraintLine);\n\n\t\tthis.processColumns(outputTableName, table.columns, columnLines, createSequenceLines, otherConstraintLines);\n\t\tthis.processReferences(outputTableName, table.references, columnLines, fkConstraintLines, otherConstraintLines);\n\n\t\tconst createTableInnerLines = [\n\t\t\t...columnLines,\n\t\t\t...otherConstraintLines\n\t\t];\n\n\t\tconst createTableLines = [\n\t\t\t...createSequenceLines,\n\t\t\t`CREATE TABLE \"${outputTableName}\" (`,\n\t\t\tindentLines(createTableInnerLines).join(',\\n'),\n\t\t\t');'\n\t\t];\n\n\t\tconst createTableStatement = createTableLines.join('\\n');\n\t\tconst alterTableStatements = fkConstraintLines.map(fkConstraintLine => {\n\t\t\treturn `ALTER TABLE \"${outputTableName}\" ADD ${fkConstraintLine};`;\n\t\t}).join('\\n');\n\n\t\treturn {\n\t\t\tcreateTableStatement,\n\t\t\talterTableStatements\n\t\t};\n\n\t}\n\n\tprivate processReferences(outputTableName: string, references: TableReferenceDescriptor[], columnLines: string[], fkConstraintLines: string[], otherConstraintLines: string[]) {\n\n\t\tfor (const reference of references) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tuniqueConstraintLine,\n\t\t\t\tfkConstraintLine\n\t\t\t} = this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\n\t\t\tcolumnLines.push(columnLine);\n\t\t\tfkConstraintLines.push(fkConstraintLine);\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\totherConstraintLines.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tprivate processColumns(\n\t\t\toutputTableName: string,\n\t\t\tcolumns: TableColumnDescriptor[],\n\t\t\tcolumnLines: string[],\n\t\t\tcreateSequenceLines: string[],\n\t\t\totherConstraintLines: string[]\n\t) {\n\n\t\tfor (const column of columns) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tcreateSequenceLine,\n\t\t\t\tuniqueConstraintLine\n\t\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\n\t\t\tcolumnLines.push(columnLine);\n\n\t\t\tif (createSequenceLine) {\n\t\t\t\tcreateSequenceLines.push(createSequenceLine);\n\t\t\t}\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\totherConstraintLines.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/generator/database/model/database-model-types';\nimport RegularColumnCode from '@/erdiagram/generator/database/code-converter/sqlserver/column/types/RegularColumnCode';\nimport SqlServerTypeResolver from '@/erdiagram/generator/database/code-converter/sqlserver/type/SqlServerTypeResolver';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class SqlServerColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlServerTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\t// FIXME refactor the way \"identity\" flag is used\n\tpublic generateColumnCode(outputTableName: string, column: TableColumnDescriptor, identity: boolean = false): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\t\tconst autoincrementalSequenceName = this.getAutoincrementalSequenceName(outputTableName, outputColumnName);\n\n\t\treturn {\n\t\t\tcreateSequenceLine: column.autoincremental ? this.generateCreateSequenceLine(autoincrementalSequenceName) : undefined,\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column, identity, autoincrementalSequenceName),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate getAutoincrementalSequenceName(outputTableName: string, outputColumnName: string): string {\n\t\treturn `${outputTableName}_${outputColumnName}_seq`;\n\t}\n\n\tprivate generateCreateSequenceLine(autoincrementalSequenceName: string): string {\n\t\treturn `CREATE SEQUENCE \"${autoincrementalSequenceName}\" START WITH 1;`;\n\t}\n\n\t// FIXME refactor this methods - it receives too much arguments\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: TableColumnDescriptor, identity: boolean, autoincrementalSequenceName: string): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\tautoincremental,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\"${outputColumnName}\"`,\n\t\t\tthis.generateSqlServerTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\tif (identity) {\n\t\t\tlineParts.push('IDENTITY(1, 1)');\n\t\t}\n\n\t\tif (autoincremental) {\n\t\t\tlineParts.push(`DEFAULT NEXT VALUE FOR \"${autoincrementalSequenceName}\"`);\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateSqlServerTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst sqlServerType = this.typeResolver.resolveSqlServerType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn sqlServerType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_unique\" UNIQUE (\"${outputColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport ForeignKeyColumnCode\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/types/ForeignKeyColumnCode';\nimport SqlServerColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class SqlServerForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: SqlServerColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: TableReferenceDescriptor): TableColumnDescriptor {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTIFIER,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique,\n\t\t\tautoincremental: false\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: TableReferenceDescriptor) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentifierColumnName);\n\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_fk\" FOREIGN KEY (\"${outputColumnName}\")`\n\t\t\t\t+ ` REFERENCES \"${outputTargetTableName}\" (\"${outputTargetColumnName}\")`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/generator/database/model/database-model-types';\nimport IdColumnCode from '@/erdiagram/generator/database/code-converter/sqlserver/column/types/IdColumnCode';\nimport SqlServerColumnCodeGenerator\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/column/SqlServerColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/generator/common/case-format/CaseConverter';\n\nexport default class SqlServerIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: SqlServerColumnCodeGenerator,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identifierColumnName: string): IdColumnCode {\n\n\t\tconst column = this.createIdColumnDescriptor(identifierColumnName);\n\n\t\tconst {\n\t\t\tcolumnLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, column, true);\n\n\t\tconst pkConstraintLine = this.createPrimaryKeyConstraint(outputTableName, column);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tpkConstraintLine\n\t\t};\n\n\t}\n\n\tprivate createIdColumnDescriptor(identifierColumnName: string): TableColumnDescriptor {\n\t\treturn {\n\t\t\tname: identifierColumnName,\n\t\t\ttype: EntityPropertyType.IDENTIFIER,\n\t\t\tlength: [],\n\t\t\tnotNull: true,\n\t\t\t// Autoincrement of identity columns have to be achieved using IDENTITY,\n\t\t\t// while other autoincremental columns have to use a custom sequence.\n\t\t\tautoincremental: false,\n\t\t\t// As primary keys are unique by default, we don't\n\t\t\t// need to manually define an UNIQUE KEY constraint\n\t\t\tunique: false\n\t\t};\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, column: TableColumnDescriptor) {\n\t\tconst columnName = this.columnNameCaseConverter.convertCase(column.name);\n\t\treturn `CONSTRAINT \"${outputTableName}_pk\" PRIMARY KEY (\"${columnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/generator/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport SqlServerDatabaseModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/config/SqlServerDatabaseModelToCodeConverterConfig';\nimport {findKeyFromValue, findValueFromNullableKey} from '@/erdiagram/util/record-utils';\nimport SqlServerDatabaseModelToCodeConverterSerializableConfig\n\tfrom '@/erdiagram/generator/database/code-converter/sqlserver/config/SqlServerDatabaseModelToCodeConverterSerializableConfig';\n\nexport class SqlServerDatabaseModelToCodeConverterConfigManager\n\t\textends AbstractComponentConfigManager<SqlServerDatabaseModelToCodeConverterConfig, Partial<SqlServerDatabaseModelToCodeConverterConfig>, SqlServerDatabaseModelToCodeConverterSerializableConfig> {\n\n\tgetDefaultConfig(): SqlServerDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTIFIER]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.TEXT]: 'NVARCHAR',\n\t\t\t\t[EntityPropertyType.LONG]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.INT]: 'INT',\n\t\t\t\t[EntityPropertyType.SHORT]: 'SMALLINT',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'DECIMAL',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'BIT',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIME',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'DATETIME2',\n\t\t\t\t[EntityPropertyType.BLOB]: 'VARBINARY(MAX)'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: SqlServerDatabaseModelToCodeConverterConfig, partialConfig?: Partial<SqlServerDatabaseModelToCodeConverterConfig>): SqlServerDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: SqlServerDatabaseModelToCodeConverterConfig): SqlServerDatabaseModelToCodeConverterSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\ttableNameCaseFormat: findKeyFromValue(StandardCaseFormats, fullConfig.tableNameCaseFormat),\n\t\t\tcolumnNameCaseFormat: findKeyFromValue(StandardCaseFormats, fullConfig.columnNameCaseFormat),\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: SqlServerDatabaseModelToCodeConverterSerializableConfig): SqlServerDatabaseModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\ttableNameCaseFormat: findValueFromNullableKey(StandardCaseFormats, serializableConfig.tableNameCaseFormat, StandardCaseFormats.UPPER_CAMEL),\n\t\t\tcolumnNameCaseFormat: findValueFromNullableKey(StandardCaseFormats, serializableConfig.columnNameCaseFormat, StandardCaseFormats.UPPER_CAMEL),\n\t\t};\n\t}\n\n}\n\nconst sqlServerDatabaseModelToCodeConverterConfigManager = new SqlServerDatabaseModelToCodeConverterConfigManager();\nexport default sqlServerDatabaseModelToCodeConverterConfigManager;\n","import SqlServerDatabaseModelToCodeConverterConfig from './SqlServerDatabaseModelToCodeConverterConfig';\nimport SqlServerDatabaseModelToCodeConverterSerializableConfig\n\tfrom './SqlServerDatabaseModelToCodeConverterSerializableConfig';\nimport sqlServerDatabaseModelToCodeConverterConfigManager, {SqlServerDatabaseModelToCodeConverterConfigManager} from './SqlServerDatabaseModelToCodeConverterConfigManager';\n\nexport {\n\tSqlServerDatabaseModelToCodeConverterConfig,\n\tSqlServerDatabaseModelToCodeConverterSerializableConfig,\n\tSqlServerDatabaseModelToCodeConverterConfigManager,\n\tsqlServerDatabaseModelToCodeConverterConfigManager\n};\n","import SqlServerDatabaseModelToCodeConverter\n\tfrom 'src/main/erdiagram/generator/database/code-converter/sqlserver/SqlServerDatabaseModelToCodeConverter';\n\nexport * from './config/exports';\n\nexport {\n\tSqlServerDatabaseModelToCodeConverter\n};\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class SqlServerTypeResolver {\n\n\tprivate readonly typeBindings: Partial<Record<EntityPropertyType, string>>;\n\n\tconstructor(typeBindings: Partial<Record<EntityPropertyType, string>>) {\n\t\tthis.typeBindings = typeBindings;\n\t}\n\n\tpublic resolveSqlServerType(type: EntityPropertyType): string {\n\n\t\tif (!this.typeBindings.hasOwnProperty(type)) {\n\t\t\tthrow new Error('Unsupported type: ' + type);\n\t\t}\n\n\t\treturn this.typeBindings[type]!;\n\n\t}\n\n}\n","export * from './code-converter/exports';\nexport * from './model/exports';\n","import pluralize from 'pluralize';\nimport {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/generator/database/model/database-model-types';\nimport DatabaseModelGeneratorConfig from '@/erdiagram/generator/database/model/config/DatabaseModelGeneratorConfig';\nimport {\n\tCardinality,\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityRelationshipModel,\n\tRelationshipDescriptor,\n\tRelationshipMember\n} from '@/erdiagram/parser/entity-relationship-model-types';\nimport databaseModelGeneratorConfigManager\n\tfrom '@/erdiagram/generator/database/model/config/DatabaseModelGeneratorConfigManager';\nimport {classifyBy} from '@/erdiagram/util/map-utils';\n\nexport default class DatabaseModelGenerator {\n\n\tprivate readonly config: DatabaseModelGeneratorConfig;\n\n\tconstructor(config?: Partial<DatabaseModelGeneratorConfig>) {\n\t\tthis.config = databaseModelGeneratorConfigManager.mergeWithDefaultConfig(config);\n\t}\n\n\tgenerateDatabaseModel(model: EntityRelationshipModel): DatabaseModel {\n\n\t\tconst entityIdentifiersMap = classifyBy(\n\t\t\t\tmodel.entities.filter(entity => entity.identifierPropertyName),\n\t\t\t\tentity => entity.name,\n\t\t\t\tentity => entity.identifierPropertyName!\n\t\t);\n\n\t\tconst tables: TableDescriptor[] = [];\n\n\t\tthis.generateEntityTables(model, entityIdentifiersMap, tables);\n\t\tthis.generateRelationshipTables(model, entityIdentifiersMap, tables);\n\n\t\treturn {\n\t\t\ttables\n\t\t};\n\n\t}\n\n\tprivate generateEntityTables(model: EntityRelationshipModel, entityIdentifiersMap: Map<string, string>, tables: TableDescriptor[]) {\n\t\tmodel.entities\n\t\t\t\t.map(entity => this.generateEntityTable(entity, model, entityIdentifiersMap))\n\t\t\t\t.forEach(sentence => tables.push(sentence));\n\t}\n\n\tprivate generateEntityTable(entity: EntityDescriptor, model: EntityRelationshipModel, entityIdentifiersMap: Map<string, string>): TableDescriptor {\n\n\t\tconst columns: TableColumnDescriptor[] = [];\n\n\t\tconst references: TableReferenceDescriptor[] = [];\n\n\t\tfor (const property of entity.properties) {\n\t\t\tcolumns.push(this.mapPropertyToColumn(property));\n\t\t}\n\n\t\tfor (const relationship of model.relationships) {\n\t\t\tif (relationship.rightMember.cardinality !== Cardinality.MANY) {\n\t\t\t\tif (relationship.leftMember.entity === entity.name) {\n\t\t\t\t\tconst isOneToOneRelationship = relationship.leftMember.cardinality !== Cardinality.MANY;\n\t\t\t\t\treferences.push(this.createTableReference(relationship.rightMember, entityIdentifiersMap, isOneToOneRelationship));\n\t\t\t\t}\n\t\t\t} else if (relationship.leftMember.cardinality !== Cardinality.MANY) {\n\t\t\t\tif (relationship.rightMember.entity === entity.name) {\n\t\t\t\t\treferences.push(this.createTableReference(relationship.leftMember, entityIdentifiersMap));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname: this.pluralizeEntityNameIfApplies(entity.name),\n\t\t\tidentifierColumnName: this.getIdentifierColumnName(entity.name, entityIdentifiersMap),\n\t\t\tcolumns,\n\t\t\treferences\n\t\t};\n\n\t}\n\n\tprivate generateRelationshipTables(model: EntityRelationshipModel, entityIdentifiersMap: Map<string, string>, tables: TableDescriptor[]) {\n\t\tmodel.relationships\n\t\t\t\t.filter(relationship => this.isManyToManyRelationship(relationship))\n\t\t\t\t.map(relationship => this.generateRelationshipTable(relationship, entityIdentifiersMap))\n\t\t\t\t.forEach(sentence => tables.push(sentence));\n\t}\n\n\tprivate generateRelationshipTable(relationship: RelationshipDescriptor, entityIdentifiersMap: Map<string, string>): TableDescriptor {\n\n\t\tconst name = this.getRelationshipTableName(relationship);\n\t\tconst identifierColumnName = this.getRelationshipTableIdentifierColumnName(relationship, entityIdentifiersMap);\n\n\t\treturn {\n\t\t\tname,\n\t\t\tidentifierColumnName,\n\t\t\tcolumns: [],\n\t\t\treferences: [\n\t\t\t\tthis.createTableReference(relationship.leftMember, entityIdentifiersMap),\n\t\t\t\tthis.createTableReference(relationship.rightMember, entityIdentifiersMap)\n\t\t\t]\n\t\t};\n\n\t}\n\n\tprivate getRelationshipTableName(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\trelationShipName,\n\t\t\tleftMember,\n\t\t\trightMember\n\t\t} = relationship;\n\n\t\tif (relationShipName) {\n\t\t\treturn relationShipName;\n\t\t}\n\n\t\treturn this.pluralizeEntityNameIfApplies(leftMember.entity)\n\t\t\t\t+ this.pluralizeEntityNameIfApplies(rightMember.entity);\n\n\t}\n\n\tprivate getRelationshipTableIdentifierColumnName(relationship: RelationshipDescriptor, entityIdentifiersMap: Map<string, string>): string {\n\n\t\tconst {\n\t\t\trelationShipName,\n\t\t\tleftMember,\n\t\t\trightMember\n\t\t} = relationship;\n\n\t\tif (relationShipName) {\n\t\t\treturn this.getIdentifierColumnName(relationShipName, entityIdentifiersMap);\n\t\t}\n\n\t\treturn this.getIdentifierColumnName(leftMember.entity + rightMember.entity, entityIdentifiersMap);\n\n\t}\n\n\tprivate createTableReference(toMember: RelationshipMember, entityIdentifiersMap: Map<string, string>, unique: boolean = false): TableReferenceDescriptor {\n\n\t\tconst {\n\t\t\tentityAlias,\n\t\t\tentity,\n\t\t\tcardinality\n\t\t} = toMember;\n\n\t\treturn {\n\t\t\tcolumnName: `${entityAlias}Id`,\n\t\t\ttargetTableName: this.pluralizeEntityNameIfApplies(entity),\n\t\t\ttargetTableIdentifierColumnName: this.getIdentifierColumnName(entity, entityIdentifiersMap),\n\t\t\tnotNull: cardinality !== Cardinality.ZERO_OR_ONE,\n\t\t\tunique\n\t\t};\n\n\t}\n\n\tprivate pluralizeEntityNameIfApplies(entityName: string): string {\n\t\tif (this.config.usePluralTableNames) {\n\t\t\treturn pluralize(entityName);\n\t\t} else {\n\t\t\treturn entityName;\n\t\t}\n\t}\n\n\tprivate getIdentifierColumnName(entityName: string, entityIdentifiersMap: Map<string, string>): string {\n\n\t\tif (entityIdentifiersMap.has(entityName)) {\n\t\t\treturn entityIdentifiersMap.get(entityName)!;\n\t\t}\n\n\t\tconst {idNamingStrategy} = this.config;\n\t\treturn idNamingStrategy(entityName);\n\n\t}\n\n\tprivate mapPropertyToColumn(property: EntityPropertyDescriptor): TableColumnDescriptor {\n\n\t\tconst {\n\t\t\tname,\n\t\t\toptional,\n\t\t\tautoincremental,\n\t\t\tunique,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = property;\n\n\t\treturn {\n\t\t\tname,\n\t\t\tnotNull: !optional,\n\t\t\tautoincremental,\n\t\t\tunique,\n\t\t\ttype,\n\t\t\tlength\n\t\t};\n\n\t}\n\n\tprivate isManyToManyRelationship(relationship: RelationshipDescriptor): boolean {\n\t\treturn [\n\t\t\trelationship.leftMember,\n\t\t\trelationship.rightMember\n\t\t].every(member => member.cardinality === Cardinality.MANY);\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport DatabaseModelGeneratorConfig from '@/erdiagram/generator/database/model/config/DatabaseModelGeneratorConfig';\nimport StandardIdNamingStrategies from '@/erdiagram/generator/common/id-naming-strategy/StandardIdNamingStrategies';\nimport {findKeyFromValue, findValueFromNullableKey} from '@/erdiagram/util/record-utils';\nimport DatabaseModelGeneratorSerializableConfig\n\tfrom '@/erdiagram/generator/database/model/config/DatabaseModelGeneratorSerializableConfig';\n\nexport class DatabaseModelGeneratorConfigManager\n\t\textends AbstractComponentConfigManager<DatabaseModelGeneratorConfig, Partial<DatabaseModelGeneratorConfig>, DatabaseModelGeneratorSerializableConfig> {\n\n\tgetDefaultConfig(): DatabaseModelGeneratorConfig {\n\t\treturn {\n\t\t\tusePluralTableNames: false,\n\t\t\tidNamingStrategy: StandardIdNamingStrategies.DEFAULT\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: DatabaseModelGeneratorConfig, partialConfig?: Partial<DatabaseModelGeneratorConfig>): DatabaseModelGeneratorConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: DatabaseModelGeneratorConfig): DatabaseModelGeneratorSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\tidNamingStrategy: findKeyFromValue(StandardIdNamingStrategies, fullConfig.idNamingStrategy)\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: DatabaseModelGeneratorSerializableConfig): DatabaseModelGeneratorConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\tidNamingStrategy: findValueFromNullableKey(StandardIdNamingStrategies, serializableConfig.idNamingStrategy, StandardIdNamingStrategies.DEFAULT)\n\t\t};\n\t}\n\n}\n\nconst databaseModelGeneratorConfigManager = new DatabaseModelGeneratorConfigManager();\nexport default databaseModelGeneratorConfigManager;\n","import DatabaseModelGeneratorConfig from './DatabaseModelGeneratorConfig';\nimport DatabaseModelGeneratorSerializableConfig from './DatabaseModelGeneratorSerializableConfig';\nimport databaseModelGeneratorConfigManager, {DatabaseModelGeneratorConfigManager} from './DatabaseModelGeneratorConfigManager';\n\nexport {\n\tDatabaseModelGeneratorConfig,\n\tDatabaseModelGeneratorSerializableConfig,\n\tDatabaseModelGeneratorConfigManager,\n\tdatabaseModelGeneratorConfigManager\n};\n","import DatabaseModelGenerator from './DatabaseModelGenerator';\n\nexport * from './database-model-types';\nexport * from './config/exports';\n\nexport {\n\tDatabaseModelGenerator\n};\n","export * from './nomnoml/exports';\n","import {EntityRelationshipModel} from '@/erdiagram/parser/entity-relationship-model-types';\nimport EntityCodeGenerator from '@/erdiagram/generator/diagram/nomnoml/entity/EntityCodeGenerator';\nimport RelationshipCodeGenerator from '@/erdiagram/generator/diagram/nomnoml/relationship/RelationshipCodeGenerator';\nimport EntityRelationshipModelToCodeConverter from '@/erdiagram/generator/EntityRelationshipModelToCodeConverter';\n\nexport default class EntityRelationshipModelToNomnomlCodeConverter implements EntityRelationshipModelToCodeConverter {\n\n\tprivate readonly entityCodeGenerator = new EntityCodeGenerator();\n\tprivate readonly relationshipCodeGenerator = new RelationshipCodeGenerator();\n\n\tpublic generateCode(model: EntityRelationshipModel): string {\n\t\treturn [\n\t\t\t...model.entities.map(entity => this.entityCodeGenerator.generateEntityCode(entity)),\n\t\t\t...model.relationships.map(relationship => this.relationshipCodeGenerator.generateRelationshipCode(relationship))\n\t\t].join('\\n\\n');\n\t}\n\n}\n","import {EntityRelationshipModel} from '@/erdiagram/parser/entity-relationship-model-types';\nimport EntityRelationshipModelToNomnomlCodeConverter\n\tfrom '@/erdiagram/generator/diagram/nomnoml/EntityRelationshipModelToNomnomlCodeConverter';\nimport nomnoml from 'nomnoml';\n\ninterface NomnomlOptions {\n\tarrowSize?: number;\n\tbendSize?: number;\n\tdirection?: 'down' | 'right';\n\tgutter?: number;\n\tedgeMargin?: number;\n\tgravity?: number;\n\tedges?: 'hard' | 'rounded';\n\tbackground?: string;\n\tfill?: string;\n\tfillArrows?: boolean;\n\tfont?: string;\n\tfontSize?: number;\n\tleading?: number;\n\tlineWidth?: number;\n\tpadding?: number;\n\tspacing?: number;\n\tstroke?: string;\n\ttitle?: string;\n\tzoom?: number;\n\tacyclicer?: 'greedy';\n\tranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\n}\n\nconst DEFAULT_OPTIONS: NomnomlOptions = {\n\tbackground: 'white',\n\tfill: '#eef6ff',\n\tgravity: 1.5,\n\tlineWidth: 1,\n\tstroke: '#555',\n\tarrowSize: 1,\n\tranker: 'longest-path'\n};\n\nexport default class NomnomlDiagramGenerator {\n\n\tprivate erModelToNomnomlCodeConverter = new EntityRelationshipModelToNomnomlCodeConverter();\n\n\tpublic generateSvgDiagram(model: EntityRelationshipModel, options?: NomnomlOptions) {\n\t\treturn nomnoml.renderSvg(this.generateCode(model, options));\n\t}\n\n\tpublic drawDiagram(model: EntityRelationshipModel, canvas: HTMLCanvasElement, options?: NomnomlOptions) {\n\t\treturn nomnoml.draw(canvas, this.generateCode(model, options));\n\t}\n\n\tprivate generateCode(model: EntityRelationshipModel, options?: NomnomlOptions) {\n\n\t\tconst directivesCode = this.convertOptionsIntoDirectives({\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...options\n\t\t});\n\n\t\tconst diagramCode = this.erModelToNomnomlCodeConverter.generateCode(model);\n\n\t\treturn directivesCode + '\\n\\n' + diagramCode;\n\n\t}\n\n\tprivate convertOptionsIntoDirectives(options: NomnomlOptions): string {\n\t\treturn Object.entries(options)\n\t\t\t\t.map(([key, value]) => `#${key}: ${value}`)\n\t\t\t\t.join('\\n');\n\t}\n\n}\n","import {EntityDescriptor} from '@/erdiagram/parser/entity-relationship-model-types';\nimport EntityIdentifierPropertyCodeGenerator\n\tfrom '@/erdiagram/generator/diagram/nomnoml/entity/EntityIdentifierPropertyCodeGenerator';\nimport EntityPropertyCodeGenerator from '@/erdiagram/generator/diagram/nomnoml/entity/EntityPropertyCodeGenerator';\n\nexport default class EntityCodeGenerator {\n\n\tprivate readonly entityIdentifierPropertyCodeGenerator = new EntityIdentifierPropertyCodeGenerator();\n\tprivate readonly entityPropertyCodeGenerator = new EntityPropertyCodeGenerator();\n\n\tpublic generateEntityCode(entity: EntityDescriptor): string {\n\n\t\tconst propertiesCode = this.generateEntityPropertiesCode(entity);\n\n\t\tif (!propertiesCode) {\n\t\t\treturn `[${entity.name}]`;\n\t\t}\n\n\t\treturn [\n\t\t\t`[${entity.name}|`,\n\t\t\tpropertiesCode,\n\t\t\t']'\n\t\t].join('\\n');\n\n\t}\n\n\tprivate generateEntityPropertiesCode(entity: EntityDescriptor): string {\n\n\t\tconst {\n\t\t\tidentifierPropertyName,\n\t\t\tproperties\n\t\t} = entity;\n\n\t\tconst propertiesCode = properties.map(property => this.entityPropertyCodeGenerator.generateEntityPropertyCode(property));\n\n\t\tif (identifierPropertyName) {\n\t\t\tpropertiesCode.unshift(this.entityIdentifierPropertyCodeGenerator.generateEntityIdentifierPropertyCode(identifierPropertyName));\n\t\t}\n\n\t\treturn propertiesCode.join('\\n');\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class EntityIdentifierPropertyCodeGenerator {\n\n\tpublic generateEntityIdentifierPropertyCode(identifierPropertyName: string): string {\n\t\treturn `  ${identifierPropertyName}: ${EntityPropertyType.IDENTIFIER}`;\n\t}\n\n}\n","import {EntityPropertyDescriptor, EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class EntityPropertyCodeGenerator {\n\n\tpublic generateEntityPropertyCode(property: EntityPropertyDescriptor): string {\n\n\t\tconst {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tlength,\n\t\t\toptional,\n\t\t\tunique,\n\t\t\tautoincremental\n\t\t} = property;\n\n\t\tconst typeWithLengthCode = this.getTypeWithLengthCode(type, length);\n\n\t\tconst modifiersCode = this.getModifiersCode(optional, unique, autoincremental);\n\n\t\treturn `  ${name}${modifiersCode}: ${typeWithLengthCode}`;\n\n\t}\n\n\tprivate getTypeWithLengthCode(type: EntityPropertyType, length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn type;\n\t\t}\n\n\t\treturn `${type}(${length.join(', ')})`;\n\n\t}\n\n\tprivate getModifiersCode(optional: boolean, unique: boolean, autoincremental: boolean) {\n\n\t\tconst optionalModifierCode = optional ? '?' : '';\n\t\tconst uniqueModifierCode = unique ? '!' : '';\n\t\tconst autoincrementalModifierCode = autoincremental ? '+' : '';\n\n\t\treturn optionalModifierCode + uniqueModifierCode + autoincrementalModifierCode;\n\n\t}\n\n}\n","import EntityRelationshipModelToNomnomlCodeConverter\n\tfrom '@/erdiagram/generator/diagram/nomnoml/EntityRelationshipModelToNomnomlCodeConverter';\nimport NomnomlDiagramGenerator from '@/erdiagram/generator/diagram/nomnoml/NomnomlDiagramGenerator';\n\nexport {\n\tEntityRelationshipModelToNomnomlCodeConverter,\n\tNomnomlDiagramGenerator\n};\n","import {Cardinality, Direction, RelationshipDescriptor} from '@/erdiagram/parser/entity-relationship-model-types';\n\nexport default class RelationshipCodeGenerator {\n\n\tpublic generateRelationshipCode(relationship: RelationshipDescriptor): string {\n\t\tif (relationship.relationShipName) {\n\t\t\treturn this.generateNamedRelationshipCode(relationship);\n\t\t} else {\n\t\t\treturn this.generateUnnamedRelationshipCode(relationship);\n\t\t}\n\t}\n\n\tprivate generateNamedRelationshipCode(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\tleftMember,\n\t\t\trightMember,\n\t\t\tdirection,\n\t\t\trelationShipName\n\t\t} = relationship;\n\n\t\tconst leftMemberCardinalityCode = this.generateCardinalityCode(leftMember.cardinality);\n\t\tconst rightMemberCardinalityCode = this.generateCardinalityCode(rightMember.cardinality);\n\n\t\tconst leftSideDirectionCode = this.generateLeftSideDirectionCode(direction);\n\t\tconst rightSideDirectionCode = this.generateRightSideDirectionCode(direction);\n\n\t\treturn [\n\t\t\t`[<label>${relationShipName}]`,\n\t\t\t`[${leftMember.entity}] ${leftMemberCardinalityCode}${leftSideDirectionCode} [${relationShipName}]`,\n\t\t\t`[${relationShipName}] ${rightSideDirectionCode}${rightMemberCardinalityCode} [${rightMember.entity}]`\n\t\t].join('\\n');\n\n\t}\n\n\tprivate generateLeftSideDirectionCode(direction: Direction): string {\n\t\treturn [Direction.RIGHT_TO_LEFT, Direction.BIDIRECTIONAL].includes(direction) ? '<-' : '-';\n\t}\n\n\tprivate generateRightSideDirectionCode(direction: Direction): string {\n\t\treturn [Direction.LEFT_TO_RIGHT, Direction.BIDIRECTIONAL].includes(direction) ? '->' : '-';\n\t}\n\n\tprivate generateUnnamedRelationshipCode(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\tleftMember,\n\t\t\trightMember,\n\t\t\tdirection\n\t\t} = relationship;\n\n\t\tconst leftMemberCardinalityCode = this.generateCardinalityCode(leftMember.cardinality);\n\t\tconst rightMemberCardinalityCode = this.generateCardinalityCode(rightMember.cardinality);\n\n\t\tconst directionCode = this.generateDirectionCode(direction);\n\t\treturn `[${leftMember.entity}] ${leftMemberCardinalityCode}${directionCode}${rightMemberCardinalityCode} [${rightMember.entity}]`;\n\n\t}\n\n\tprivate generateDirectionCode(direction: Direction): string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.LEFT_TO_RIGHT:\n\t\t\t\treturn '->';\n\t\t\tcase Direction.RIGHT_TO_LEFT:\n\t\t\t\treturn '<-';\n\t\t\tcase Direction.BIDIRECTIONAL:\n\t\t\t\treturn '<->';\n\t\t}\n\t}\n\n\tprivate generateCardinalityCode(cardinality: Cardinality): string {\n\t\tswitch (cardinality) {\n\t\t\tcase Cardinality.ZERO_OR_ONE:\n\t\t\t\treturn '0..1';\n\t\t\tcase Cardinality.ONE:\n\t\t\t\treturn '1';\n\t\t\tcase Cardinality.MANY:\n\t\t\t\treturn '*';\n\t\t}\n\t}\n\n}\n","import EntityRelationshipModelToCodeConverter from './EntityRelationshipModelToCodeConverter';\n\nexport * from './common/exports';\nexport * from './database/exports';\nexport * from './oop/exports';\nexport * from './diagram/exports';\n\nexport {\n\tEntityRelationshipModelToCodeConverter\n};\n","import EntityRelationshipModelToCodeConverter from '@/erdiagram/generator/EntityRelationshipModelToCodeConverter';\nimport ClassModelToCodeConverter from '@/erdiagram/generator/oop/code-converter/ClassModelToCodeConverter';\nimport {EntityRelationshipModel} from '@/erdiagram/parser/entity-relationship-model-types';\nimport ClassModelGenerator from '@/erdiagram/generator/oop/model/ClassModelGenerator';\n\nexport default class EntityRelationshipModelToClassCodeConverter implements EntityRelationshipModelToCodeConverter {\n\n\tconstructor(\n\t\t\tprivate readonly classModelGenerator: ClassModelGenerator,\n\t\t\tprivate readonly classModelToCodeConverter: ClassModelToCodeConverter\n\t) {\n\n\t}\n\n\tpublic generateCode(entityRelationshipModel: EntityRelationshipModel): string {\n\t\tconst classModel = this.classModelGenerator.generateClassModel(entityRelationshipModel);\n\t\treturn this.classModelToCodeConverter.generateCode(classModel);\n\t}\n\n}\n","import ClassModelToCodeConverterConfig from './ClassModelToCodeConverterConfig';\nimport ClassModelToCodeConverterSerializableConfig from './ClassModelToCodeConverterSerializableConfig';\nimport ClassModelToCodeConverter from './ClassModelToCodeConverter';\nimport EntityRelationshipModelToClassCodeConverter from './EntityRelationshipModelToClassCodeConverter';\n\nexport * from './java/exports';\nexport * from './typescript/exports';\n\nexport {\n\tClassModelToCodeConverter,\n\tClassModelToCodeConverterConfig,\n\tClassModelToCodeConverterSerializableConfig,\n\tEntityRelationshipModelToClassCodeConverter\n};\n","import {capitalizeWord} from '@/erdiagram/util/string-utils';\nimport {ClassDescriptor, ClassFieldDescriptor, ClassModel} from '@/erdiagram/generator/oop/model/class-model-types';\nimport {indentLine, indentLines} from '@/erdiagram/util/indent-utils';\nimport JavaParameterizedType, {\n\tcreateJavaParameterizedType,\n\tisJavaParameterizedType\n} from '@/erdiagram/generator/oop/code-converter/java/type/JavaParameterizedType';\nimport JavaType, {createJavaType} from '@/erdiagram/generator/oop/code-converter/java/type/JavaType';\nimport {removeDuplicates} from '@/erdiagram/util/array-utils';\nimport ClassModelToCodeConverter from '@/erdiagram/generator/oop/code-converter/ClassModelToCodeConverter';\nimport JavaClassModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/oop/code-converter/java/config/JavaClassModelToCodeConverterConfig';\nimport javaClassModelToCodeConverterConfigManager\n\tfrom '@/erdiagram/generator/oop/code-converter/java/config/JavaClassModelToCodeConverterConfigManager';\n\nconst EMPTY_STRING: string = '';\n\nexport default class JavaClassModelToCodeConverter implements ClassModelToCodeConverter {\n\n\tprivate readonly config: JavaClassModelToCodeConverterConfig;\n\n\tconstructor(config?: Partial<JavaClassModelToCodeConverterConfig>) {\n\t\tthis.config = javaClassModelToCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\t}\n\n\tpublic generateCode(classModel: ClassModel): string {\n\t\treturn classModel.classes\n\t\t\t\t.map(classDescriptor => this.generateClass(classDescriptor))\n\t\t\t\t.join('\\n\\n');\n\t}\n\n\tprivate generateClass(classDescriptor: ClassDescriptor): string {\n\n\t\tconst className = capitalizeWord(classDescriptor.name);\n\n\t\tconst fieldsTypes: JavaType[] = [];\n\t\tconst fieldsLines: string[] = [];\n\t\tconst methodsLines: string[] = [];\n\n\t\tfor (const field of classDescriptor.fields) {\n\n\t\t\tconst {\n\t\t\t\tfieldType,\n\t\t\t\tfieldLines,\n\t\t\t\tgetterLines,\n\t\t\t\tsetterLines\n\t\t\t} = this.createField(field);\n\n\t\t\tfieldsTypes.push(fieldType);\n\t\t\tfieldsLines.push(...fieldLines);\n\t\t\tmethodsLines.push(...getterLines, EMPTY_STRING, ...setterLines, EMPTY_STRING);\n\n\t\t}\n\n\t\tconst classOuterLines = [\n\t\t\t`/* ========== ${className} class ========== */`,\n\t\t\tEMPTY_STRING\n\t\t];\n\n\t\tif (this.config.generatedClassesPackage) {\n\t\t\tclassOuterLines.push(`package ${this.config.generatedClassesPackage};`, EMPTY_STRING);\n\t\t}\n\n\t\tconst importLines = this.createImportStatements(fieldsTypes);\n\n\t\tif (this.config.useSpringNullabilityAnnotations) {\n\t\t\t// FIXME gestionar estos imports de otra forma\n\t\t\t// Quizás hacer que createField() devuelva qué tipos utiliza, y no solo el tipo del campo\n\t\t\tconst importNonNullAnnotation = classDescriptor.fields.some(f => !f.nullable);\n\t\t\tif (importNonNullAnnotation) {\n\t\t\t\timportLines.push('import org.springframework.lang.NonNull;');\n\t\t\t}\n\t\t\tconst importNullableAnnotation = classDescriptor.fields.some(f => f.nullable);\n\t\t\tif (importNullableAnnotation) {\n\t\t\t\timportLines.push('import org.springframework.lang.Nullable;');\n\t\t\t}\n\t\t}\n\n\t\tif (importLines.length !== 0) {\n\t\t\tclassOuterLines.push(...importLines, EMPTY_STRING);\n\t\t}\n\n\t\tclassOuterLines.push(`public class ${className} {`);\n\n\t\tconst classContentLines: string[] = [\n\t\t\tEMPTY_STRING,\n\t\t\t...fieldsLines,\n\t\t\tEMPTY_STRING,\n\t\t\t...methodsLines\n\t\t];\n\n\t\tclassOuterLines.push(...indentLines(classContentLines));\n\n\t\tclassOuterLines.push(`}`);\n\n\t\treturn classOuterLines.join('\\n');\n\n\t}\n\n\tprivate createField(field: ClassFieldDescriptor) {\n\n\t\tconst fieldName = field.name;\n\t\tconst capitalizedFieldName = capitalizeWord(fieldName);\n\n\t\tconst fieldLines: string[] = [];\n\n\t\t// TODO use length for validation annotations?\n\n\t\tif (this.config.useSpringNullabilityAnnotations) {\n\t\t\tif (field.nullable) {\n\t\t\t\tfieldLines.push('@Nullable');\n\t\t\t} else {\n\t\t\t\tfieldLines.push('@NonNull');\n\t\t\t}\n\t\t}\n\n\t\tconst javaType = this.mapFieldTypeToJavaType(field);\n\t\tconst formattedJavaType = javaType.formatSimple();\n\n\t\tfieldLines.push(`private ${formattedJavaType} ${fieldName};`);\n\n\t\tconst getterLines: string[] = [\n\t\t\t`public ${formattedJavaType} get${capitalizedFieldName}() {`,\n\t\t\tindentLine(`return ${fieldName};`),\n\t\t\t'}',\n\t\t];\n\n\t\tconst setterLines: string[] = [\n\t\t\t`public ${formattedJavaType} set${capitalizedFieldName}(${formattedJavaType} ${fieldName}) {`,\n\t\t\tindentLine(`this.${fieldName} = ${fieldName};`),\n\t\t\t'}',\n\t\t];\n\n\t\treturn {\n\t\t\tfieldType: javaType,\n\t\t\tfieldLines,\n\t\t\tgetterLines,\n\t\t\tsetterLines\n\t\t};\n\n\t}\n\n\tprivate mapFieldTypeToJavaType(field: ClassFieldDescriptor): JavaType {\n\t\tif (field.list) {\n\t\t\treturn this.mapListTypeToJavaType(field);\n\t\t} else {\n\t\t\treturn this.mapSingleTypeToJavaType(field);\n\t\t}\n\t}\n\n\tprivate mapListTypeToJavaType(field: ClassFieldDescriptor): JavaParameterizedType {\n\t\treturn createJavaParameterizedType(\n\t\t\t\t'List',\n\t\t\t\t'java.util',\n\t\t\t\t[\n\t\t\t\t\tthis.mapSingleTypeToJavaType(field)\n\t\t\t\t]\n\t\t);\n\t}\n\n\tprivate mapSingleTypeToJavaType(field: ClassFieldDescriptor): JavaType {\n\n\t\tconst {\n\t\t\tentityType,\n\t\t\tprimitiveType\n\t\t} = field;\n\n\t\tif (entityType) {\n\n\t\t\tif (primitiveType) {\n\t\t\t\tthrow new Error('Invalid field descriptor: provided both primitive and entity types');\n\t\t\t}\n\n\t\t\treturn createJavaType(entityType, this.config.generatedClassesPackage);\n\n\t\t}\n\n\t\tif (!primitiveType) {\n\t\t\tthrow new Error('Invalid field descriptor: missing type');\n\t\t}\n\n\t\tif (!this.config.typeBindings.hasOwnProperty(primitiveType)) {\n\t\t\tthrow new Error('Unsupported type: ' + primitiveType);\n\t\t}\n\n\t\treturn this.config.typeBindings[primitiveType]!;\n\n\t}\n\n\tprivate createImportStatements(javaTypes: JavaType[]): string[] {\n\n\t\tconst importStatements = this.unrollTypesRecursively(javaTypes)\n\t\t\t\t.filter(javaType => this.isImportRequired(javaType))\n\t\t\t\t.map(javaType => `import ${javaType.canonicalName};`);\n\n\t\treturn removeDuplicates(importStatements).sort();\n\n\t}\n\n\tprivate unrollTypesRecursively(javaTypes: JavaType[], appendTo: JavaType[] = []): JavaType[] {\n\n\t\tfor (const javaType of javaTypes) {\n\n\t\t\tappendTo.push(javaType);\n\n\t\t\tif (isJavaParameterizedType(javaType)) {\n\t\t\t\tthis.unrollTypesRecursively(javaType.parameterTypes, appendTo);\n\t\t\t}\n\n\t\t}\n\n\t\treturn appendTo;\n\n\t}\n\n\tprivate isImportRequired(javaType: JavaType): boolean {\n\t\treturn !!javaType.packageName\n\t\t\t\t&& javaType.packageName !== 'java.lang'\n\t\t\t\t&& this.config.generatedClassesPackage !== javaType.packageName;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport JavaClassModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/oop/code-converter/java/config/JavaClassModelToCodeConverterConfig';\nimport parseJavaType from '@/erdiagram/generator/oop/code-converter/java/type/parseJavaType';\nimport {mapValues} from '@/erdiagram/util/record-utils';\nimport JavaClassModelToCodeConverterSerializableConfig\n\tfrom '@/erdiagram/generator/oop/code-converter/java/config/JavaClassModelToCodeConverterSerializableConfig';\n\nexport class JavaClassModelToCodeConverterConfigManager\n\t\textends AbstractComponentConfigManager<JavaClassModelToCodeConverterConfig, Partial<JavaClassModelToCodeConverterConfig>, JavaClassModelToCodeConverterSerializableConfig> {\n\n\tgetDefaultConfig(): JavaClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTIFIER]: parseJavaType('java.lang.Long'),\n\t\t\t\t[EntityPropertyType.TEXT]: parseJavaType('java.lang.String'),\n\t\t\t\t[EntityPropertyType.LONG]: parseJavaType('java.lang.Long'),\n\t\t\t\t[EntityPropertyType.INT]: parseJavaType('java.lang.Integer'),\n\t\t\t\t[EntityPropertyType.SHORT]: parseJavaType('java.lang.Short'),\n\t\t\t\t[EntityPropertyType.DECIMAL]: parseJavaType('java.math.BigDecimal'),\n\t\t\t\t[EntityPropertyType.BOOLEAN]: parseJavaType('java.lang.Boolean'),\n\t\t\t\t[EntityPropertyType.DATE]: parseJavaType('java.time.LocalDate'),\n\t\t\t\t[EntityPropertyType.TIME]: parseJavaType('java.time.LocalTime'),\n\t\t\t\t[EntityPropertyType.DATETIME]: parseJavaType('java.time.LocalDateTime'),\n\t\t\t\t[EntityPropertyType.BLOB]: parseJavaType('byte[]')\n\t\t\t},\n\t\t\tuseSpringNullabilityAnnotations: false\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: JavaClassModelToCodeConverterConfig, partialConfig?: Partial<JavaClassModelToCodeConverterConfig>): JavaClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: JavaClassModelToCodeConverterConfig): JavaClassModelToCodeConverterSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\ttypeBindings: mapValues(fullConfig.typeBindings, javaType => javaType!.formatCanonical()),\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: JavaClassModelToCodeConverterSerializableConfig): JavaClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\ttypeBindings: mapValues(serializableConfig.typeBindings, parseJavaType),\n\t\t};\n\t}\n\n}\n\nconst javaClassModelToCodeConverterConfigManager = new JavaClassModelToCodeConverterConfigManager();\nexport default javaClassModelToCodeConverterConfigManager;\n","import JavaClassModelToCodeConverterConfig from './JavaClassModelToCodeConverterConfig';\nimport JavaClassModelToCodeConverterSerializableConfig from './JavaClassModelToCodeConverterSerializableConfig';\nimport javaClassModelToCodeConverterConfigManager, {JavaClassModelToCodeConverterConfigManager} from './JavaClassModelToCodeConverterConfigManager';\n\nexport {\n\tJavaClassModelToCodeConverterConfig,\n\tJavaClassModelToCodeConverterSerializableConfig,\n\tJavaClassModelToCodeConverterConfigManager,\n\tjavaClassModelToCodeConverterConfigManager\n};\n","import JavaType, {createJavaType} from './type/JavaType';\nimport JavaParameterizedType, {\n\tcreateJavaArrayType,\n\tcreateJavaParameterizedType,\n\tisJavaParameterizedType\n} from './type/JavaParameterizedType';\nimport JavaClassModelToCodeConverter from './JavaClassModelToCodeConverter';\nimport parseJavaType from '@/erdiagram/generator/oop/code-converter/java/type/parseJavaType';\n\nexport * from './config/exports';\n\nexport {\n\tJavaType,\n\tcreateJavaType,\n\tJavaParameterizedType,\n\tcreateJavaParameterizedType,\n\tcreateJavaArrayType,\n\tisJavaParameterizedType,\n\tparseJavaType,\n\tJavaClassModelToCodeConverter\n};\n","import JavaType from '@/erdiagram/generator/oop/code-converter/java/type/JavaType';\n\nexport default interface JavaParameterizedType extends JavaType {\n\tparameterTypes: JavaType[];\n}\n\nexport function createJavaParameterizedType(name: string, packageName: string | undefined, parameterTypes: JavaType[]): JavaParameterizedType {\n\n\tconst canonicalName = packageName ? `${packageName}.${name}` : name;\n\n\treturn {\n\t\tpackageName,\n\t\tname,\n\t\tparameterTypes,\n\t\tcanonicalName,\n\t\tformatSimple(canonical: boolean = false) {\n\t\t\tconst formattedParameterTypes = parameterTypes.map(t => t.formatSimple()).join(', ');\n\t\t\treturn `${name}<${formattedParameterTypes}>`;\n\t\t},\n\t\tformatCanonical(canonical: boolean = false) {\n\t\t\tconst formattedParameterTypes = parameterTypes.map(t => t.formatCanonical()).join(', ');\n\t\t\treturn `${canonicalName}<${formattedParameterTypes}>`;\n\t\t}\n\t};\n}\n\nexport function createJavaArrayType(parameterType: JavaType): JavaParameterizedType {\n\n\tconst name = `${parameterType.name}[]`;\n\n\treturn {\n\t\tname,\n\t\tparameterTypes: [parameterType],\n\t\tcanonicalName: name,\n\t\tformatSimple() {\n\t\t\treturn `${parameterType.formatSimple()}[]`;\n\t\t},\n\t\tformatCanonical() {\n\t\t\treturn `${parameterType.formatCanonical()}[]`;\n\t\t}\n\t};\n\n}\n\nexport function isJavaParameterizedType(javaType: JavaType): javaType is JavaParameterizedType {\n\treturn Array.isArray((javaType as JavaParameterizedType).parameterTypes);\n}\n","export default interface JavaType {\n\n\tpackageName?: string;\n\tname: string;\n\tcanonicalName: string;\n\n\tformatSimple(): string;\n\n\tformatCanonical(): string;\n\n}\n\nexport function createJavaType(name: string, packageName?: string): JavaType {\n\n\tconst canonicalName = packageName ? `${packageName}.${name}` : name;\n\n\treturn {\n\t\tpackageName,\n\t\tname,\n\t\tcanonicalName,\n\t\tformatSimple() {\n\t\t\treturn name;\n\t\t},\n\t\tformatCanonical() {\n\t\t\treturn canonicalName;\n\t\t}\n\t};\n\n}\n","import {\n\tcreateJavaArrayType,\n\tcreateJavaParameterizedType\n} from '@/erdiagram/generator/oop/code-converter/java/type/JavaParameterizedType';\nimport JavaType, {createJavaType} from '@/erdiagram/generator/oop/code-converter/java/type/JavaType';\n\nexport default function parseJavaType(text: string): JavaType {\n\ttry {\n\t\treturn parseJavaTypeInternal(text);\n\t} catch (error) {\n\t\tthrow new Error('Malformed Java type: ' + text);\n\t}\n}\n\nfunction parseJavaTypeInternal(text: string): JavaType {\n\n\tconst trimmedText = text.trim();\n\n\tif (trimmedText.endsWith('[]')) {\n\t\tconst parameterType = trimmedText.substring(0, trimmedText.length - 2);\n\t\treturn createJavaArrayType(parseJavaType(parameterType));\n\t}\n\n\tconst startOfParameterTypes = trimmedText.indexOf('<');\n\n\tif (startOfParameterTypes === -1) {\n\t\treturn parseJavaSimpleType(trimmedText);\n\t}\n\n\tconst endOfParameterTypes = trimmedText.lastIndexOf('>');\n\n\tif (endOfParameterTypes === -1) {\n\t\tthrow new Error('Missing end character of parameter types (>)');\n\t}\n\n\tif (endOfParameterTypes !== trimmedText.length - 1) {\n\t\tthrow new Error('Unexpected characters found after parameter types');\n\t}\n\n\tconst rawType = parseJavaSimpleType(trimmedText.substring(0, startOfParameterTypes));\n\n\tconst parameterTypes = splitParameterTypes(trimmedText.substring(startOfParameterTypes + 1, endOfParameterTypes))\n\t\t\t.map(parameterType => parseJavaType(parameterType));\n\n\treturn createJavaParameterizedType(rawType.name, rawType.packageName, parameterTypes);\n\n}\n\nfunction parseJavaSimpleType(text: string): JavaType {\n\n\tconst trimmedText = text.trim();\n\n\tconst lastDotIndex = trimmedText.lastIndexOf('.');\n\n\tif (lastDotIndex === -1) {\n\t\treturn createJavaType(trimmedText);\n\t}\n\n\tconst packageName = trimmedText.substring(0, lastDotIndex);\n\tconst className = trimmedText.substring(lastDotIndex + 1);\n\n\treturn createJavaType(className, packageName);\n\n}\n\nfunction splitParameterTypes(parameterTypesText: string): string[] {\n\n\tif (!parameterTypesText.includes(',')) {\n\t\treturn [parameterTypesText];\n\t}\n\n\tconst commaIndices: number[] = [];\n\n\tlet nestedLevelsCount = 0;\n\n\t[...parameterTypesText].forEach((character, index) => {\n\t\tswitch (character) {\n\t\t\tcase ',':\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tnestedLevelsCount++;\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tthrow new Error('Unexpected character \">\"');\n\t\t\t\t}\n\t\t\t\tnestedLevelsCount--;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst splittedParameterTypes: string[] = [];\n\tlet startIndex = 0;\n\n\tfor (const commaIndex of commaIndices) {\n\t\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex, commaIndex));\n\t\tstartIndex = commaIndex + 1;\n\t}\n\n\t// Text after the last comma\n\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex));\n\n\treturn splittedParameterTypes;\n\n}\n","import {capitalizeWord} from '@/erdiagram/util/string-utils';\nimport {ClassDescriptor, ClassFieldDescriptor, ClassModel} from '@/erdiagram/generator/oop/model/class-model-types';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\nimport TypeScriptParameterizedType, {createTypeScriptArrayType} from '@/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptParameterizedType';\nimport TypeScriptType, {createTypeScriptType} from '@/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptType';\nimport ClassModelToCodeConverter from '@/erdiagram/generator/oop/code-converter/ClassModelToCodeConverter';\nimport TypeScriptClassModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/oop/code-converter/typescript/config/TypeScriptClassModelToCodeConverterConfig';\nimport typescriptClassModelToCodeConverterConfigManager\n\tfrom '@/erdiagram/generator/oop/code-converter/typescript/config/TypeScriptClassModelToCodeConverterConfigManager';\n\nexport default class TypeScriptClassModelToCodeConverter implements ClassModelToCodeConverter {\n\n\tprivate readonly config: TypeScriptClassModelToCodeConverterConfig;\n\n\tconstructor(config?: Partial<TypeScriptClassModelToCodeConverterConfig>) {\n\t\tthis.config = typescriptClassModelToCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\t}\n\n\tpublic generateCode(classModel: ClassModel): string {\n\t\treturn classModel.classes\n\t\t\t\t.map(classDescriptor => this.generateClass(classDescriptor))\n\t\t\t\t.join('\\n\\n');\n\t}\n\n\tprivate generateClass(classDescriptor: ClassDescriptor): string {\n\n\t\tconst interfaceName = capitalizeWord(classDescriptor.name);\n\n\t\tconst fieldsLines: string[] = classDescriptor.fields\n\t\t\t\t.map(field => this.createField(field));\n\n\t\tconst classOuterLines = [\n\t\t\t`interface ${interfaceName} {`\n\t\t];\n\n\t\tclassOuterLines.push(...indentLines(fieldsLines));\n\n\t\tclassOuterLines.push(`}`);\n\n\t\treturn classOuterLines.join('\\n');\n\n\t}\n\n\tprivate createField(field: ClassFieldDescriptor) {\n\n\t\tconst fieldName = field.name;\n\n\t\tconst typescriptType = this.mapFieldTypeToTypeScriptType(field);\n\t\tconst formattedTypeScriptType = typescriptType.format();\n\t\tconst optionalIndicatorChar = field.nullable ? '?' : '';\n\n\t\treturn `${fieldName}${optionalIndicatorChar}: ${formattedTypeScriptType};`;\n\n\t}\n\n\tprivate mapFieldTypeToTypeScriptType(field: ClassFieldDescriptor): TypeScriptType {\n\t\tif (field.list) {\n\t\t\treturn this.mapListTypeToTypeScriptType(field);\n\t\t} else {\n\t\t\treturn this.mapSingleTypeToTypeScriptType(field);\n\t\t}\n\t}\n\n\tprivate mapListTypeToTypeScriptType(field: ClassFieldDescriptor): TypeScriptParameterizedType {\n\t\treturn createTypeScriptArrayType(this.mapSingleTypeToTypeScriptType(field));\n\t}\n\n\tprivate mapSingleTypeToTypeScriptType(field: ClassFieldDescriptor): TypeScriptType {\n\n\t\tconst {\n\t\t\tentityType,\n\t\t\tprimitiveType\n\t\t} = field;\n\n\t\tif (entityType) {\n\n\t\t\tif (primitiveType) {\n\t\t\t\tthrow new Error('Invalid field descriptor: provided both primitive and entity types');\n\t\t\t}\n\n\t\t\treturn createTypeScriptType(entityType);\n\n\t\t}\n\n\t\tif (!primitiveType) {\n\t\t\tthrow new Error('Invalid field descriptor: missing type');\n\t\t}\n\n\t\tif (!this.config.typeBindings.hasOwnProperty(primitiveType)) {\n\t\t\tthrow new Error('Unsupported type: ' + primitiveType);\n\t\t}\n\n\t\treturn this.config.typeBindings[primitiveType]!;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport TypeScriptClassModelToCodeConverterConfig\n\tfrom '@/erdiagram/generator/oop/code-converter/typescript/config/TypeScriptClassModelToCodeConverterConfig';\nimport parseTypeScriptType from '@/erdiagram/generator/oop/code-converter/typescript/type/parseTypeScriptType';\nimport TypeScriptClassModelToCodeConverterSerializableConfig\n\tfrom '@/erdiagram/generator/oop/code-converter/typescript/config/TypeScriptClassModelToCodeConverterSerializableConfig';\nimport {mapValues} from '@/erdiagram/util/record-utils';\n\nexport class TypeScriptClassModelToCodeConverterConfigManager\n\t\textends AbstractComponentConfigManager<TypeScriptClassModelToCodeConverterConfig, Partial<TypeScriptClassModelToCodeConverterConfig>, TypeScriptClassModelToCodeConverterSerializableConfig> {\n\n\tgetDefaultConfig(): TypeScriptClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTIFIER]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.TEXT]: parseTypeScriptType('string'),\n\t\t\t\t[EntityPropertyType.LONG]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.INT]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.SHORT]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.DECIMAL]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.BOOLEAN]: parseTypeScriptType('boolean'),\n\t\t\t\t[EntityPropertyType.DATE]: parseTypeScriptType('Date'),\n\t\t\t\t[EntityPropertyType.TIME]: parseTypeScriptType('Date'),\n\t\t\t\t[EntityPropertyType.DATETIME]: parseTypeScriptType('Date'),\n\t\t\t\t[EntityPropertyType.BLOB]: parseTypeScriptType('Uint8Array'),\n\t\t\t}\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: TypeScriptClassModelToCodeConverterConfig, partialConfig?: Partial<TypeScriptClassModelToCodeConverterConfig>): TypeScriptClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: TypeScriptClassModelToCodeConverterConfig): TypeScriptClassModelToCodeConverterSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\ttypeBindings: mapValues(fullConfig.typeBindings, typeScriptType => typeScriptType!.format()),\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: TypeScriptClassModelToCodeConverterSerializableConfig): TypeScriptClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\ttypeBindings: mapValues(serializableConfig.typeBindings, parseTypeScriptType),\n\t\t};\n\t}\n\n}\n\nconst typescriptClassModelToCodeConverterConfigManager = new TypeScriptClassModelToCodeConverterConfigManager();\nexport default typescriptClassModelToCodeConverterConfigManager;\n","import TypeScriptClassModelToCodeConverterConfig from './TypeScriptClassModelToCodeConverterConfig';\nimport TypeScriptClassModelToCodeConverterSerializableConfig\n\tfrom './TypeScriptClassModelToCodeConverterSerializableConfig';\nimport typescriptClassModelToCodeConverterConfigManager, {TypeScriptClassModelToCodeConverterConfigManager} from './TypeScriptClassModelToCodeConverterConfigManager';\n\nexport {\n\tTypeScriptClassModelToCodeConverterConfig,\n\tTypeScriptClassModelToCodeConverterSerializableConfig,\n\tTypeScriptClassModelToCodeConverterConfigManager,\n\ttypescriptClassModelToCodeConverterConfigManager\n};\n","import TypeScriptType, {createTypeScriptType} from './type/TypeScriptType';\nimport TypeScriptParameterizedType, {\n\tcreateTypeScriptArrayType,\n\tcreateTypeScriptParameterizedType,\n\tisTypeScriptParameterizedType\n} from './type/TypeScriptParameterizedType';\nimport TypeScriptClassModelToCodeConverter from './TypeScriptClassModelToCodeConverter';\nimport parseTypeScriptType from '@/erdiagram/generator/oop/code-converter/typescript/type/parseTypeScriptType';\n\nexport * from './config/exports';\n\nexport {\n\tTypeScriptType,\n\tcreateTypeScriptType,\n\tTypeScriptParameterizedType,\n\tcreateTypeScriptParameterizedType,\n\tcreateTypeScriptArrayType,\n\tisTypeScriptParameterizedType,\n\tparseTypeScriptType,\n\tTypeScriptClassModelToCodeConverter\n};\n","import TypeScriptType from '@/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptType';\n\nexport default interface TypeScriptParameterizedType extends TypeScriptType {\n\tparameterTypes: TypeScriptType[];\n}\n\nexport function createTypeScriptParameterizedType(name: string, parameterTypes: TypeScriptType[]): TypeScriptParameterizedType {\n\treturn {\n\t\tname,\n\t\tparameterTypes,\n\t\tformat: () => {\n\t\t\tconst formattedParameterTypes = parameterTypes.map(t => t.format()).join(', ');\n\t\t\treturn `${name}<${formattedParameterTypes}>`;\n\t\t}\n\t};\n}\n\nexport function createTypeScriptArrayType(parameterType: TypeScriptType): TypeScriptParameterizedType {\n\treturn {\n\t\tname: 'Array',\n\t\tparameterTypes: [parameterType],\n\t\tformat: () => `${parameterType.format()}[]`\n\t};\n}\n\nexport function isTypeScriptParameterizedType(javaType: TypeScriptType): javaType is TypeScriptParameterizedType {\n\treturn Array.isArray((javaType as TypeScriptParameterizedType).parameterTypes);\n}\n","export default interface TypeScriptType {\n\n\tname: string;\n\n\tformat(): string;\n\n}\n\nexport function createTypeScriptType(name: string): TypeScriptType {\n\treturn {\n\t\tname,\n\t\tformat: () => name\n\t};\n}\n","import TypeScriptType, {createTypeScriptType} from '@/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptType';\nimport {\n\tcreateTypeScriptArrayType,\n\tcreateTypeScriptParameterizedType\n} from '@/erdiagram/generator/oop/code-converter/typescript/type/TypeScriptParameterizedType';\n\nexport default function parseTypeScriptType(text: string): TypeScriptType {\n\n\tconst trimmedText = text.trim();\n\n\tif (trimmedText.endsWith('[]')) {\n\t\tconst parameterType = trimmedText.substring(0, trimmedText.length - 2);\n\t\treturn createTypeScriptArrayType(parseTypeScriptType(parameterType));\n\t}\n\n\tconst startOfParameterTypes = trimmedText.indexOf('<');\n\n\tif (startOfParameterTypes === -1) {\n\t\treturn parseTypeScriptSimpleType(trimmedText);\n\t}\n\n\tconst endOfParameterTypes = trimmedText.lastIndexOf('>');\n\n\tif (endOfParameterTypes === -1 || endOfParameterTypes !== trimmedText.length - 1) {\n\t\tthrow new Error('Malformed TypeScript type: ' + trimmedText);\n\t}\n\n\tconst rawType = parseTypeScriptSimpleType(trimmedText.substring(0, startOfParameterTypes));\n\n\tconst parameterTypes = splitParameterTypes(trimmedText.substring(startOfParameterTypes + 1, endOfParameterTypes))\n\t\t\t.map(parameterType => parseTypeScriptType(parameterType));\n\n\treturn createTypeScriptParameterizedType(rawType.name, parameterTypes);\n\n}\n\nfunction parseTypeScriptSimpleType(text: string): TypeScriptType {\n\treturn createTypeScriptType(text.trim());\n}\n\nfunction splitParameterTypes(parameterTypesText: string): string[] {\n\n\tif (!parameterTypesText.includes(',')) {\n\t\treturn [parameterTypesText];\n\t}\n\n\tconst commaIndices: number[] = [];\n\n\tlet nestedLevelsCount = 0;\n\n\t[...parameterTypesText].forEach((character, index) => {\n\t\tswitch (character) {\n\t\t\tcase ',':\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tnestedLevelsCount++;\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tthrow new Error('Unexpected character \">\"');\n\t\t\t\t}\n\t\t\t\tnestedLevelsCount--;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst splittedParameterTypes: string[] = [];\n\tlet startIndex = 0;\n\n\tfor (const commaIndex of commaIndices) {\n\t\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex, commaIndex));\n\t\tstartIndex = commaIndex + 1;\n\t}\n\n\t// Text after the last comma\n\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex));\n\n\treturn splittedParameterTypes;\n\n}\n","export * from './code-converter/exports';\nexport * from './model/exports';\n","import pluralize from 'pluralize';\nimport {capitalizeWord} from '@/erdiagram/util/string-utils';\nimport {ClassDescriptor, ClassFieldDescriptor, ClassModel} from '@/erdiagram/generator/oop/model/class-model-types';\nimport {\n\tCardinality,\n\tDirection,\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityPropertyType,\n\tEntityRelationshipModel,\n\tRelationshipMember\n} from '@/erdiagram/parser/entity-relationship-model-types';\nimport ClassModelGeneratorConfig from '@/erdiagram/generator/oop/model/config/ClassModelGeneratorConfig';\nimport classModelGeneratorConfigManager from '@/erdiagram/generator/oop/model/config/ClassModelGeneratorConfigManager';\n\nexport default class ClassModelGenerator {\n\n\tprivate readonly config: ClassModelGeneratorConfig;\n\n\tconstructor(config?: Partial<ClassModelGeneratorConfig>) {\n\t\tthis.config = classModelGeneratorConfigManager.mergeWithDefaultConfig(config);\n\t}\n\n\tgenerateClassModel(model: EntityRelationshipModel): ClassModel {\n\n\t\tconst classes: ClassDescriptor[] = [];\n\n\t\tmodel.entities\n\t\t\t\t.map(entity => this.generateEntityTable(entity, model))\n\t\t\t\t.forEach(sentence => classes.push(sentence));\n\n\t\treturn {\n\t\t\tclasses\n\t\t};\n\n\t}\n\n\tprivate generateEntityTable(entity: EntityDescriptor, model: EntityRelationshipModel): ClassDescriptor {\n\n\t\tconst name = capitalizeWord(entity.name);\n\n\t\tconst fields: ClassFieldDescriptor[] = [\n\t\t\tthis.createIdField(entity)\n\t\t];\n\n\t\tfor (const property of entity.properties) {\n\t\t\tfields.push(this.mapPropertyToField(property));\n\t\t}\n\n\t\tfor (const relationship of model.relationships) {\n\n\t\t\tconst {\n\t\t\t\tleftMember,\n\t\t\t\trightMember,\n\t\t\t\tdirection\n\t\t\t} = relationship;\n\n\t\t\tif (leftMember.entity === entity.name && [Direction.LEFT_TO_RIGHT, Direction.BIDIRECTIONAL].includes(direction)) {\n\t\t\t\tfields.push(this.mapRelationshipMemberToField(rightMember));\n\t\t\t}\n\n\t\t\tif (rightMember.entity === entity.name && [Direction.RIGHT_TO_LEFT, Direction.BIDIRECTIONAL].includes(direction)) {\n\t\t\t\tfields.push(this.mapRelationshipMemberToField(leftMember));\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tname,\n\t\t\tfields\n\t\t};\n\n\t}\n\n\tprivate createIdField(entity: EntityDescriptor): ClassFieldDescriptor {\n\t\treturn {\n\t\t\tname: this.getIdentifierFieldName(entity),\n\t\t\tprimitiveType: EntityPropertyType.IDENTIFIER,\n\t\t\tnullable: false,\n\t\t\tlist: false\n\t\t};\n\t}\n\n\tprivate getIdentifierFieldName(entity: EntityDescriptor) {\n\n\t\tif (entity.identifierPropertyName) {\n\t\t\treturn entity.identifierPropertyName;\n\t\t}\n\n\t\tconst {idNamingStrategy} = this.config;\n\t\treturn idNamingStrategy(entity.name);\n\n\t}\n\n\tprivate mapRelationshipMemberToField(toMember: RelationshipMember): ClassFieldDescriptor {\n\n\t\tconst list = toMember.cardinality === Cardinality.MANY;\n\t\tconst name = list ? pluralize(toMember.entityAlias) : toMember.entityAlias;\n\n\t\treturn {\n\t\t\tname,\n\t\t\tnullable: toMember.cardinality === Cardinality.ZERO_OR_ONE,\n\t\t\tentityType: toMember.entity,\n\t\t\tlist\n\t\t};\n\n\t}\n\n\tprivate mapPropertyToField(property: EntityPropertyDescriptor): ClassFieldDescriptor {\n\n\t\tconst {\n\t\t\tname,\n\t\t\toptional,\n\t\t\ttype\n\t\t} = property;\n\n\t\treturn {\n\t\t\tname,\n\t\t\tnullable: optional,\n\t\t\tprimitiveType: type,\n\t\t\tlist: false\n\t\t};\n\n\t}\n\n};\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport ClassModelGeneratorConfig from '@/erdiagram/generator/oop/model/config/ClassModelGeneratorConfig';\nimport StandardIdNamingStrategies from '@/erdiagram/generator/common/id-naming-strategy/StandardIdNamingStrategies';\nimport {findKeyFromValue, findValueFromNullableKey} from '@/erdiagram/util/record-utils';\nimport ClassModelGeneratorSerializableConfig\n\tfrom '@/erdiagram/generator/oop/model/config/ClassModelGeneratorSerializableConfig';\n\nexport class ClassModelGeneratorConfigManager\n\t\textends AbstractComponentConfigManager<ClassModelGeneratorConfig, Partial<ClassModelGeneratorConfig>, ClassModelGeneratorSerializableConfig> {\n\n\tgetDefaultConfig(): ClassModelGeneratorConfig {\n\t\treturn {\n\t\t\tidNamingStrategy: StandardIdNamingStrategies.DEFAULT\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: ClassModelGeneratorConfig, partialConfig?: Partial<ClassModelGeneratorConfig>): ClassModelGeneratorConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: ClassModelGeneratorConfig): ClassModelGeneratorSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\tidNamingStrategy: findKeyFromValue(StandardIdNamingStrategies, fullConfig.idNamingStrategy)\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: ClassModelGeneratorSerializableConfig): ClassModelGeneratorConfig {\n\t\treturn {\n\t\t\t...serializableConfig,\n\t\t\tidNamingStrategy: findValueFromNullableKey(StandardIdNamingStrategies, serializableConfig.idNamingStrategy, StandardIdNamingStrategies.DEFAULT)\n\t\t};\n\t}\n\n}\n\nconst classModelGeneratorConfigManager = new ClassModelGeneratorConfigManager();\nexport default classModelGeneratorConfigManager;\n","import ClassModelGeneratorConfig from './ClassModelGeneratorConfig';\nimport ClassModelGeneratorSerializableConfig from './ClassModelGeneratorSerializableConfig';\nimport classModelGeneratorConfigManager, {ClassModelGeneratorConfigManager} from './ClassModelGeneratorConfigManager';\n\nexport {\n\tClassModelGeneratorConfig,\n\tClassModelGeneratorSerializableConfig,\n\tClassModelGeneratorConfigManager,\n\tclassModelGeneratorConfigManager\n};\n","import ClassModelGenerator from './ClassModelGenerator';\n\nexport * from './class-model-types';\nexport * from './config/exports';\n\nexport {\n\tClassModelGenerator\n};\n","import {\n\tparseEntityNameStatement,\n\tparseEntityPropertyStatement,\n\tparseRelationshipStatement\n} from '@/erdiagram/parser/statement/statement-types-parse-functions';\nimport {guessStatementType, StatementType} from '@/erdiagram/parser/statement/statement-type-guesser';\nimport {EntityRelationshipModel} from '@/erdiagram/parser/entity-relationship-model-types';\nimport EntityRelationshipModelParserConfig from '@/erdiagram/parser/config/EntityRelationshipModelParserConfig';\nimport ParsedEntityRelationshipModelValidator\n\tfrom '@/erdiagram/parser/validator/ParsedEntityRelationshipModelValidator';\nimport entityRelationshipModelParserConfigManager\n\tfrom '@/erdiagram/parser/config/EntityRelationshipModelParserConfigManager';\nimport {\n\tERDiagramEntityError,\n\tERDiagramEntityPropertyError,\n\tERDiagramError,\n\tERDiagramParseLineError,\n\tERDiagramRelationshipError,\n\tERDiagramSyntaxError\n} from '@/erdiagram/parser/parse-errors';\nimport {\n\tParsedEntityDescriptor,\n\tParsedEntityRelationshipModel,\n\tParsedRelationshipDescriptor,\n\tParsedStatementResult\n} from '@/erdiagram/parser/parsed-entity-relationship-model-types';\nimport ParsedModelToPublicModelConverter from '@/erdiagram/parser/ParsedModelToPublicModelConverter';\n\ninterface ParseState {\n\tentities: ParsedEntityDescriptor[];\n\trelationships: ParsedRelationshipDescriptor[];\n\tentityBeingParsed: ParsedEntityDescriptor | null;\n\tstatementResultToLineMap: Map<ParsedStatementResult, number>;\n}\n\ninterface ParseResult {\n\tmodel: ParsedEntityRelationshipModel;\n\tstatementResultToLineMap: Map<ParsedStatementResult, number>;\n}\n\nexport default class EntityRelationshipModelParser {\n\n\tprivate readonly config: EntityRelationshipModelParserConfig;\n\tprivate readonly validator: ParsedEntityRelationshipModelValidator;\n\tprivate readonly parsedModelToPublicModelConverter: ParsedModelToPublicModelConverter;\n\n\tconstructor(config?: Partial<EntityRelationshipModelParserConfig>) {\n\t\tthis.config = entityRelationshipModelParserConfigManager.mergeWithDefaultConfig(config);\n\t\tthis.validator = new ParsedEntityRelationshipModelValidator(this.config.allowUnknownEntities);\n\t\tthis.parsedModelToPublicModelConverter = new ParsedModelToPublicModelConverter();\n\t}\n\n\tpublic parseModel(code: string): EntityRelationshipModel {\n\t\tconst {\n\t\t\tmodel,\n\t\t\tstatementResultToLineMap\n\t\t} = this.parseModelWithoutValidation(code);\n\t\ttry {\n\t\t\tthis.validator.validateParsedModel(model);\n\t\t} catch (error) {\n\t\t\tthis.handleValidationError(error, statementResultToLineMap);\n\t\t}\n\t\treturn this.parsedModelToPublicModelConverter.convertParsedModelToPublicModel(model);\n\t}\n\n\tprivate parseModelWithoutValidation(code: string): ParseResult {\n\n\t\tconst lines = code.split('\\n');\n\n\t\tconst state: ParseState = {\n\t\t\tentities: [],\n\t\t\trelationships: [],\n\t\t\tentityBeingParsed: null,\n\t\t\tstatementResultToLineMap: new Map<ParsedStatementResult, number>()\n\t\t};\n\n\t\tlines.forEach((line, lineIndex) => {\n\t\t\ttry {\n\t\t\t\tthis.parseLine(line, lineIndex, state);\n\t\t\t} catch (error) {\n\t\t\t\tthis.handleLineError(error, lineIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tmodel: {\n\t\t\t\tentities: state.entities,\n\t\t\t\trelationships: state.relationships\n\t\t\t},\n\t\t\tstatementResultToLineMap: state.statementResultToLineMap\n\t\t};\n\n\t}\n\n\tprivate parseLine(line: string, lineIndex: number, state: ParseState) {\n\n\t\tconst statementType = guessStatementType(line);\n\n\t\tswitch (statementType) {\n\t\t\tcase StatementType.ENTITY_NAME:\n\n\t\t\t\tconst entityDescriptor: ParsedEntityDescriptor = {\n\t\t\t\t\tname: parseEntityNameStatement(line),\n\t\t\t\t\tproperties: []\n\t\t\t\t};\n\n\t\t\t\tstate.entities.push(entityDescriptor);\n\t\t\t\tstate.entityBeingParsed = entityDescriptor;\n\t\t\t\tstate.statementResultToLineMap.set(entityDescriptor, lineIndex);\n\n\t\t\t\tbreak;\n\t\t\tcase StatementType.ENTITY_PROPERTY:\n\n\t\t\t\tif (state.entityBeingParsed == null) {\n\t\t\t\t\tthrow new ERDiagramSyntaxError('Unexpected entity property statement');\n\t\t\t\t}\n\n\t\t\t\tconst entityPropertyDescriptor = parseEntityPropertyStatement(line);\n\n\t\t\t\tstate.entityBeingParsed.properties.push(entityPropertyDescriptor);\n\t\t\t\tstate.statementResultToLineMap.set(entityPropertyDescriptor, lineIndex);\n\n\t\t\t\tbreak;\n\t\t\tcase StatementType.RELATIONSHIP:\n\n\t\t\t\tconst relationshipDescriptor = parseRelationshipStatement(line);\n\n\t\t\t\tstate.relationships.push(relationshipDescriptor);\n\t\t\t\tstate.entityBeingParsed = null;\n\t\t\t\tstate.statementResultToLineMap.set(relationshipDescriptor, lineIndex);\n\n\t\t\t\tbreak;\n\t\t\tcase StatementType.BLANK_LINE:\n\t\t\t\t// Ignore\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ERDiagramSyntaxError(`Unknown statement type`);\n\t\t}\n\n\t}\n\n\tprivate handleLineError(error: Error, lineIndex: number): never {\n\n\t\tif (error instanceof ERDiagramError) {\n\t\t\tthrow new ERDiagramParseLineError(error, lineIndex);\n\t\t}\n\n\t\tthrow error;\n\n\t}\n\n\tprivate handleValidationError(error: Error, statementResultToLineMap: Map<ParsedStatementResult, number>): never {\n\n\t\tif (error instanceof ERDiagramParseLineError) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (error instanceof ERDiagramEntityPropertyError) {\n\t\t\tthrow new ERDiagramParseLineError(error, statementResultToLineMap.get(error.property)!);\n\t\t}\n\n\t\tif (error instanceof ERDiagramEntityError) {\n\t\t\tthrow new ERDiagramParseLineError(error, statementResultToLineMap.get(error.entity)!);\n\t\t}\n\n\t\tif (error instanceof ERDiagramRelationshipError) {\n\t\t\tthrow new ERDiagramParseLineError(error, statementResultToLineMap.get(error.relationship)!);\n\t\t}\n\n\t\tthrow error;\n\n\t}\n\n}\n","import {\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityPropertyType,\n\tEntityRelationshipModel\n} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tParsedEntityDescriptor,\n\tParsedEntityRelationshipModel\n} from '@/erdiagram/parser/parsed-entity-relationship-model-types';\n\nexport default class ParsedModelToPublicModelConverter {\n\n\tpublic convertParsedModelToPublicModel(parsedModel: ParsedEntityRelationshipModel): EntityRelationshipModel {\n\t\treturn {\n\t\t\tentities: parsedModel.entities.map(parsedEntity => this.convertParsedEntityToPublicEntity(parsedEntity)),\n\t\t\trelationships: parsedModel.relationships\n\t\t};\n\t}\n\n\tprivate convertParsedEntityToPublicEntity(parsedEntity: ParsedEntityDescriptor): EntityDescriptor {\n\n\t\tconst identifierProperty = this.getEntityIdentifierProperty(parsedEntity);\n\n\t\treturn {\n\t\t\tname: parsedEntity.name,\n\t\t\tidentifierPropertyName: identifierProperty?.name,\n\t\t\tproperties: parsedEntity.properties.filter(property => property != identifierProperty)\n\t\t};\n\n\t}\n\n\tprivate getEntityIdentifierProperty(parsedEntity: ParsedEntityDescriptor): EntityPropertyDescriptor | undefined {\n\t\treturn parsedEntity.properties.find(property => property.type === EntityPropertyType.IDENTIFIER);\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport EntityRelationshipModelParserConfig from '@/erdiagram/parser/config/EntityRelationshipModelParserConfig';\nimport EntityRelationshipModelParserSerializableConfig\n\tfrom '@/erdiagram/parser/config/EntityRelationshipModelParserSerializableConfig';\n\nexport class EntityRelationshipModelParserConfigManager\n\t\textends AbstractComponentConfigManager<EntityRelationshipModelParserConfig, Partial<EntityRelationshipModelParserConfig>, EntityRelationshipModelParserSerializableConfig> {\n\n\tgetDefaultConfig(): EntityRelationshipModelParserConfig {\n\t\treturn {\n\t\t\tallowUnknownEntities: false\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: EntityRelationshipModelParserConfig, partialConfig?: Partial<EntityRelationshipModelParserConfig>): EntityRelationshipModelParserConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n\tconvertToSerializableObject(fullConfig: EntityRelationshipModelParserConfig): EntityRelationshipModelParserSerializableConfig {\n\t\treturn {\n\t\t\t...fullConfig\n\t\t};\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: EntityRelationshipModelParserSerializableConfig): EntityRelationshipModelParserConfig {\n\t\treturn {\n\t\t\t...serializableConfig\n\t\t};\n\t}\n\n}\n\nconst entityRelationshipModelParserConfigManager = new EntityRelationshipModelParserConfigManager();\nexport default entityRelationshipModelParserConfigManager;\n","import EntityRelationshipModelParserConfig from './EntityRelationshipModelParserConfig';\nimport EntityRelationshipModelParserSerializableConfig from './EntityRelationshipModelParserSerializableConfig';\nimport entityRelationshipModelParserConfigManager, {EntityRelationshipModelParserConfigManager} from './EntityRelationshipModelParserConfigManager';\n\nexport {\n\tEntityRelationshipModelParserConfig,\n\tEntityRelationshipModelParserSerializableConfig,\n\tEntityRelationshipModelParserConfigManager,\n\tentityRelationshipModelParserConfigManager\n};\n","export interface EntityRelationshipModel {\n\tentities: EntityDescriptor[];\n\trelationships: RelationshipDescriptor[];\n}\n\nexport interface EntityDescriptor {\n\tname: string;\n\tidentifierPropertyName?: string;\n\tproperties: EntityPropertyDescriptor[];\n}\n\nexport interface EntityPropertyDescriptor {\n\tname: string;\n\toptional: boolean;\n\tautoincremental: boolean;\n\tunique: boolean;\n\ttype: EntityPropertyType;\n\tlength: number[];\n}\n\nexport enum EntityPropertyType {\n\tIDENTIFIER = 'identifier',\n\tBOOLEAN = 'bool',\n\tSHORT = 'short',\n\tINT = 'int',\n\tLONG = 'long',\n\tDECIMAL = 'decimal',\n\tTEXT = 'text',\n\tDATE = 'date',\n\tTIME = 'time',\n\tDATETIME = 'datetime',\n\tBLOB = 'blob'\n}\n\nexport interface RelationshipDescriptor {\n\tleftMember: RelationshipMember;\n\trightMember: RelationshipMember;\n\tdirection: Direction;\n\trelationShipName?: string;\n}\n\nexport interface RelationshipMember {\n\tentity: string;\n\tentityAlias: string;\n\tcardinality: Cardinality;\n}\n\nexport enum Cardinality {\n\tMANY = 'many',\n\tONE = 'one',\n\tZERO_OR_ONE = 'zero_or_one'\n}\n\nexport enum Direction {\n\tLEFT_TO_RIGHT = 'left_to_right',\n\tRIGHT_TO_LEFT = 'right_to_left',\n\tBIDIRECTIONAL = 'bidirectional'\n}\n","import EntityRelationshipModelParser from './EntityRelationshipModelParser';\n\nexport * from './config/exports';\nexport * from './entity-relationship-model-types';\nexport * from './parse-errors';\n\nexport {\n\tEntityRelationshipModelParser\n};\n","import {RelationshipMember} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tParsedEntityDescriptor,\n\tParsedEntityPropertyDescriptor,\n\tParsedRelationshipDescriptor\n} from '@/erdiagram/parser/parsed-entity-relationship-model-types';\n\nexport class ERDiagramError extends Error {\n\n}\n\nexport class ERDiagramParseLineError extends ERDiagramError {\n\n\tconstructor(\n\t\t\tprivate readonly cause: ERDiagramError,\n\t\t\tprivate readonly lineIndex: number\n\t) {\n\t\tsuper(cause.message);\n\t}\n\n\tget lineNumber() {\n\t\treturn this.lineIndex + 1;\n\t}\n\n}\n\nexport class ERDiagramSyntaxError extends ERDiagramError {\n\n}\n\nexport class ERDiagramUnknownTypeError extends ERDiagramError {\n\n}\n\nexport class ERDiagramRelationshipError extends ERDiagramError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tpublic readonly relationship: ParsedRelationshipDescriptor\n\t) {\n\t\tsuper(message);\n\t}\n\n}\n\nexport class ERDiagramUnknownEntityError extends ERDiagramRelationshipError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\trelationship: ParsedRelationshipDescriptor,\n\t\t\tpublic readonly member: RelationshipMember\n\t) {\n\t\tsuper(message, relationship);\n\t}\n\n}\n\nexport class ERDiagramEntityError extends ERDiagramError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tpublic readonly entity: ParsedEntityDescriptor\n\t) {\n\t\tsuper(message);\n\t}\n\n}\n\nexport class ERDiagramDuplicatedEntityNameError extends ERDiagramEntityError {\n\n}\n\nexport class ERDiagramEntityPropertyError extends ERDiagramEntityError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tentity: ParsedEntityDescriptor,\n\t\t\tpublic readonly property: ParsedEntityPropertyDescriptor\n\t) {\n\t\tsuper(message, entity);\n\t}\n\n}\n\nexport class ERDiagramMultipleIdentifiersError extends ERDiagramEntityPropertyError {\n\n\tpublic readonly identifierProperties: ParsedEntityPropertyDescriptor[];\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tentity: ParsedEntityDescriptor,\n\t\t\tidentifierProperties: ParsedEntityPropertyDescriptor[]\n\t) {\n\t\tconst firstDuplicateApparition = identifierProperties[1];\n\t\tsuper(message, entity, firstDuplicateApparition);\n\t\tthis.identifierProperties = identifierProperties;\n\t}\n\n}\n\nexport class ERDiagramInvalidIdentifierDefinitionError extends ERDiagramEntityPropertyError {\n\n}\n\nexport class ERDiagramDuplicatedPropertyNameError extends ERDiagramEntityPropertyError {\n\n}\n","import {\n\tENTITY_NAME_LINE_REGEX,\n\tENTITY_PROPERTY_LINE_REGEX,\n\tRELATIONSHIP_LINE_REGEX\n} from '@/erdiagram/parser/statement/statement-types-regexes';\n\nexport enum StatementType {\n\tENTITY_NAME = 'entityName',\n\tENTITY_PROPERTY = 'entityProperty',\n\tRELATIONSHIP = 'relationship',\n\tBLANK_LINE = 'blankLine',\n\tUNKNOWN = 'unknown'\n}\n\nexport function guessStatementType(line: string): StatementType {\n\tif (ENTITY_NAME_LINE_REGEX.test(line)) {\n\t\treturn StatementType.ENTITY_NAME;\n\t} else if (ENTITY_PROPERTY_LINE_REGEX.test(line)) {\n\t\treturn StatementType.ENTITY_PROPERTY;\n\t} else if (RELATIONSHIP_LINE_REGEX.test(line)) {\n\t\treturn StatementType.RELATIONSHIP;\n\t} else if (isBlankLine(line)) {\n\t\treturn StatementType.BLANK_LINE;\n\t} else {\n\t\treturn StatementType.UNKNOWN;\n\t}\n}\n\nfunction isBlankLine(line: string) {\n\treturn /^\\s*(#.*)?$/.test(line);\n}\n","import {capitalizeWord, uncapitalizeWord} from '@/erdiagram/util/string-utils';\nimport {\n\tENTITY_NAME_LINE_REGEX,\n\tENTITY_PROPERTY_LINE_REGEX,\n\tRELATIONSHIP_LINE_REGEX\n} from '@/erdiagram/parser/statement/statement-types-regexes';\nimport {Cardinality, Direction, EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tParsedEntityPropertyDescriptor,\n\tParsedRelationshipDescriptor\n} from '@/erdiagram/parser/parsed-entity-relationship-model-types';\nimport {ERDiagramSyntaxError, ERDiagramUnknownTypeError} from '@/erdiagram/parser/parse-errors';\n\nexport function parseEntityNameStatement(line: string): string {\n\n\tconst result = ENTITY_NAME_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new ERDiagramSyntaxError('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tentityName\n\t] = result;\n\n\treturn capitalizeWord(entityName);\n\n}\n\nexport function parseEntityPropertyStatement(line: string): ParsedEntityPropertyDescriptor {\n\n\tconst result = ENTITY_PROPERTY_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new ERDiagramSyntaxError('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tname,\n\t\tmodifiers,\n\t\ttype,\n\t\tlength\n\t] = result;\n\n\tconst mappedType = type.toLowerCase() as EntityPropertyType;\n\n\tif (!Object.values(EntityPropertyType).includes(mappedType)) {\n\t\tthrow new ERDiagramUnknownTypeError('Unknown type: ' + type);\n\t}\n\n\treturn {\n\t\tname: uncapitalizeWord(name),\n\t\toptional: modifiers.includes('?'),\n\t\tautoincremental: modifiers.includes('+'),\n\t\tunique: modifiers.includes('!'),\n\t\ttype: mappedType,\n\t\tlength: parsePropertyLength(length)\n\t};\n\n}\n\nfunction parsePropertyLength(length: string): number[] {\n\n\tif (!length) {\n\t\treturn [];\n\t}\n\n\treturn length.split(',')\n\t\t\t.map(lengthNumber => parseInt(lengthNumber.trim(), 10));\n\n}\n\nexport function parseRelationshipStatement(line: string): ParsedRelationshipDescriptor {\n\n\tconst result = RELATIONSHIP_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new ERDiagramSyntaxError('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tleftEntity,\n\t\tleftEntityAlias = leftEntity,\n\t\tleftCardinalityCharacter,\n\t\tdirection,\n\t\trightCardinalityCharacter,\n\t\trightEntity,\n\t\trightEntityAlias = rightEntity,\n\t\trelationShipName\n\t] = result;\n\n\treturn {\n\t\trelationShipName: relationShipName ? capitalizeWord(relationShipName) : undefined,\n\t\tdirection: direction === '->' ? Direction.LEFT_TO_RIGHT : (direction === '<-' ? Direction.RIGHT_TO_LEFT : Direction.BIDIRECTIONAL),\n\t\tleftMember: {\n\t\t\tentity: capitalizeWord(leftEntity),\n\t\t\tentityAlias: uncapitalizeWord(leftEntityAlias),\n\t\t\tcardinality: parseRelationshipMemberCardinality(leftCardinalityCharacter)\n\t\t},\n\t\trightMember: {\n\t\t\tentity: capitalizeWord(rightEntity),\n\t\t\tentityAlias: uncapitalizeWord(rightEntityAlias),\n\t\t\tcardinality: parseRelationshipMemberCardinality(rightCardinalityCharacter)\n\t\t}\n\t};\n\n}\n\nfunction parseRelationshipMemberCardinality(leftCardinalityCharacter: string) {\n\tswitch (leftCardinalityCharacter) {\n\t\tcase '*':\n\t\t\treturn Cardinality.MANY;\n\t\tcase '?':\n\t\t\treturn Cardinality.ZERO_OR_ONE;\n\t\tdefault:\n\t\t\treturn Cardinality.ONE;\n\t}\n}\n","import {joinRegExps} from '@/erdiagram/util/regex-utils';\n\nconst IDENTIFIER_REGEX = /[a-zA-Z_][a-zA-Z_0-9]*/;\nconst OPTIONAL_TRAILING_SPACES_AND_COMMENT = /\\s*(#.*)?$/;\n\n// Entity name\n\nexport const ENTITY_NAME_LINE_REGEX = new RegExp(`^(${IDENTIFIER_REGEX.source})${OPTIONAL_TRAILING_SPACES_AND_COMMENT.source}`);\n\n// Entity property\n\nconst PROPERTY_NAME_REGEX = new RegExp(`(${IDENTIFIER_REGEX.source})`);\nconst PROPERTY_MODIFIERS_REGEX = new RegExp(`([?!+]*)`);\n\nconst PROPERTY_TYPE_NAME_REGEX = new RegExp(`(${IDENTIFIER_REGEX.source})`);\nconst PROPERTY_TYPE_LENGTH_REGEX = new RegExp(`(?:\\\\((\\\\s*\\\\d+\\\\s*(?:,\\\\s*\\\\d+\\\\s*)*)\\\\))?`);\n\nconst ENTITY_PROPERTY_REGEX = joinRegExps(PROPERTY_NAME_REGEX, PROPERTY_MODIFIERS_REGEX, /\\s+/, PROPERTY_TYPE_NAME_REGEX, PROPERTY_TYPE_LENGTH_REGEX);\n\nexport const ENTITY_PROPERTY_LINE_REGEX = new RegExp(`^\\\\s+${ENTITY_PROPERTY_REGEX.source}${OPTIONAL_TRAILING_SPACES_AND_COMMENT.source}`);\n\n// Relationship\n\nconst RELATIONSHIP_DIRECTION_REGEX = /(<-|->|<->)/;\nconst RELATIONSHIP_CARDINALITY_REGEX = /([?1*])?/;\nconst DIRECTION_AND_CARDINALITY_REGEX = joinRegExps(RELATIONSHIP_CARDINALITY_REGEX, RELATIONSHIP_DIRECTION_REGEX, RELATIONSHIP_CARDINALITY_REGEX);\n\nconst ENTITY_AND_ALIAS_REGEX = new RegExp(`(${IDENTIFIER_REGEX.source})(?:\\\\s+(${IDENTIFIER_REGEX.source}))?`);\n\nexport const RELATIONSHIP_LINE_REGEX = new RegExp(`^${ENTITY_AND_ALIAS_REGEX.source}\\\\s*?${DIRECTION_AND_CARDINALITY_REGEX.source}\\\\s*?${ENTITY_AND_ALIAS_REGEX.source}(?:\\\\s+\\\\(\\\\s*(${IDENTIFIER_REGEX.source})\\\\s*\\\\))?${OPTIONAL_TRAILING_SPACES_AND_COMMENT.source}`);\n","import {EntityPropertyType} from '@/erdiagram/parser/entity-relationship-model-types';\nimport {\n\tERDiagramDuplicatedEntityNameError,\n\tERDiagramDuplicatedPropertyNameError,\n\tERDiagramInvalidIdentifierDefinitionError,\n\tERDiagramMultipleIdentifiersError,\n\tERDiagramUnknownEntityError\n} from '@/erdiagram/parser/parse-errors';\nimport {ParsedEntityRelationshipModel} from '@/erdiagram/parser/parsed-entity-relationship-model-types';\n\nexport default class ParsedEntityRelationshipModelValidator {\n\n\tconstructor(\n\t\t\tprivate readonly allowUnknownEntities: boolean\n\t) {\n\n\t}\n\n\tpublic validateParsedModel(model: ParsedEntityRelationshipModel) {\n\n\t\tthis.validateNonRepeatedEntityNames(model);\n\t\tthis.validateNonRepeatedPropertyNames(model);\n\t\tthis.validateIdentifierProperties(model);\n\n\t\tif (!this.allowUnknownEntities) {\n\t\t\tthis.validateRelationshipsHaveNoUnknownEntities(model);\n\t\t}\n\n\t}\n\n\tprivate validateNonRepeatedEntityNames(model: ParsedEntityRelationshipModel) {\n\n\t\tconst entityNames = new Set<string>();\n\n\t\tmodel.entities.forEach(entity => {\n\n\t\t\tconst entityName = entity.name;\n\n\t\t\tif (entityNames.has(entityName)) {\n\t\t\t\tthrow new ERDiagramDuplicatedEntityNameError(\n\t\t\t\t\t\t`Repeated entity \"${entityName}\"`,\n\t\t\t\t\t\tentity\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tentityNames.add(entityName);\n\n\t\t});\n\n\t}\n\n\tprivate validateNonRepeatedPropertyNames(model: ParsedEntityRelationshipModel) {\n\n\t\tmodel.entities.forEach(entity => {\n\n\t\t\tconst entityPropertyNames = new Set<string>();\n\n\t\t\tentity.properties.forEach(property => {\n\n\t\t\t\tconst propertyName = property.name;\n\n\t\t\t\tif (entityPropertyNames.has(propertyName)) {\n\t\t\t\t\tthrow new ERDiagramDuplicatedPropertyNameError(\n\t\t\t\t\t\t\t`Repeated property \"${propertyName}\" in \"${entity.name}\" entity`,\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tproperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tentityPropertyNames.add(propertyName);\n\n\t\t\t});\n\n\t\t});\n\n\t}\n\n\tprivate validateIdentifierProperties(model: ParsedEntityRelationshipModel) {\n\n\t\tmodel.entities.forEach(entity => {\n\n\t\t\tconst identifierProperties = entity.properties.filter(property => property.type === EntityPropertyType.IDENTIFIER);\n\n\t\t\tif (identifierProperties.length > 1) {\n\t\t\t\tthrow new ERDiagramMultipleIdentifiersError(\n\t\t\t\t\t\t`Entity ${entity.name} has more than one identifier property`,\n\t\t\t\t\t\tentity,\n\t\t\t\t\t\tidentifierProperties\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst identifierProperty = identifierProperties[0];\n\n\t\t\tif (identifierProperty != null) {\n\n\t\t\t\tif (identifierProperty.autoincremental) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentifierDefinitionError(\n\t\t\t\t\t\t\t'Autoincremental modifier (+) cannot be used in identifier properties',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentifierProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (identifierProperty.optional) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentifierDefinitionError(\n\t\t\t\t\t\t\t'Optional modifier (?) cannot be used in identifier properties',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentifierProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (identifierProperty.unique) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentifierDefinitionError(\n\t\t\t\t\t\t\t'Unique modifier (!) cannot be used in identifier properties',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentifierProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (identifierProperty.length.length > 0) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentifierDefinitionError(\n\t\t\t\t\t\t\t'Identifier properties cannot have a length',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentifierProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\tprivate validateRelationshipsHaveNoUnknownEntities(model: ParsedEntityRelationshipModel) {\n\n\t\tconst entityNames = model.entities.map(e => e.name);\n\n\t\tmodel.relationships.forEach(relationship => {\n\t\t\tif (!entityNames.includes(relationship.leftMember.entity)) {\n\t\t\t\tthrow new ERDiagramUnknownEntityError(\n\t\t\t\t\t\t`Uknown entity \"${relationship.leftMember.entity}\" in relationship's left member`,\n\t\t\t\t\t\trelationship,\n\t\t\t\t\t\trelationship.leftMember\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!entityNames.includes(relationship.rightMember.entity)) {\n\t\t\t\tthrow new ERDiagramUnknownEntityError(\n\t\t\t\t\t\t`Uknown entity \"${relationship.rightMember.entity}\" in relationship's right member`,\n\t\t\t\t\t\trelationship,\n\t\t\t\t\t\trelationship.rightMember\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t}\n\n}\n","export function removeDuplicates<T>(array: T[]): T[] {\n\treturn [...new Set<T>(array)];\n}\n","const DEFAULT_INDENT = '    ';\n\nexport function indentLines(lines: string[], indent?: string | number) {\n\treturn lines.map(line => indentLine(line, indent));\n}\n\nexport function indentLine(line: string, indent: string | number = DEFAULT_INDENT) {\n\tif (line.trim().length === 0) {\n\t\treturn line;\n\t} else {\n\t\treturn generateIndentText(indent) + line;\n\t}\n}\n\nfunction generateIndentText(indent: string | number): string {\n\n\tif (typeof indent !== 'number') {\n\t\treturn indent;\n\t}\n\n\treturn ''.padEnd(indent, ' ');\n\n}\n","export function classifyBy<T, K, V>(objects: T[], keyMapper: (object: T) => K, valueMapper: (object: T) => V): Map<K, V> {\n\n\tconst map = new Map<K, V>();\n\n\tobjects.forEach(object => {\n\n\t\tconst key = keyMapper(object);\n\t\tconst value = valueMapper(object);\n\n\t\tmap.set(key, value);\n\n\t});\n\n\treturn map;\n\n}\n","export function mapValues<T, U>(record: Record<string, T>, mapper: (value: T) => U): Record<string, U> {\n\treturn Object.fromEntries(Object.entries(record).map(([key, value]) => [key, mapper(value)]));\n}\n\nexport function findKeyFromValue<T>(record: Record<string, T>, value: T): string | undefined {\n\tconst entry = Object.entries(record).find(entry => value === entry[1]);\n\treturn entry?.[0];\n}\n\nexport function findValueFromNullableKey<T>(record: Record<string, T>, key: string | undefined): T | undefined\nexport function findValueFromNullableKey<T>(record: Record<string, T>, key: string | undefined, defaultValue: T): T\nexport function findValueFromNullableKey<T>(record: Record<string, T>, key: string | undefined, defaultValue?: T): T | undefined {\n\treturn key == null ? defaultValue : record[key];\n}\n","export function escapeRegExpSpecialChars(text: string): string {\n\treturn text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function joinRegExps(...regexes: (RegExp | string)[]): RegExp {\n\n\tconst source = regexes\n\t\t\t.map((e): string => {\n\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\treturn escapeRegExpSpecialChars(e);\n\t\t\t\t} else {\n\t\t\t\t\treturn e.source;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.join('');\n\n\treturn new RegExp(source);\n\n}\n","export function capitalizeWord(text: string) {\n\treturn text[0].toUpperCase() + text.substring(1);\n}\n\nexport function uncapitalizeWord(text: string) {\n\treturn text[0].toLowerCase() + text.substring(1);\n}\n","export * from './erdiagram/exports';\n"],"sourceRoot":""}