{"version":3,"sources":["webpack://ERDiagram/./node_modules/pluralize/pluralize.js","webpack://ERDiagram/./node_modules/true-json/dist/true-json.umd.js","webpack://ERDiagram/./src/main/erdiagram/common/config/AbstractComponentConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/common/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/common/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/MultipleFileEntityRelationshipModelSourceCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/AbstractCamelCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/AbstractUnderscoreCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/CapitalizedUnderscoreCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/CaseConverter.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/LowerCamelCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/LowerUnderscoreCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/StandardCaseFormats.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/UpperCamelCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/UpperUnderscoreCaseFormat.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/case-format/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/id-naming-strategy/StandardIdNamingStrategies.ts","webpack://ERDiagram/./src/main/erdiagram/converter/common/id-naming-strategy/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/model/DatabaseModelGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/model/config/DatabaseModelGeneratorConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/model/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/model/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/SqlEntityRelationshipModelSourceCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/SqlEntityRelationshipModelSourceCodeGeneratorBuilder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/DatabaseModelToSqlCodeConverter.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/MysqlDialect.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlForeignColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlIdColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/config/MysqlDialectConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/OracleDialect.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleForeignColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleIdColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/config/OracleDialectConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/PostgresqlDialect.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlForeignColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlIdColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/config/PostgresqlDialectConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/SqliteDialect.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteForeignColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteIdColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/config/SqliteDialectConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/SqlServerDialect.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerForeignColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerIdColumnCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/config/SqlServerDialectConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/database/source-code-generator/sql/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/NomnomlEntityRelationshipModelSourceCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/config/NomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/directive/NomnomlDirectivesCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/entity/NomnomlEntityCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/entity/NomnomlEntityIdentityPropertyCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/entity/NomnomlEntityPropertyCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/relationship/NomnomlNamedRelationshipCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipCardinalityCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipDirectionCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/nomnoml/relationship/NomnomlUnnamedRelationshipCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/PlantUmlEntityRelationshipModelSourceCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/entity/PlantUmlEntityCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/entity/PlantUmlEntityIdentityPropertyCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/entity/PlantUmlEntityPropertyCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/relationship/PlantUmlRelationshipCardinalityCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/relationship/PlantUmlRelationshipCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/diagram/plantuml/relationship/PlantUmlRelationshipDirectionCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/ClassModelGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/class/EntityToClassMapper.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/class/field/EntityPropertyToClassFieldMapper.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/class/field/EntityToIdClassFieldMapper.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/class/field/RelationshipMemberToClassFieldMapper.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/config/ClassModelGeneratorConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/source-metadata/source-metadata-types.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/model/source-metadata/source-metadata-utils.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/JavaEntityRelationshipModelSourceCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/JavaEntityRelationshipModelSourceCodeGeneratorBuilder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/annotation/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/annotation/utils/RawAnnotationParameterValue.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/annotation/utils/formatJavaAnnotation.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/code/JavaClassCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/code/JavaClassModelCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/code/JavaClassModelSourceFilesGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/config/JpaTransformerConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/jpa-java-types.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/JpaTransformer.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/JpaTransformerBuilder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/ClassModelSourceFinder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/EntityRelationshipModelSourceFinder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupDataGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/class/JpaTransformerClassVisitor.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/ColumnFieldAnnotationsSupplier.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/IdentityFieldAnnotationsSupplier.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/JpaTransformerFieldVisitor.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/relationship/RelationshipFieldAnnotationsSupplier.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassModelGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaFieldGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/config/JavaClassModelGeneratorConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/source/JavaClassModelDescriptorsRepository.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/generator/source/JavaClassModelDescriptorsRepositoryBuilder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/model/transformer/ApplyTransformersCommand.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/JavaFieldTypeResolver.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/import/JavaAnnotationUsedTypesCompiler.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/import/JavaClassUsedTypesCompiler.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/import/JavaImportStatementsGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/parameterized/createJavaArrayType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/parameterized/createJavaParameterizedType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/parameterized/isJavaParameterizedType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/parseJavaType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/type/simple/createJavaSimpleType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/JavaValidationAnnotationTypes.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/JavaxValidationTransformer.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/config/JavaxValidationTransformerConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullBlobValidationStrategy.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullTextValidationStrategy.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/visitor/JavaxValidationAnnotationsSupplier.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/java/validation/visitor/JavaxValidationFieldVisitor.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptClassModelToCodeConverter.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptEntityRelationshipModelSourceCodeGenerator.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/config/TypeScriptClassModelToCodeConverterConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptTypeResolver.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/exports.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/createTypeScriptArrayType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/createTypeScriptParameterizedType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/isTypeScriptParameterizedType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/parseTypeScriptType.ts","webpack://ERDiagram/./src/main/erdiagram/converter/oop/source-code-generator/typescript/type/simple/createTypeScriptSimpleType.ts","webpack://ERDiagram/./src/main/erdiagram/exports.ts","webpack://ERDiagram/./src/main/erdiagram/parser/EntityRelationshipModelParser.ts","webpack://ERDiagram/./src/main/erdiagram/parser/EntityRelationshipModelParserWithoutValidation.ts","webpack://ERDiagram/./src/main/erdiagram/parser/ParsedModelToPublicModelConverter.ts","webpack://ERDiagram/./src/main/erdiagram/parser/config/EntityRelationshipModelParserConfigManager.ts","webpack://ERDiagram/./src/main/erdiagram/parser/config/exports.ts","webpack://ERDiagram/./src/main/erdiagram/parser/exports.ts","webpack://ERDiagram/./src/main/erdiagram/parser/line/EntityRelationshipModelLineParser.ts","webpack://ERDiagram/./src/main/erdiagram/parser/line/EntityRelationshipModelLineParserErrorHandler.ts","webpack://ERDiagram/./src/main/erdiagram/parser/statement/statement-type-guesser.ts","webpack://ERDiagram/./src/main/erdiagram/parser/statement/statement-types-parse-functions.ts","webpack://ERDiagram/./src/main/erdiagram/parser/statement/statement-types-regexes.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/entity-relationship-model-types.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramDuplicatedEntityNameError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramDuplicatedPropertyNameError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramEntityError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramEntityPropertyError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramInvalidIdentityDefinitionError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramMultipleIdentitiesError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramParseLineError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramRelationshipError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramSyntaxError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramUnknownEntityError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/ERDiagramUnknownTypeError.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/error/exports.ts","webpack://ERDiagram/./src/main/erdiagram/parser/types/exports.ts","webpack://ERDiagram/./src/main/erdiagram/parser/validator/EntityRelationshipModelParseResultValidator.ts","webpack://ERDiagram/./src/main/erdiagram/parser/validator/EntityRelationshipModelParseResultValidatorErrorHandler.ts","webpack://ERDiagram/./src/main/erdiagram/util/array-utils.ts","webpack://ERDiagram/./src/main/erdiagram/util/indent-utils.ts","webpack://ERDiagram/./src/main/erdiagram/util/map-utils.ts","webpack://ERDiagram/./src/main/erdiagram/util/regex-utils.ts","webpack://ERDiagram/./src/main/erdiagram/util/string-utils.ts","webpack://ERDiagram/webpack/bootstrap","webpack://ERDiagram/webpack/runtime/compat get default export","webpack://ERDiagram/webpack/runtime/define property getters","webpack://ERDiagram/webpack/runtime/hasOwnProperty shorthand","webpack://ERDiagram/webpack/runtime/make namespace object","webpack://ERDiagram/./src/main/standalone-entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA,MAAM,IAA0F;AAChG;AACA;AACA,GAAG,MAAM,EAQN;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA,8BAA8B,IAAI;AAClC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"erdiagram.js","sourcesContent":["/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n","/*!\n * TrueJSON: respectful JSON serialization & deserialization for JavaScript\n * v1.0.0-alpha.4\n *\n * https://github.com/nestorrente/true-json\n *\n * Released under the MIT License.\n *\n * Build date: 2021-05-22T18:22:58.182Z\n */\n!function(o,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.TrueJSON=e():o.TrueJSON=e()}(\"undefined\"!=typeof self?self:this,(function(){return(()=>{\"use strict\";var o={d:(e,r)=>{for(var n in r)o.o(r,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(o,e)=>Object.prototype.hasOwnProperty.call(o,e),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},e={};o.r(e),o.d(e,{JsonAdapters:()=>p,JsonConverter:()=>a});var r,n,t=function(o,e,r){if(!e.has(o))throw new TypeError(\"attempted to set private field on non-instance\");return e.set(o,r),r},s=function(o,e){if(!e.has(o))throw new TypeError(\"attempted to get private field on non-instance\");return e.get(o)};class a{constructor(o,e=JSON){r.set(this,void 0),n.set(this,void 0),t(this,r,e),t(this,n,o)}stringify(o,e){return s(this,r).stringify(s(this,n).adaptToJson(o),void 0,e)}parse(o){return s(this,n).recoverFromJson(s(this,r).parse(o))}}function i(){return{adaptToJson:o=>o,recoverFromJson:o=>o}}function c(o){return{adaptToJson:e=>e.map((e=>o.adaptToJson(e))),recoverFromJson:e=>e.map((e=>o.recoverFromJson(e)))}}function u(o){var e,r;const n=null!==(e=null==o?void 0:o.keyAdapter)&&void 0!==e?e:{adaptToJson:o=>o,recoverFromJson:o=>o},t=null!==(r=null==o?void 0:o.valueAdapter)&&void 0!==r?r:{adaptToJson:o=>o,recoverFromJson:o=>o},s=c({adaptToJson(o){const[e,r]=o;return[n.adaptToJson(e),t.adaptToJson(r)]},recoverFromJson(o){const[e,r]=o;return[n.recoverFromJson(e),t.recoverFromJson(r)]}});return{adaptToJson:o=>s.adaptToJson([...o]),recoverFromJson:o=>new Map(s.recoverFromJson(o))}}function d(o,e,r){const{omitUnmappedProperties:n,omittedProperties:t}=r,s=Object.entries(o);return n||0!==t.length?s.filter((([o])=>!function(o,e,r){return function(o,e){const{omittedProperties:r}=e;return r.includes(o)}(o,r)||r.omitUnmappedProperties&&function(o,e){return!e.hasOwnProperty(o)}(o,e)}(o,e,r))):s}r=new WeakMap,n=new WeakMap;const p={identity:i,isoDate:function(){return{adaptToJson:o=>o.toJSON(),recoverFromJson:o=>new Date(o)}},dateTimestamp:function(){return{adaptToJson:o=>o.getTime(),recoverFromJson:o=>new Date(o)}},array:c,set:function(o={adaptToJson:o=>o,recoverFromJson:o=>o}){const e=c(o);return{adaptToJson:o=>e.adaptToJson([...o]),recoverFromJson:o=>new Set(e.recoverFromJson(o))}},record:function(o){return{adaptToJson(e){const r=Object.entries(e).map((([e,r])=>[e,o.adaptToJson(r)]));return Object.fromEntries(r)},recoverFromJson(e){const r=Object.entries(e).map((([e,r])=>[e,o.recoverFromJson(r)]));return Object.fromEntries(r)}}},mapAsEntries:u,mapAsRecord:function(o){const e=u(o);return{adaptToJson(o){const r=e.adaptToJson(o);return Object.fromEntries(r)},recoverFromJson(o){const r=Object.entries(o);return e.recoverFromJson(r)}}},object:function(o,e){const r=(n=e,Object.assign({omitUnmappedProperties:!1,omittedProperties:[]},n));var n;return{adaptToJson(e){const n=d(e,o,r).map((([e,r])=>{const n=o[e];return[e,n?n.adaptToJson(r):r]}));return Object.fromEntries(n)},recoverFromJson(e){const n=d(e,o,r).map((([e,r])=>{const n=o[e];return[e,n?n.recoverFromJson(r):r]}));return Object.fromEntries(n)}}},byKey:function(o){return{adaptToJson(e){const r=Object.entries(o).find((([,o])=>e===o));if(!r)throw new Error(\"Provided value is not associated with any key\");const[n]=r;return n},recoverFromJson(e){if(null==e||!o.hasOwnProperty(e))throw new Error(\"Provided key is not associated with any value\");return o[e]}}},byKeyLenient:function(o,e){return{adaptToJson(r){const n=Object.entries(o).find((([,o])=>r===o));if(!n)return e;const[t]=n;return t},recoverFromJson:r=>null!=r&&o.hasOwnProperty(r)?o[r]:null!=e?o[e]:void 0}},custom:function(o){return o},nullAware:function(o){return{adaptToJson:e=>null===e?null:o.adaptToJson(e),recoverFromJson:e=>null===e?null:o.recoverFromJson(e)}},undefinedAware:function(o){return{adaptToJson:e=>void 0===e?void 0:o.adaptToJson(e),recoverFromJson:e=>void 0===e?void 0:o.recoverFromJson(e)}},nullishAware:function(o){return{adaptToJson:e=>null===e?null:void 0===e?void 0:o.adaptToJson(e),recoverFromJson:e=>null===e?null:void 0===e?void 0:o.recoverFromJson(e)}}};return e})()}));\n//# sourceMappingURL=true-json.umd.js.map","import ComponentConfigManager from '@/erdiagram/common/config/ComponentConfigManager';\nimport {JsonAdapter, JsonAdapters, JsonValue} from 'true-json';\n\nexport default abstract class AbstractComponentConfigManager<C, P = Partial<C>>\n\t\timplements ComponentConfigManager<C, P> {\n\n\treadonly #jsonAdapter: JsonAdapter<C>;\n\n\tconstructor() {\n\t\tthis.#jsonAdapter = this.getJsonAdapter();\n\t}\n\n\tabstract getDefaultConfig(): C;\n\n\tabstract mergeConfigs(fullConfig: C, partialConfig?: P): C;\n\n\tmergeWithDefaultConfig(partialConfig?: P): C {\n\t\treturn this.mergeConfigs(this.getDefaultConfig(), partialConfig);\n\t}\n\n\tconvertToSerializableObject(fullConfig: C): JsonValue {\n\t\treturn this.#jsonAdapter.adaptToJson(fullConfig);\n\t}\n\n\tconvertFromSerializableObject(serializableConfig: JsonValue): C {\n\t\treturn this.#jsonAdapter.recoverFromJson(serializableConfig);\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<C> {\n\t\treturn JsonAdapters.identity<any>();\n\t}\n\n}\n","import ComponentConfigManager from './ComponentConfigManager';\nimport AbstractComponentConfigManager from './AbstractComponentConfigManager';\n\nexport {\n\tComponentConfigManager,\n\tAbstractComponentConfigManager\n};\n","export * from './config/exports';\n","import {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport SourceFileInfo from '@/erdiagram/converter/common/SourceFileInfo';\nimport EntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/EntityRelationshipModelSourceCodeGenerator';\n\nexport default interface MultipleFileEntityRelationshipModelSourceCodeGenerator\n\t\textends EntityRelationshipModelSourceCodeGenerator {\n\n\tgenerateSourceFiles(model: EntityRelationshipModel): SourceFileInfo[];\n\n}\n\nexport function isMultipleFileEntityRelationshipModelSourceCodeGenerator(\n\t\tgenerator: EntityRelationshipModelSourceCodeGenerator\n): generator is MultipleFileEntityRelationshipModelSourceCodeGenerator {\n\tconst uncheckedCastedGenerator = generator as MultipleFileEntityRelationshipModelSourceCodeGenerator;\n\treturn typeof uncheckedCastedGenerator.generateSourceFiles === 'function';\n}\n","import CaseFormat from '@/erdiagram/converter/common/case-format/CaseFormat';\nimport {removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nconst CAMEL_CASE_WORD_BOUNDARIES_REGEX = /((?<=[^A-Z])(?=[A-Z])|(?=[A-Z][a-z])|(?<=[A-Za-z])(?=[0-9]))/;\n\nexport default abstract class AbstractCamelCaseFormat implements CaseFormat {\n\n\tabstract joinWords(words: string[]): string;\n\n\tpublic splitWords(text: string): string[] {\n\t\treturn removeNonEmptyStrings(text.split(CAMEL_CASE_WORD_BOUNDARIES_REGEX));\n\t}\n\n}\n","import CaseFormat from '@/erdiagram/converter/common/case-format/CaseFormat';\nimport {removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nexport default abstract class AbstractUnderscoreCaseFormat implements CaseFormat {\n\n\tabstract joinWords(words: string[]): string;\n\n\tpublic splitWords(text: string): string[] {\n\t\treturn removeNonEmptyStrings(text.split('_'));\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/converter/common/case-format/AbstractUnderscoreCaseFormat';\nimport {capitalizeWord, removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nexport default class CapitalizedUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn removeNonEmptyStrings(words)\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.map(capitalizeWord)\n\t\t\t\t.join('_');\n\t}\n\n}\n","import CaseFormat from '@/erdiagram/converter/common/case-format/CaseFormat';\n\nexport default class CaseConverter {\n\n\tconstructor(\n\t\t\tprivate readonly sourceCaseFormat: CaseFormat,\n\t\t\tprivate readonly targetCaseFormat: CaseFormat\n\t) {\n\n\t}\n\n\tpublic convertCase(text: string) {\n\n\t\tif (this.sourceCaseFormat === this.targetCaseFormat) {\n\t\t\treturn text;\n\t\t}\n\n\t\tconst words = this.sourceCaseFormat.splitWords(text);\n\n\t\treturn this.targetCaseFormat.joinWords(words);\n\n\t}\n\n}\n","import AbstractCamelCaseFormat from '@/erdiagram/converter/common/case-format/AbstractCamelCaseFormat';\nimport {capitalizeWord, removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nexport default class LowerCamelCaseFormat extends AbstractCamelCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\n\t\tconst nonEmptyWords = removeNonEmptyStrings(words)\n\n\t\tif (nonEmptyWords.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst [firstWord, ...otherWords] = nonEmptyWords;\n\n\t\tconst lowerCaseFirstWord = firstWord.toLowerCase();\n\n\t\tconst capitalizedOtherWords = otherWords\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.map(capitalizeWord);\n\n\t\treturn lowerCaseFirstWord + capitalizedOtherWords.join('');\n\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/converter/common/case-format/AbstractUnderscoreCaseFormat';\nimport {removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nexport default class LowerUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn removeNonEmptyStrings(words)\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.join('_');\n\t}\n\n}\n","import LowerCamelCaseFormat from '@/erdiagram/converter/common/case-format/LowerCamelCaseFormat';\nimport UpperCamelCaseFormat from '@/erdiagram/converter/common/case-format/UpperCamelCaseFormat';\nimport LowerUnderscoreCaseFormat from '@/erdiagram/converter/common/case-format/LowerUnderscoreCaseFormat';\nimport CapitalizedUnderscoreCaseFormat from '@/erdiagram/converter/common/case-format/CapitalizedUnderscoreCaseFormat';\nimport UpperUnderscoreCaseFormat from '@/erdiagram/converter/common/case-format/UpperUnderscoreCaseFormat';\nimport CaseFormat from '@/erdiagram/converter/common/case-format/CaseFormat';\n\nconst StandardCaseFormats = {\n\tLOWER_CAMEL: new LowerCamelCaseFormat() as CaseFormat,\n\tUPPER_CAMEL: new UpperCamelCaseFormat() as CaseFormat,\n\tLOWER_UNDERSCORE: new LowerUnderscoreCaseFormat() as CaseFormat,\n\tCAPITALIZED_UNDERSCORE: new CapitalizedUnderscoreCaseFormat() as CaseFormat,\n\tUPPER_UNDERSCORE: new UpperUnderscoreCaseFormat() as CaseFormat,\n};\n\nexport default StandardCaseFormats;\n","import AbstractCamelCaseFormat from '@/erdiagram/converter/common/case-format/AbstractCamelCaseFormat';\nimport {capitalizeWord, removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nexport default class UpperCamelCaseFormat extends AbstractCamelCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn removeNonEmptyStrings(words)\n\t\t\t\t.map(word => word.toLowerCase())\n\t\t\t\t.map(capitalizeWord)\n\t\t\t\t.join('');\n\t}\n\n}\n","import AbstractUnderscoreCaseFormat from '@/erdiagram/converter/common/case-format/AbstractUnderscoreCaseFormat';\nimport {removeNonEmptyStrings} from '@/erdiagram/util/string-utils';\n\nexport default class UpperUnderscoreCaseFormat extends AbstractUnderscoreCaseFormat {\n\n\tpublic joinWords(words: string[]): string {\n\t\treturn removeNonEmptyStrings(words)\n\t\t\t\t.map(word => word.toUpperCase())\n\t\t\t\t.join('_');\n\t}\n\n}\n","import CaseConverter from './CaseConverter';\nimport CaseFormat from './CaseFormat';\nimport StandardCaseFormats from './StandardCaseFormats';\n\nexport {\n\tCaseFormat,\n\tStandardCaseFormats,\n\tCaseConverter\n};\n","export * from './case-format/exports';\nexport * from './id-naming-strategy/exports';\n","import {uncapitalizeWord} from '@/erdiagram/util/string-utils';\nimport IdNamingStrategy from '@/erdiagram/converter/common/id-naming-strategy/IdNamingStrategy';\n\nconst defaultIdNamingStrategy: IdNamingStrategy = () => 'id';\nconst entityNamePrefixIdNamingStrategy: IdNamingStrategy = entityName => `${uncapitalizeWord(entityName)}Id`;\n\nconst StandardIdNamingStrategies = {\n\tDEFAULT: defaultIdNamingStrategy,\n\tENTITY_NAME_PREFIX: entityNamePrefixIdNamingStrategy\n};\n\nexport default StandardIdNamingStrategies;\n","import StandardIdNamingStrategies from './StandardIdNamingStrategies';\nimport IdNamingStrategy from './IdNamingStrategy';\n\nexport {\n\tIdNamingStrategy,\n\tStandardIdNamingStrategies\n};\n","export * from './source-code-generator/exports';\nexport * from './model/exports';\n","import pluralize from 'pluralize';\nimport {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport DatabaseModelGeneratorConfig, {PartialDatabaseModelGeneratorConfig} from '@/erdiagram/converter/database/model/config/DatabaseModelGeneratorConfig';\nimport {\n\tCardinality,\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityRelationshipModel,\n\tRelationshipDescriptor,\n\tRelationshipMember\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport databaseModelGeneratorConfigManager\n\tfrom '@/erdiagram/converter/database/model/config/DatabaseModelGeneratorConfigManager';\nimport {classifyBy} from '@/erdiagram/util/map-utils';\nimport {capitalizeWord, uncapitalizeWord} from '@/erdiagram/util/string-utils';\nimport {SourceType} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class DatabaseModelGenerator {\n\n\tprivate readonly config: DatabaseModelGeneratorConfig;\n\n\tconstructor(config?: PartialDatabaseModelGeneratorConfig) {\n\t\tthis.config = databaseModelGeneratorConfigManager.mergeWithDefaultConfig(config);\n\t}\n\n\tgenerateDatabaseModel(model: EntityRelationshipModel): DatabaseModel {\n\n\t\tconst entityIdentitiesMap = classifyBy(\n\t\t\t\tmodel.entities.filter(entity => entity.identityPropertyName),\n\t\t\t\tentity => entity.name,\n\t\t\t\tentity => entity.identityPropertyName!\n\t\t);\n\n\t\tconst tables: TableDescriptor[] = [];\n\n\t\tthis.generateEntityTables(model, entityIdentitiesMap, tables);\n\t\tthis.generateRelationshipTables(model, entityIdentitiesMap, tables);\n\n\t\treturn {\n\t\t\ttables\n\t\t};\n\n\t}\n\n\tprivate generateEntityTables(model: EntityRelationshipModel, entityIdentitiesMap: Map<string, string>, tables: TableDescriptor[]) {\n\t\tmodel.entities\n\t\t\t\t.map(entity => this.generateEntityTable(entity, model, entityIdentitiesMap))\n\t\t\t\t.forEach(sentence => tables.push(sentence));\n\t}\n\n\tprivate generateEntityTable(entity: EntityDescriptor, model: EntityRelationshipModel, entityIdentitiesMap: Map<string, string>): TableDescriptor {\n\n\t\tconst columns: TableColumnDescriptor[] = [];\n\n\t\tconst references: TableReferenceDescriptor[] = [];\n\n\t\tfor (const property of entity.properties) {\n\t\t\tcolumns.push(this.mapPropertyToColumn(entity, property));\n\t\t}\n\n\t\tfor (const relationship of model.relationships) {\n\t\t\tif (relationship.rightMember.cardinality !== Cardinality.MANY) {\n\t\t\t\tif (relationship.leftMember.entity === entity.name) {\n\t\t\t\t\tconst isOneToOneRelationship = relationship.leftMember.cardinality !== Cardinality.MANY;\n\t\t\t\t\treferences.push(this.createTableReference(relationship, relationship.rightMember, entityIdentitiesMap, isOneToOneRelationship));\n\t\t\t\t}\n\t\t\t} else if (relationship.leftMember.cardinality !== Cardinality.MANY) {\n\t\t\t\tif (relationship.rightMember.entity === entity.name) {\n\t\t\t\t\treferences.push(this.createTableReference(relationship, relationship.leftMember, entityIdentitiesMap));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname: this.pluralizeEntityNameIfApplies(entity.name),\n\t\t\tidentityColumnName: this.getIdentityColumnName(entity.name, entityIdentitiesMap),\n\t\t\tcolumns,\n\t\t\treferences,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.ENTITY,\n\t\t\t\tentity\n\t\t\t}\n\t\t};\n\n\t}\n\n\tprivate generateRelationshipTables(model: EntityRelationshipModel, entityIdentitiesMap: Map<string, string>, tables: TableDescriptor[]) {\n\t\tmodel.relationships\n\t\t\t\t.filter(relationship => this.isManyToManyRelationship(relationship))\n\t\t\t\t.map(relationship => this.generateRelationshipTable(relationship, entityIdentitiesMap))\n\t\t\t\t.forEach(sentence => tables.push(sentence));\n\t}\n\n\tprivate generateRelationshipTable(relationship: RelationshipDescriptor, entityIdentitiesMap: Map<string, string>): TableDescriptor {\n\n\t\tconst name = this.getRelationshipTableName(relationship);\n\t\tconst identityColumnName = this.getRelationshipTableIdentityColumnName(relationship, entityIdentitiesMap);\n\n\t\treturn {\n\t\t\tname,\n\t\t\tidentityColumnName: identityColumnName,\n\t\t\tcolumns: [],\n\t\t\treferences: [\n\t\t\t\tthis.createTableReference(relationship, relationship.leftMember, entityIdentitiesMap),\n\t\t\t\tthis.createTableReference(relationship, relationship.rightMember, entityIdentitiesMap)\n\t\t\t],\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.RELATIONSHIP,\n\t\t\t\trelationship\n\t\t\t}\n\t\t};\n\n\t}\n\n\tprivate getRelationshipTableName(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\trelationshipName,\n\t\t\tleftMember,\n\t\t\trightMember\n\t\t} = relationship;\n\n\t\tif (relationshipName) {\n\t\t\treturn relationshipName;\n\t\t}\n\n\t\treturn this.pluralizeEntityNameIfApplies(leftMember.entity)\n\t\t\t\t+ this.pluralizeEntityNameIfApplies(rightMember.entity);\n\n\t}\n\n\tprivate getRelationshipTableIdentityColumnName(relationship: RelationshipDescriptor, entityIdentitiesMap: Map<string, string>): string {\n\n\t\tconst {\n\t\t\trelationshipName,\n\t\t\tleftMember,\n\t\t\trightMember\n\t\t} = relationship;\n\n\t\tif (relationshipName) {\n\t\t\treturn this.getIdentityColumnName(relationshipName, entityIdentitiesMap);\n\t\t}\n\n\t\treturn this.getIdentityColumnName(leftMember.entity + rightMember.entity, entityIdentitiesMap);\n\n\t}\n\n\tprivate createTableReference(\n\t\t\trelationship: RelationshipDescriptor,\n\t\t\ttoMember: RelationshipMember,\n\t\t\tentityIdentitiesMap: Map<string, string>,\n\t\t\tunique: boolean = false\n\t): TableReferenceDescriptor {\n\n\t\tconst {\n\t\t\tentityAlias,\n\t\t\tentity,\n\t\t\tcardinality\n\t\t} = toMember;\n\n\t\treturn {\n\t\t\tcolumnName: `${entityAlias}Id`,\n\t\t\ttargetTableName: this.pluralizeEntityNameIfApplies(entity),\n\t\t\ttargetTableIdentityColumnName: this.getIdentityColumnName(entity, entityIdentitiesMap),\n\t\t\tnotNull: cardinality !== Cardinality.ZERO_OR_ONE,\n\t\t\tunique,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.RELATIONSHIP_MEMBER,\n\t\t\t\trelationship,\n\t\t\t\treferencedMember: toMember\n\t\t\t}\n\t\t};\n\n\t}\n\n\tprivate pluralizeEntityNameIfApplies(entityName: string): string {\n\n\t\tif (!this.config.usePluralTableNames) {\n\t\t\treturn entityName;\n\t\t}\n\n\t\t// pluralize() takes into account the case of the word, so 'A' is pluralized to 'AS' instead of 'As'.\n\t\t// This means that we have to uncapitalize the entity name before calling pluralize() in order to get the\n\t\t// expected behavior, then capitalize the result.\n\n\t\tconst uncapitalizedEntityName = uncapitalizeWord(entityName);\n\t\tconst pluralizedUncapitalizedEntityName = pluralize(uncapitalizedEntityName);\n\n\t\treturn capitalizeWord(pluralizedUncapitalizedEntityName);\n\n\t}\n\n\tprivate getIdentityColumnName(entityName: string, entityIdentitiesMap: Map<string, string>): string {\n\n\t\tif (entityIdentitiesMap.has(entityName)) {\n\t\t\treturn entityIdentitiesMap.get(entityName)!;\n\t\t}\n\n\t\tconst {idNamingStrategy} = this.config;\n\t\treturn idNamingStrategy(entityName);\n\n\t}\n\n\tprivate mapPropertyToColumn(entity: EntityDescriptor, property: EntityPropertyDescriptor): TableColumnDescriptor {\n\n\t\tconst {\n\t\t\tname,\n\t\t\toptional,\n\t\t\tunique,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = property;\n\n\t\treturn {\n\t\t\tname,\n\t\t\tnotNull: !optional,\n\t\t\tunique,\n\t\t\ttype,\n\t\t\tlength,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.ENTITY_PROPERTY,\n\t\t\t\tentity,\n\t\t\t\tproperty\n\t\t\t}\n\t\t};\n\n\t}\n\n\tprivate isManyToManyRelationship(relationship: RelationshipDescriptor): boolean {\n\t\treturn [\n\t\t\trelationship.leftMember,\n\t\t\trelationship.rightMember\n\t\t].every(member => member.cardinality === Cardinality.MANY);\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport DatabaseModelGeneratorConfig, {PartialDatabaseModelGeneratorConfig} from '@/erdiagram/converter/database/model/config/DatabaseModelGeneratorConfig';\nimport StandardIdNamingStrategies from '@/erdiagram/converter/common/id-naming-strategy/StandardIdNamingStrategies';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\n\nexport class DatabaseModelGeneratorConfigManager\n\t\textends AbstractComponentConfigManager<DatabaseModelGeneratorConfig, PartialDatabaseModelGeneratorConfig> {\n\n\tgetDefaultConfig(): DatabaseModelGeneratorConfig {\n\t\treturn {\n\t\t\tusePluralTableNames: false,\n\t\t\tidNamingStrategy: StandardIdNamingStrategies.DEFAULT\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: DatabaseModelGeneratorConfig, partialConfig?: PartialDatabaseModelGeneratorConfig): DatabaseModelGeneratorConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<DatabaseModelGeneratorConfig> {\n\t\treturn JsonAdapters.object<DatabaseModelGeneratorConfig>({\n\t\t\tidNamingStrategy: JsonAdapters.byKeyLenient(StandardIdNamingStrategies, 'DEFAULT')\n\t\t});\n\t}\n\n}\n\nconst databaseModelGeneratorConfigManager = new DatabaseModelGeneratorConfigManager();\nexport default databaseModelGeneratorConfigManager;\n","import DatabaseModelGeneratorConfig from './DatabaseModelGeneratorConfig';\nimport databaseModelGeneratorConfigManager, {DatabaseModelGeneratorConfigManager} from './DatabaseModelGeneratorConfigManager';\n\nexport {\n\tDatabaseModelGeneratorConfig,\n\tDatabaseModelGeneratorConfigManager,\n\tdatabaseModelGeneratorConfigManager\n};\n","import DatabaseModelGenerator from './DatabaseModelGenerator';\n\nexport * from './database-model-types';\nexport * from './config/exports';\n\nexport {\n\tDatabaseModelGenerator\n};\n","import DatabaseModelGenerator from '@/erdiagram/converter/database/model/DatabaseModelGenerator';\nimport EntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/EntityRelationshipModelSourceCodeGenerator';\nimport {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport DatabaseModelToSqlCodeConverter\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/DatabaseModelToSqlCodeConverter';\nimport SqlEntityRelationshipModelSourceCodeGeneratorBuilder\n\tfrom '@/erdiagram/converter/database/source-code-generator/SqlEntityRelationshipModelSourceCodeGeneratorBuilder';\n\nexport default class SqlEntityRelationshipModelSourceCodeGenerator implements EntityRelationshipModelSourceCodeGenerator {\n\n\tprivate readonly databaseModelGenerator: DatabaseModelGenerator;\n\tprivate readonly databaseModelToSqlCodeConverter: DatabaseModelToSqlCodeConverter;\n\n\tconstructor(\n\t\t\tdatabaseModelGenerator: DatabaseModelGenerator,\n\t\t\tdatabaseModelToSqlCodeConverter: DatabaseModelToSqlCodeConverter\n\t) {\n\t\tthis.databaseModelGenerator = databaseModelGenerator;\n\t\tthis.databaseModelToSqlCodeConverter = databaseModelToSqlCodeConverter;\n\t}\n\n\tpublic generateSourceCode(entityRelationshipModel: EntityRelationshipModel): string {\n\t\tconst databaseModel = this.databaseModelGenerator.generateDatabaseModel(entityRelationshipModel);\n\t\treturn this.databaseModelToSqlCodeConverter.convertToCode(databaseModel);\n\t}\n\n\tstatic withDefaultConfig() {\n\t\treturn this.builder().build();\n\t}\n\n\tstatic builder() {\n\t\treturn new SqlEntityRelationshipModelSourceCodeGeneratorBuilder();\n\t}\n\n}\n","import {PartialDatabaseModelGeneratorConfig} from '@/erdiagram/converter/database/model/config/DatabaseModelGeneratorConfig';\nimport SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\nimport DatabaseModelGenerator from '@/erdiagram/converter/database/model/DatabaseModelGenerator';\nimport SqlEntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/SqlEntityRelationshipModelSourceCodeGenerator';\nimport DatabaseModelToSqlCodeConverter\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/DatabaseModelToSqlCodeConverter';\n\nexport default class SqlEntityRelationshipModelSourceCodeGeneratorBuilder {\n\n\t#databaseModelGeneratorConfig: PartialDatabaseModelGeneratorConfig = {};\n\t#sqlDialect?: SqlDialect;\n\n\tpublic withDatabaseModelGeneratorConfig(config: PartialDatabaseModelGeneratorConfig) {\n\t\tthis.#databaseModelGeneratorConfig = config;\n\t\treturn this;\n\t}\n\n\tpublic withSqlDialect(sqlDialect: SqlDialect) {\n\t\tthis.#sqlDialect = sqlDialect;\n\t\treturn this;\n\t}\n\n\tpublic build() {\n\n\t\tif (this.#sqlDialect == null) {\n\t\t\tthrow new Error('SqlDialect is not configured');\n\t\t}\n\n\t\treturn new SqlEntityRelationshipModelSourceCodeGenerator(\n\t\t\t\tnew DatabaseModelGenerator(this.#databaseModelGeneratorConfig),\n\t\t\t\tnew DatabaseModelToSqlCodeConverter(this.#sqlDialect)\n\t\t);\n\n\t}\n\n}\n","import SqlEntityRelationshipModelSourceCodeGenerator from './SqlEntityRelationshipModelSourceCodeGenerator';\n\nexport * from './sql/exports';\n\nexport {\n\tSqlEntityRelationshipModelSourceCodeGenerator\n};\n","import {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\nimport {\n\tCreateTableLines,\n\tTableCreationStatements\n} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\n\nexport default class DatabaseModelToSqlCodeConverter {\n\n\tconstructor(\n\t\t\tprivate readonly sqlDialect: SqlDialect\n\t) {\n\n\t}\n\n\tpublic convertToCode(databaseModel: DatabaseModel): string {\n\n\t\tconst allCreateTableStatements: string[] = [];\n\t\tconst allAlterTableStatements: string[] = [];\n\n\t\tdatabaseModel.tables\n\t\t\t\t.map(table => this.generateTableCode(table))\n\t\t\t\t.forEach(({createTableStatement, alterTableStatements}) => {\n\n\t\t\t\t\tallCreateTableStatements.push(createTableStatement);\n\n\t\t\t\t\tif (alterTableStatements) {\n\t\t\t\t\t\tallAlterTableStatements.push(alterTableStatements);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\tconst allScriptStatements = [\n\t\t\t...allCreateTableStatements,\n\t\t\t...allAlterTableStatements\n\t\t];\n\n\t\tconst scriptStartCode = this.sqlDialect.getScriptStartCode();\n\t\tconst scriptEndCode = this.sqlDialect.getScriptEndCode();\n\n\t\tif (scriptStartCode) {\n\t\t\tallScriptStatements.unshift(scriptStartCode);\n\t\t}\n\n\t\tif (scriptEndCode) {\n\t\t\tallScriptStatements.push(scriptEndCode);\n\t\t}\n\n\t\treturn allScriptStatements.join('\\n\\n');\n\n\t}\n\n\t// FIXME split this method\n\tprivate generateTableCode(table: TableDescriptor): TableCreationStatements {\n\n\t\tconst lines: CreateTableLines = {\n\t\t\tsequences: [],\n\t\t\tcolumns: [],\n\t\t\tfkConstraints: [],\n\t\t\totherConstraints: []\n\t\t};\n\n\t\tconst {\n\t\t\tcreateSequenceLine: idCreateSequenceLine,\n\t\t\tcolumnLine: idColumnLine,\n\t\t\tpkConstraintLine\n\t\t} = this.sqlDialect.getIdColumnCode(table.name, table.identityColumnName);\n\n\t\tif (idCreateSequenceLine) {\n\t\t\tlines.sequences.push(idCreateSequenceLine);\n\t\t}\n\n\t\tlines.columns.push(idColumnLine);\n\n\t\tif (pkConstraintLine != null) {\n\t\t\tlines.otherConstraints.push(pkConstraintLine);\n\t\t}\n\n\t\tthis.processColumns(table.name, table.columns, lines);\n\t\tthis.processReferences(table.name, table.references, lines);\n\n\t\tconst createTableInnerLines = this.getCreateTableInnerLines(lines);\n\n\t\tconst createTableLines = [\n\t\t\t...lines.sequences,\n\t\t\tthis.sqlDialect.getCreateTableStartCode(table.name),\n\t\t\tindentLines(createTableInnerLines).join(',\\n'),\n\t\t\tthis.sqlDialect.getCreateTableEndCode()\n\t\t];\n\n\t\tconst alterTableLines = this.getAlterTableLines(table, lines);\n\n\t\treturn {\n\t\t\tcreateTableStatement: createTableLines.join('\\n'),\n\t\t\talterTableStatements: alterTableLines.join('\\n')\n\t\t};\n\n\t}\n\n\tprivate processColumns(tableName: string, columns: TableColumnDescriptor[], lines: CreateTableLines) {\n\n\t\tfor (const column of columns) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tuniqueConstraintLine\n\t\t\t} = this.sqlDialect.getColumnCode(tableName, column);\n\n\t\t\tlines.columns.push(columnLine);\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\tlines.otherConstraints.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tprivate processReferences(tableName: string, references: TableReferenceDescriptor[], lines: CreateTableLines) {\n\n\t\tfor (const reference of references) {\n\n\t\t\tconst {\n\t\t\t\tcolumnLine,\n\t\t\t\tuniqueConstraintLine,\n\t\t\t\tfkConstraintLine\n\t\t\t} = this.sqlDialect.getForeignColumnCode(tableName, reference);\n\n\t\t\tlines.columns.push(columnLine);\n\t\t\tlines.fkConstraints.push(fkConstraintLine);\n\n\t\t\tif (uniqueConstraintLine) {\n\t\t\t\tlines.otherConstraints.push(uniqueConstraintLine);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tprivate getCreateTableInnerLines(lines: CreateTableLines): string[] {\n\n\t\tconst createTableInnerLines = [\n\t\t\t...lines.columns,\n\t\t\t...lines.otherConstraints\n\t\t];\n\n\t\tif (!this.sqlDialect.mustUseAlterTableForForeignKeys()) {\n\t\t\tcreateTableInnerLines.push(...lines.fkConstraints);\n\t\t}\n\n\t\treturn createTableInnerLines;\n\n\t}\n\n\tprivate getAlterTableLines(table: TableDescriptor, lines: CreateTableLines): string[] {\n\n\t\tif (!this.sqlDialect.mustUseAlterTableForForeignKeys()) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn lines.fkConstraints.map(fkConstraintLine => {\n\t\t\treturn this.sqlDialect.getAlterTableAddCode(table.name, fkConstraintLine);\n\t\t});\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class SqlTypeResolver {\n\n\tprivate readonly typeBindings: Partial<Record<EntityPropertyType, string>>;\n\n\tconstructor(typeBindings: Partial<Record<EntityPropertyType, string>>) {\n\t\tthis.typeBindings = typeBindings;\n\t}\n\n\tpublic resolveSqlType(type: EntityPropertyType): string {\n\n\t\t/* istanbul ignore next */\n\t\tif (!this.typeBindings.hasOwnProperty(type)) {\n\t\t\tthrow new Error('Unsupported type: ' + type);\n\t\t}\n\n\t\treturn this.typeBindings[type]!;\n\n\t}\n\n}\n","export * from './common/config/exports';\n\nexport * from './mysql/exports';\nexport * from './oracle/exports';\nexport * from './sqlite/exports';\nexport * from './sqlserver/exports';\nexport * from './postgresql/exports';\n","import SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport {\n\tForeignKeyColumnCode,\n\tIdColumnCode,\n\tRegularColumnCode\n} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport MysqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlColumnCodeGenerator';\nimport MysqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlIdColumnCodeGenerator';\nimport MysqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlForeignColumnCodeGenerator';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport mysqlDialectConfigManager\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/config/MysqlDialectConfigManager';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport {PartialMysqlDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/config/MysqlDialectConfig';\n\nexport default class MysqlDialect implements SqlDialect {\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: MysqlColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: MysqlIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: MysqlForeignColumnCodeGenerator;\n\n\tconstructor(config?: PartialMysqlDialectConfig) {\n\n\t\tconst fullConfig = mysqlDialectConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.columnNameCaseFormat\n\t\t);\n\n\t\tconst sqlTypeResolver = new SqlTypeResolver(fullConfig.typeBindings);\n\n\t\tthis.columnCodeGenerator = new MysqlColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new MysqlIdColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new MysqlForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tgetScriptStartCode() {\n\t\treturn '';\n\t}\n\n\tgetScriptEndCode() {\n\t\treturn '';\n\t}\n\n\tmustUseAlterTableForForeignKeys(): boolean {\n\t\treturn true;\n\t}\n\n\tgetCreateTableStartCode(tableName: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `CREATE TABLE \\`${outputTableName}\\` (`;\n\t}\n\n\tgetCreateTableEndCode() {\n\t\treturn ');';\n\t}\n\n\tgetIdColumnCode(tableName: string, identityColumnName: string): IdColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, identityColumnName);\n\t}\n\n\tgetColumnCode(tableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\t}\n\n\tgetForeignColumnCode(tableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\t}\n\n\tgetAlterTableAddCode(tableName: string, constraintCode: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `ALTER TABLE \\`${outputTableName}\\` ADD ${constraintCode};`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/converter/database/model/database-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {RegularColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class MysqlColumnCodeGenerator implements SqlColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: OmitSource<TableColumnDescriptor>): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: OmitSource<TableColumnDescriptor>): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\\`${outputColumnName}\\``,\n\t\t\tthis.generateMysqlTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateMysqlTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst mysqlType = this.typeResolver.resolveSqlType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn mysqlType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \\`${outputTableName}_${outputColumnName}_unique\\` UNIQUE (\\`${outputColumnName}\\`)`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport MysqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/column/MysqlColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {ForeignKeyColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlForeignColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class MysqlForeignColumnCodeGenerator implements SqlForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: MysqlColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: OmitSource<TableReferenceDescriptor>): OmitSource<TableColumnDescriptor> {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTITY,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentityColumnName);\n\n\t\treturn `CONSTRAINT \\`${outputTableName}_${outputColumnName}_fk\\` FOREIGN KEY (\\`${outputColumnName}\\`)`\n\t\t\t\t+ ` REFERENCES \\`${outputTargetTableName}\\` (\\`${outputTargetColumnName}\\`)`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {IdColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlIdColumnCodeGenerator';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\n\nexport default class MysqlIdColumnCodeGenerator implements SqlIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identityColumnName: string): IdColumnCode {\n\n\t\tconst outputIdentityColumnName = this.columnNameCaseConverter.convertCase(identityColumnName);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateIdColumnDeclarationLine(outputIdentityColumnName),\n\t\t\tpkConstraintLine: this.createPrimaryKeyConstraint(outputTableName, outputIdentityColumnName)\n\t\t};\n\n\t}\n\n\tprivate generateIdColumnDeclarationLine(outputIdentityColumnName: string): string {\n\t\tconst sqlType = this.typeResolver.resolveSqlType(EntityPropertyType.IDENTITY);\n\t\treturn `\\`${outputIdentityColumnName}\\` ${sqlType} NOT NULL AUTO_INCREMENT`;\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, outputIdentityColumnName: string) {\n\t\treturn `CONSTRAINT \\`${outputTableName}_pk\\` PRIMARY KEY (\\`${outputIdentityColumnName}\\`)`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport MysqlDialectConfig, {PartialMysqlDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/config/MysqlDialectConfig';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\n\nexport class MysqlDialectConfigManager\n\t\textends AbstractComponentConfigManager<MysqlDialectConfig, PartialMysqlDialectConfig> {\n\n\tgetDefaultConfig(): MysqlDialectConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.TEXT]: 'VARCHAR',\n\t\t\t\t[EntityPropertyType.LONG]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.INT]: 'INT',\n\t\t\t\t[EntityPropertyType.SHORT]: 'SHORT',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'DECIMAL',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'BOOLEAN',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIME',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.BLOB]: 'BLOB'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.LOWER_CAMEL,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: MysqlDialectConfig, partialConfig?: PartialMysqlDialectConfig): MysqlDialectConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<MysqlDialectConfig> {\n\t\treturn JsonAdapters.object<MysqlDialectConfig>({\n\t\t\ttableNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'UPPER_CAMEL'),\n\t\t\tcolumnNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'LOWER_CAMEL')\n\t\t});\n\t}\n\n}\n\nconst mysqlDialectConfigManager = new MysqlDialectConfigManager();\nexport default mysqlDialectConfigManager;\n","import MysqlDialectConfig from './MysqlDialectConfig';\nimport mysqlDialectConfigManager, {MysqlDialectConfigManager} from './MysqlDialectConfigManager';\n\nexport {\n\tMysqlDialectConfig,\n\tMysqlDialectConfigManager,\n\tmysqlDialectConfigManager\n};\n","import MysqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/mysql/MysqlDialect';\n\nexport * from './config/exports';\n\nexport {\n\tMysqlDialect\n};\n","import SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport OracleColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleColumnCodeGenerator';\nimport OracleIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleIdColumnCodeGenerator';\nimport OracleForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleForeignColumnCodeGenerator';\nimport {PartialOracleDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/config/OracleDialectConfig';\nimport oracleDialectConfigManager\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/config/OracleDialectConfigManager';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {\n\tForeignKeyColumnCode,\n\tIdColumnCode,\n\tRegularColumnCode\n} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\n\nexport default class OracleDialect implements SqlDialect {\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: OracleColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: OracleIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: OracleForeignColumnCodeGenerator;\n\n\tconstructor(config?: PartialOracleDialectConfig) {\n\n\t\tconst fullConfig = oracleDialectConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.columnNameCaseFormat\n\t\t);\n\n\t\tconst sqlTypeResolver = new SqlTypeResolver(fullConfig.typeBindings);\n\n\t\tthis.columnCodeGenerator = new OracleColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new OracleIdColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new OracleForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tgetScriptStartCode() {\n\t\treturn '';\n\t}\n\n\tgetScriptEndCode() {\n\t\treturn '';\n\t}\n\n\tmustUseAlterTableForForeignKeys(): boolean {\n\t\treturn true;\n\t}\n\n\tgetCreateTableStartCode(tableName: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `CREATE TABLE \"${outputTableName}\" (`;\n\t}\n\n\tgetCreateTableEndCode() {\n\t\treturn ');';\n\t}\n\n\tgetIdColumnCode(tableName: string, identityColumnName: string): IdColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, identityColumnName);\n\t}\n\n\tgetColumnCode(tableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\t}\n\n\tgetForeignColumnCode(tableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\t}\n\n\tgetAlterTableAddCode(tableName: string, constraintCode: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `ALTER TABLE \"${outputTableName}\" ADD ${constraintCode};`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/converter/database/model/database-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {RegularColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class OracleColumnCodeGenerator implements SqlColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: OmitSource<TableColumnDescriptor>): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: OmitSource<TableColumnDescriptor>): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\"${outputColumnName}\"`,\n\t\t\tthis.generateOracleTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateOracleTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst oracleType = this.typeResolver.resolveSqlType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn oracleType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_UNIQUE\" UNIQUE (\"${outputColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport OracleColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/column/OracleColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {ForeignKeyColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlForeignColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class OracleForeignColumnCodeGenerator implements SqlForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: OracleColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: OmitSource<TableReferenceDescriptor>): OmitSource<TableColumnDescriptor> {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTITY,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentityColumnName);\n\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_FK\" FOREIGN KEY (\"${outputColumnName}\")`\n\t\t\t\t+ ` REFERENCES \"${outputTargetTableName}\" (\"${outputTargetColumnName}\")`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {IdColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlIdColumnCodeGenerator';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\n\nexport default class OracleIdColumnCodeGenerator implements SqlIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identityColumnName: string): IdColumnCode {\n\n\t\tconst outputIdentityColumnName = this.columnNameCaseConverter.convertCase(identityColumnName);\n\n\t\tconst sequenceName = this.getSequenceName(outputTableName);\n\n\t\treturn {\n\t\t\tcreateSequenceLine: this.generateCreateSequenceLine(sequenceName),\n\t\t\tcolumnLine: this.generateIdColumnDeclarationLine(outputIdentityColumnName, sequenceName),\n\t\t\tpkConstraintLine: this.createPrimaryKeyConstraint(outputTableName, outputIdentityColumnName)\n\t\t};\n\n\t}\n\n\tprivate getSequenceName(outputTableName: string): string {\n\t\treturn `${outputTableName}_SEQ`;\n\t}\n\n\tprivate generateCreateSequenceLine(sequenceName: string): string {\n\t\treturn `CREATE SEQUENCE \"${sequenceName}\" START WITH 1;`;\n\t}\n\n\tprivate generateIdColumnDeclarationLine(outputIdentityColumnName: string, sequenceName: string): string {\n\t\tconst sqlType = this.typeResolver.resolveSqlType(EntityPropertyType.IDENTITY);\n\t\treturn `\"${outputIdentityColumnName}\" ${sqlType} NOT NULL DEFAULT \"${sequenceName}\".nextval`;\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, outputIdentityColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_PK\" PRIMARY KEY (\"${outputIdentityColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport OracleDialectConfig, {PartialOracleDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/config/OracleDialectConfig';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\n\nexport class OracleDialectConfigManager\n\t\textends AbstractComponentConfigManager<OracleDialectConfig, PartialOracleDialectConfig> {\n\n\tgetDefaultConfig(): OracleDialectConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.TEXT]: 'VARCHAR2',\n\t\t\t\t[EntityPropertyType.LONG]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.INT]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.SHORT]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'NUMBER',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'NUMBER(1, 0)',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.BLOB]: 'BLOB'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_UNDERSCORE,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.UPPER_UNDERSCORE,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: OracleDialectConfig, partialConfig?: PartialOracleDialectConfig): OracleDialectConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<OracleDialectConfig> {\n\t\treturn JsonAdapters.object<OracleDialectConfig>({\n\t\t\ttableNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'UPPER_UNDERSCORE'),\n\t\t\tcolumnNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'UPPER_UNDERSCORE')\n\t\t});\n\t}\n\n}\n\nconst oracleDialectConfigManager = new OracleDialectConfigManager();\nexport default oracleDialectConfigManager;\n","import OracleDialectConfig from './OracleDialectConfig';\nimport oracleDialectConfigManager, {OracleDialectConfigManager} from './OracleDialectConfigManager';\n\nexport {\n\tOracleDialectConfig,\n\tOracleDialectConfigManager,\n\toracleDialectConfigManager\n};\n","import OracleDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/OracleDialect';\n\nexport * from './config/exports';\n\nexport {\n\tOracleDialect\n};\n","import SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {\n\tForeignKeyColumnCode,\n\tIdColumnCode,\n\tRegularColumnCode\n} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport PostgresqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlColumnCodeGenerator';\nimport PostgresqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlIdColumnCodeGenerator';\nimport PostgresqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlForeignColumnCodeGenerator';\nimport {PartialPostgresqlDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/config/PostgresqlDialectConfig';\nimport postgresqlDialectConfigManager\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/config/PostgresqlDialectConfigManager';\n\nexport default class PostgresqlDialect implements SqlDialect {\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: PostgresqlColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: PostgresqlIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: PostgresqlForeignColumnCodeGenerator;\n\n\tconstructor(config?: PartialPostgresqlDialectConfig) {\n\n\t\tconst fullConfig = postgresqlDialectConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.columnNameCaseFormat\n\t\t);\n\n\t\tconst sqlTypeResolver = new SqlTypeResolver(fullConfig.typeBindings);\n\n\t\tthis.columnCodeGenerator = new PostgresqlColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new PostgresqlIdColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new PostgresqlForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tgetScriptStartCode() {\n\t\treturn '';\n\t}\n\n\tgetScriptEndCode() {\n\t\treturn '';\n\t}\n\n\tmustUseAlterTableForForeignKeys(): boolean {\n\t\treturn true;\n\t}\n\n\tgetCreateTableStartCode(tableName: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `CREATE TABLE \"${outputTableName}\" (`;\n\t}\n\n\tgetCreateTableEndCode() {\n\t\treturn ');';\n\t}\n\n\tgetIdColumnCode(tableName: string, identityColumnName: string): IdColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, identityColumnName);\n\t}\n\n\tgetColumnCode(tableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\t}\n\n\tgetForeignColumnCode(tableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\t}\n\n\tgetAlterTableAddCode(tableName: string, constraintCode: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `ALTER TABLE \"${outputTableName}\" ADD ${constraintCode};`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/converter/database/model/database-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {RegularColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class PostgresqlColumnCodeGenerator implements SqlColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: OmitSource<TableColumnDescriptor>): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: OmitSource<TableColumnDescriptor>): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\"${outputColumnName}\"`,\n\t\t\tthis.generatePostgresqlTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generatePostgresqlTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst postgresqlType = this.typeResolver.resolveSqlType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn postgresqlType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_unique\" UNIQUE (\"${outputColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport PostgresqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/column/PostgresqlColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {ForeignKeyColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlForeignColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class PostgresqlForeignColumnCodeGenerator implements SqlForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: PostgresqlColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: OmitSource<TableReferenceDescriptor>): OmitSource<TableColumnDescriptor> {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTITY,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentityColumnName);\n\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_fk\" FOREIGN KEY (\"${outputColumnName}\")`\n\t\t\t\t+ ` REFERENCES \"${outputTargetTableName}\" (\"${outputTargetColumnName}\")`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {IdColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlIdColumnCodeGenerator';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\n\nexport default class PostgresqlIdColumnCodeGenerator implements SqlIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identityColumnName: string): IdColumnCode {\n\n\t\tconst outputIdentityColumnName = this.columnNameCaseConverter.convertCase(identityColumnName);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateIdColumnDeclarationLine(outputIdentityColumnName),\n\t\t\tpkConstraintLine: this.createPrimaryKeyConstraint(outputTableName, outputIdentityColumnName)\n\t\t};\n\n\t}\n\n\tprivate generateIdColumnDeclarationLine(outputIdentityColumnName: string): string {\n\t\tconst sqlType = this.typeResolver.resolveSqlType(EntityPropertyType.IDENTITY);\n\t\treturn `\"${outputIdentityColumnName}\" ${sqlType} NOT NULL GENERATED ALWAYS AS IDENTITY`;\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, outputIdentityColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_pk\" PRIMARY KEY (\"${outputIdentityColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport PostgresqlDialectConfig, {PartialPostgresqlDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/config/PostgresqlDialectConfig';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\n\nexport class PostgresqlDialectConfigManager\n\t\textends AbstractComponentConfigManager<PostgresqlDialectConfig, PartialPostgresqlDialectConfig> {\n\n\tgetDefaultConfig(): PostgresqlDialectConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.TEXT]: 'VARCHAR',\n\t\t\t\t[EntityPropertyType.LONG]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.INT]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.SHORT]: 'SMALLINT',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'DECIMAL',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'BOOLEAN',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIME',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'TIMESTAMP',\n\t\t\t\t[EntityPropertyType.BLOB]: 'BYTEA'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.LOWER_UNDERSCORE,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.LOWER_UNDERSCORE,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: PostgresqlDialectConfig, partialConfig?: PartialPostgresqlDialectConfig): PostgresqlDialectConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<PostgresqlDialectConfig> {\n\t\treturn JsonAdapters.object<PostgresqlDialectConfig>({\n\t\t\ttableNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'LOWER_UNDERSCORE'),\n\t\t\tcolumnNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'LOWER_UNDERSCORE')\n\t\t});\n\t}\n\n}\n\nconst postgresqlDialectConfigManager = new PostgresqlDialectConfigManager();\nexport default postgresqlDialectConfigManager;\n","import PostgresqlDialectConfig from './PostgresqlDialectConfig';\nimport postgresqlDialectConfigManager, {PostgresqlDialectConfigManager} from './PostgresqlDialectConfigManager';\n\nexport {\n\tPostgresqlDialectConfig,\n\tPostgresqlDialectConfigManager,\n\tpostgresqlDialectConfigManager\n};\n","import PostgresqlDialect\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/postgresql/PostgresqlDialect';\n\nexport * from './config/exports';\n\nexport {\n\tPostgresqlDialect\n};\n","import SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {\n\tForeignKeyColumnCode,\n\tIdColumnCode,\n\tRegularColumnCode\n} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport SqliteColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteColumnCodeGenerator';\nimport SqliteIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteIdColumnCodeGenerator';\nimport SqliteForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteForeignColumnCodeGenerator';\nimport {PartialSqliteDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/config/SqliteDialectConfig';\nimport sqliteDialectConfigManager\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/config/SqliteDialectConfigManager';\n\nexport default class SqliteDialect implements SqlDialect {\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: SqliteColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: SqliteIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: SqliteForeignColumnCodeGenerator;\n\n\tconstructor(config?: PartialSqliteDialectConfig) {\n\n\t\tconst fullConfig = sqliteDialectConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.columnNameCaseFormat\n\t\t);\n\n\t\tconst sqlTypeResolver = new SqlTypeResolver(fullConfig.typeBindings);\n\n\t\tthis.columnCodeGenerator = new SqliteColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new SqliteIdColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new SqliteForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tgetScriptStartCode() {\n\t\treturn 'PRAGMA foreign_keys = OFF;';\n\t}\n\n\tgetScriptEndCode() {\n\t\treturn 'PRAGMA foreign_keys = ON;';\n\t}\n\n\tmustUseAlterTableForForeignKeys(): boolean {\n\t\treturn false;\n\t}\n\n\tgetCreateTableStartCode(tableName: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `CREATE TABLE \"${outputTableName}\" (`;\n\t}\n\n\tgetCreateTableEndCode() {\n\t\treturn ');';\n\t}\n\n\tgetIdColumnCode(tableName: string, identityColumnName: string): IdColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, identityColumnName);\n\t}\n\n\tgetColumnCode(tableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\t}\n\n\tgetForeignColumnCode(tableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\t}\n\n\t/* istanbul ignore next */\n\tgetAlterTableAddCode(tableName: string, constraintCode: string): string {\n\t\tthrow new Error('Unsupported feature');\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/converter/database/model/database-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {RegularColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class SqliteColumnCodeGenerator implements SqlColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: OmitSource<TableColumnDescriptor>): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: OmitSource<TableColumnDescriptor>): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\"${outputColumnName}\"`,\n\t\t\tthis.generateSqliteTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateSqliteTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst sqliteType = this.typeResolver.resolveSqlType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn sqliteType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_unique\" UNIQUE (\"${outputColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {ForeignKeyColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlForeignColumnCodeGenerator';\nimport SqliteColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/column/SqliteColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class SqliteForeignColumnCodeGenerator implements SqlForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: SqliteColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: OmitSource<TableReferenceDescriptor>): OmitSource<TableColumnDescriptor> {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTITY,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentityColumnName);\n\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_fk\" FOREIGN KEY (\"${outputColumnName}\")`\n\t\t\t\t+ ` REFERENCES \"${outputTargetTableName}\" (\"${outputTargetColumnName}\")`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {IdColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlIdColumnCodeGenerator';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\n\nexport default class SqliteIdColumnCodeGenerator implements SqlIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identityColumnName: string): IdColumnCode {\n\n\t\tconst outputIdentityColumnName = this.columnNameCaseConverter.convertCase(identityColumnName);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateIdColumnDeclarationLine(outputIdentityColumnName)\n\t\t};\n\n\t}\n\n\tprivate generateIdColumnDeclarationLine(outputIdentityColumnName: string): string {\n\t\tconst sqlType = this.typeResolver.resolveSqlType(EntityPropertyType.IDENTITY);\n\t\treturn `\"${outputIdentityColumnName}\" ${sqlType} NOT NULL PRIMARY KEY AUTOINCREMENT`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport SqliteDialectConfig, {PartialSqliteDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/config/SqliteDialectConfig';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\n\nexport class SqliteDialectConfigManager\n\t\textends AbstractComponentConfigManager<SqliteDialectConfig, PartialSqliteDialectConfig> {\n\n\tgetDefaultConfig(): SqliteDialectConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.TEXT]: 'TEXT',\n\t\t\t\t[EntityPropertyType.LONG]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.INT]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.SHORT]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'REAL',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.DATE]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.TIME]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'INTEGER',\n\t\t\t\t[EntityPropertyType.BLOB]: 'BLOB'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.LOWER_UNDERSCORE,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.LOWER_UNDERSCORE,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: SqliteDialectConfig, partialConfig?: PartialSqliteDialectConfig): SqliteDialectConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<SqliteDialectConfig> {\n\t\treturn JsonAdapters.object<SqliteDialectConfig>({\n\t\t\ttableNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'LOWER_UNDERSCORE'),\n\t\t\tcolumnNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'LOWER_UNDERSCORE')\n\t\t});\n\t}\n\n}\n\nconst sqliteDialectConfigManager = new SqliteDialectConfigManager();\nexport default sqliteDialectConfigManager;\n","import SqliteDialectConfig from './SqliteDialectConfig';\nimport sqliteDialectConfigManager, {SqliteDialectConfigManager} from './SqliteDialectConfigManager';\n\nexport {\n\tSqliteDialectConfig,\n\tSqliteDialectConfigManager,\n\tsqliteDialectConfigManager\n};\n","import SqliteDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlite/SqliteDialect';\n\nexport * from './config/exports';\n\nexport {\n\tSqliteDialect\n};\n","import SqlDialect from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlDialect';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport SqlServerColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerColumnCodeGenerator';\nimport SqlServerIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerIdColumnCodeGenerator';\nimport SqlServerForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerForeignColumnCodeGenerator';\nimport {PartialSqlServerDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/config/SqlServerDialectConfig';\nimport sqlServerDialectConfigManager\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/config/SqlServerDialectConfigManager';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {\n\tForeignKeyColumnCode,\n\tIdColumnCode,\n\tRegularColumnCode\n} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\n\nexport default class SqlServerDialect implements SqlDialect {\n\n\tprivate readonly tableNameCaseConverter: CaseConverter;\n\n\tprivate readonly columnCodeGenerator: SqlServerColumnCodeGenerator;\n\tprivate readonly idColumnCodeGenerator: SqlServerIdColumnCodeGenerator;\n\tprivate readonly foreignColumnCodeGenerator: SqlServerForeignColumnCodeGenerator;\n\n\tconstructor(config?: PartialSqlServerDialectConfig) {\n\n\t\tconst fullConfig = sqlServerDialectConfigManager.mergeWithDefaultConfig(config);\n\n\t\tthis.tableNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.tableNameCaseFormat\n\t\t);\n\n\t\tconst columnNameCaseConverter = new CaseConverter(\n\t\t\t\tStandardCaseFormats.LOWER_CAMEL,\n\t\t\t\tfullConfig.columnNameCaseFormat\n\t\t);\n\n\t\tconst sqlTypeResolver = new SqlTypeResolver(fullConfig.typeBindings);\n\n\t\tthis.columnCodeGenerator = new SqlServerColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.idColumnCodeGenerator = new SqlServerIdColumnCodeGenerator(\n\t\t\t\tsqlTypeResolver,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t\tthis.foreignColumnCodeGenerator = new SqlServerForeignColumnCodeGenerator(\n\t\t\t\tthis.columnCodeGenerator,\n\t\t\t\tthis.tableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter\n\t\t);\n\n\t}\n\n\tgetScriptStartCode() {\n\t\treturn '';\n\t}\n\n\tgetScriptEndCode() {\n\t\treturn '';\n\t}\n\n\tmustUseAlterTableForForeignKeys(): boolean {\n\t\treturn true;\n\t}\n\n\tgetCreateTableStartCode(tableName: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `CREATE TABLE \"${outputTableName}\" (`;\n\t}\n\n\tgetCreateTableEndCode() {\n\t\treturn ');';\n\t}\n\n\tgetIdColumnCode(tableName: string, identityColumnName: string): IdColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.idColumnCodeGenerator.generateIdColumnCode(outputTableName, identityColumnName);\n\t}\n\n\tgetColumnCode(tableName: string, column: TableColumnDescriptor): RegularColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.columnCodeGenerator.generateColumnCode(outputTableName, column);\n\t}\n\n\tgetForeignColumnCode(tableName: string, reference: TableReferenceDescriptor): ForeignKeyColumnCode {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn this.foreignColumnCodeGenerator.generateForeignColumnCode(outputTableName, reference);\n\t}\n\n\tgetAlterTableAddCode(tableName: string, constraintCode: string) {\n\t\tconst outputTableName = this.tableNameCaseConverter.convertCase(tableName);\n\t\treturn `ALTER TABLE \"${outputTableName}\" ADD ${constraintCode};`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {TableColumnDescriptor} from '@/erdiagram/converter/database/model/database-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\nimport {RegularColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class SqlServerColumnCodeGenerator implements SqlColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateColumnCode(outputTableName: string, column: OmitSource<TableColumnDescriptor>): RegularColumnCode {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(column.name);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateColumnDeclarationLine(outputColumnName, column),\n\t\t\tuniqueConstraintLine: column.unique ? this.generateUniqueConstraintLine(outputTableName, outputColumnName) : undefined\n\t\t};\n\n\t}\n\n\tprivate generateColumnDeclarationLine(outputColumnName: string, column: OmitSource<TableColumnDescriptor>): string {\n\n\t\tconst {\n\t\t\tnotNull,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = column;\n\n\t\tconst lineParts: string[] = [\n\t\t\t`\"${outputColumnName}\"`,\n\t\t\tthis.generateSqlServerTypeDeclaration(type, length)\n\t\t];\n\n\t\tif (notNull) {\n\t\t\tlineParts.push('NOT NULL');\n\t\t}\n\n\t\treturn lineParts.join(' ');\n\n\t}\n\n\tprivate generateSqlServerTypeDeclaration(type: EntityPropertyType, length: number[]) {\n\n\t\tconst sqlServerType = this.typeResolver.resolveSqlType(type);\n\t\tconst lengthCode = this.generateLengthCode(length);\n\n\t\treturn sqlServerType + lengthCode;\n\n\t}\n\n\tprivate generateLengthCode(length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn `(${length.join(', ')})`;\n\n\t}\n\n\tprivate generateUniqueConstraintLine(outputTableName: string, outputColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_unique\" UNIQUE (\"${outputColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tTableColumnDescriptor,\n\tTableReferenceDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport SqlServerColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/column/SqlServerColumnCodeGenerator';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {ForeignKeyColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlForeignColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlForeignColumnCodeGenerator';\nimport {OmitSource} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class SqlServerForeignColumnCodeGenerator implements SqlForeignColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly columnCodeGenerator: SqlServerColumnCodeGenerator,\n\t\t\tprivate readonly tableNameCaseConverter: CaseConverter,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateForeignColumnCode(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>): ForeignKeyColumnCode {\n\n\t\tconst columnDescriptor = this.createForeignKeyColumnDescriptor(reference);\n\n\t\tconst {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine\n\t\t} = this.columnCodeGenerator.generateColumnCode(outputTableName, columnDescriptor);\n\n\t\treturn {\n\t\t\tcolumnLine,\n\t\t\tuniqueConstraintLine,\n\t\t\tfkConstraintLine: this.createForeignKeyConstraint(outputTableName, reference)\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyColumnDescriptor(reference: OmitSource<TableReferenceDescriptor>): OmitSource<TableColumnDescriptor> {\n\n\t\tconst {\n\t\t\tcolumnName,\n\t\t\tnotNull,\n\t\t\tunique\n\t\t} = reference;\n\n\t\treturn {\n\t\t\tname: columnName,\n\t\t\ttype: EntityPropertyType.IDENTITY,\n\t\t\tlength: [],\n\t\t\tnotNull,\n\t\t\tunique\n\t\t};\n\n\t}\n\n\tprivate createForeignKeyConstraint(outputTableName: string, reference: OmitSource<TableReferenceDescriptor>) {\n\n\t\tconst outputColumnName = this.columnNameCaseConverter.convertCase(reference.columnName);\n\n\t\tconst outputTargetTableName = this.tableNameCaseConverter.convertCase(reference.targetTableName);\n\t\tconst outputTargetColumnName = this.columnNameCaseConverter.convertCase(reference.targetTableIdentityColumnName);\n\n\t\treturn `CONSTRAINT \"${outputTableName}_${outputColumnName}_fk\" FOREIGN KEY (\"${outputColumnName}\")`\n\t\t\t\t+ ` REFERENCES \"${outputTargetTableName}\" (\"${outputTargetColumnName}\")`;\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {IdColumnCode} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/sql-script-types';\nimport SqlIdColumnCodeGenerator\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/column/SqlIdColumnCodeGenerator';\nimport SqlTypeResolver from '@/erdiagram/converter/database/source-code-generator/sql/dialect/common/SqlTypeResolver';\n\nexport default class SqlServerIdColumnCodeGenerator implements SqlIdColumnCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly typeResolver: SqlTypeResolver,\n\t\t\tprivate readonly columnNameCaseConverter: CaseConverter\n\t) {\n\n\t}\n\n\tpublic generateIdColumnCode(outputTableName: string, identityColumnName: string): IdColumnCode {\n\n\t\tconst outputIdentityColumnName = this.columnNameCaseConverter.convertCase(identityColumnName);\n\n\t\treturn {\n\t\t\tcolumnLine: this.generateIdColumnDeclarationLine(outputIdentityColumnName),\n\t\t\tpkConstraintLine: this.createPrimaryKeyConstraint(outputTableName, outputIdentityColumnName)\n\t\t};\n\n\t}\n\n\tprivate generateIdColumnDeclarationLine(outputIdentityColumnName: string): string {\n\t\tconst sqlType = this.typeResolver.resolveSqlType(EntityPropertyType.IDENTITY);\n\t\treturn `\"${outputIdentityColumnName}\" ${sqlType} NOT NULL IDENTITY(1, 1)`;\n\t}\n\n\tprivate createPrimaryKeyConstraint(outputTableName: string, outputIdentityColumnName: string) {\n\t\treturn `CONSTRAINT \"${outputTableName}_pk\" PRIMARY KEY (\"${outputIdentityColumnName}\")`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport SqlServerDialectConfig, {PartialSqlServerDialectConfig} from '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/config/SqlServerDialectConfig';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\nimport OracleDialectConfig\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/oracle/config/OracleDialectConfig';\n\nexport class SqlServerDialectConfigManager\n\t\textends AbstractComponentConfigManager<SqlServerDialectConfig, PartialSqlServerDialectConfig> {\n\n\tgetDefaultConfig(): SqlServerDialectConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.TEXT]: 'NVARCHAR',\n\t\t\t\t[EntityPropertyType.LONG]: 'BIGINT',\n\t\t\t\t[EntityPropertyType.INT]: 'INT',\n\t\t\t\t[EntityPropertyType.SHORT]: 'SMALLINT',\n\t\t\t\t[EntityPropertyType.DECIMAL]: 'DECIMAL',\n\t\t\t\t[EntityPropertyType.BOOLEAN]: 'BIT',\n\t\t\t\t[EntityPropertyType.DATE]: 'DATE',\n\t\t\t\t[EntityPropertyType.TIME]: 'TIME',\n\t\t\t\t[EntityPropertyType.DATETIME]: 'DATETIME2',\n\t\t\t\t[EntityPropertyType.BLOB]: 'VARBINARY(MAX)'\n\t\t\t},\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: SqlServerDialectConfig, partialConfig?: PartialSqlServerDialectConfig): SqlServerDialectConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<SqlServerDialectConfig> {\n\t\treturn JsonAdapters.object<OracleDialectConfig>({\n\t\t\ttableNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'UPPER_CAMEL'),\n\t\t\tcolumnNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'UPPER_CAMEL')\n\t\t});\n\t}\n\n}\n\nconst sqlServerDialectConfigManager = new SqlServerDialectConfigManager();\nexport default sqlServerDialectConfigManager;\n","import SqlServerDialectConfig from './SqlServerDialectConfig';\nimport sqlServerDialectConfigManager, {SqlServerDialectConfigManager} from './SqlServerDialectConfigManager';\n\nexport {\n\tSqlServerDialectConfig,\n\tSqlServerDialectConfigManager,\n\tsqlServerDialectConfigManager\n};\n","import SqlServerDialect\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/dialect/sqlserver/SqlServerDialect';\n\nexport * from './config/exports';\n\nexport {\n\tSqlServerDialect\n};\n","import DatabaseModelToSqlCodeConverter\n\tfrom '@/erdiagram/converter/database/source-code-generator/sql/DatabaseModelToSqlCodeConverter';\n\nexport * from './dialect/exports';\n\nexport {\n\tDatabaseModelToSqlCodeConverter\n};\n","export * from './nomnoml/exports';\nexport * from './plantuml/exports';\n","import {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport NomnomlEntityCodeGenerator from '@/erdiagram/converter/diagram/nomnoml/entity/NomnomlEntityCodeGenerator';\nimport NomnomlRelationshipCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipCodeGenerator';\nimport EntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/EntityRelationshipModelSourceCodeGenerator';\nimport NomnomlEntityRelationshipModelSourceCodeGeneratorConfig\n\tfrom '@/erdiagram/converter/diagram/nomnoml/config/NomnomlEntityRelationshipModelSourceCodeGeneratorConfig';\nimport nomnomlEntityRelationshipModelToDiagramCodeConverterConfigManager\n\tfrom '@/erdiagram/converter/diagram/nomnoml/config/NomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager';\nimport NomnomlDirectivesCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/directive/NomnomlDirectivesCodeGenerator';\n\nexport default class NomnomlEntityRelationshipModelSourceCodeGenerator implements EntityRelationshipModelSourceCodeGenerator {\n\n\tprivate readonly config: NomnomlEntityRelationshipModelSourceCodeGeneratorConfig;\n\n\tprivate readonly entityCodeGenerator = new NomnomlEntityCodeGenerator();\n\tprivate readonly relationshipCodeGenerator = new NomnomlRelationshipCodeGenerator();\n\tprivate readonly directivesCodeGenerator = new NomnomlDirectivesCodeGenerator();\n\n\tconstructor(config?: NomnomlEntityRelationshipModelSourceCodeGeneratorConfig) {\n\t\tthis.config = nomnomlEntityRelationshipModelToDiagramCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\t}\n\n\tpublic generateSourceCode(model: EntityRelationshipModel): string {\n\t\treturn [\n\t\t\t...model.entities.map(entity => this.entityCodeGenerator.generateEntityCode(entity)),\n\t\t\t...model.relationships.map(relationship => this.relationshipCodeGenerator.generateRelationshipCode(relationship)),\n\t\t\tthis.directivesCodeGenerator.generateDirectivesCode(this.config)\n\t\t].join('\\n\\n');\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport NomnomlEntityRelationshipModelSourceCodeGeneratorConfig\n\tfrom '@/erdiagram/converter/diagram/nomnoml/config/NomnomlEntityRelationshipModelSourceCodeGeneratorConfig';\n\nexport class NomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager\n\t\textends AbstractComponentConfigManager<NomnomlEntityRelationshipModelSourceCodeGeneratorConfig, NomnomlEntityRelationshipModelSourceCodeGeneratorConfig> {\n\n\tgetDefaultConfig(): NomnomlEntityRelationshipModelSourceCodeGeneratorConfig {\n\t\treturn {\n\t\t\tarrowSize: 1,\n\t\t\tbendSize: undefined,\n\t\t\tdirection: undefined,\n\t\t\tgutter: undefined,\n\t\t\tedgeMargin: undefined,\n\t\t\tgravity: 1.5,\n\t\t\tedges: undefined,\n\t\t\tbackground: 'transparent',\n\t\t\tfill: '#fefece',\n\t\t\tfillArrows: undefined,\n\t\t\tfont: undefined,\n\t\t\tfontSize: undefined,\n\t\t\tleading: undefined,\n\t\t\tlineWidth: 1,\n\t\t\tpadding: undefined,\n\t\t\tspacing: undefined,\n\t\t\tstroke: '#333333',\n\t\t\ttitle: undefined,\n\t\t\tzoom: undefined,\n\t\t\tacyclicer: undefined,\n\t\t\tranker: 'longest-path'\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: NomnomlEntityRelationshipModelSourceCodeGeneratorConfig, partialConfig?: Partial<NomnomlEntityRelationshipModelSourceCodeGeneratorConfig>): NomnomlEntityRelationshipModelSourceCodeGeneratorConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n}\n\nconst nomnomlEntityRelationshipModelToDiagramCodeConverterConfigManager = new NomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager();\nexport default nomnomlEntityRelationshipModelToDiagramCodeConverterConfigManager;\n","import nomnomlEntityRelationshipModelToDiagramCodeConverterConfigManager, {NomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager} from './NomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager';\nimport NomnomlEntityRelationshipModelSourceCodeGeneratorConfig\n\tfrom '@/erdiagram/converter/diagram/nomnoml/config/NomnomlEntityRelationshipModelSourceCodeGeneratorConfig';\n\nexport {\n\tNomnomlEntityRelationshipModelSourceCodeGeneratorConfig,\n\tNomnomlEntityRelationshipModelSourceCodeGeneratorConfigManager,\n\tnomnomlEntityRelationshipModelToDiagramCodeConverterConfigManager\n};\n","import NomnomlEntityRelationshipModelSourceCodeGeneratorConfig\n\tfrom '@/erdiagram/converter/diagram/nomnoml/config/NomnomlEntityRelationshipModelSourceCodeGeneratorConfig';\n\nexport default class NomnomlDirectivesCodeGenerator {\n\n\tpublic generateDirectivesCode(config: NomnomlEntityRelationshipModelSourceCodeGeneratorConfig): string {\n\t\treturn Object.entries(config)\n\t\t\t\t.filter(([key, value]) => value != null && value !== '')\n\t\t\t\t.map(([key, value]) => `#${key}: ${value}`)\n\t\t\t\t.join('\\n');\n\t}\n\n}\n","import {EntityDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport NomnomlEntityIdentityPropertyCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/entity/NomnomlEntityIdentityPropertyCodeGenerator';\nimport NomnomlEntityPropertyCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/entity/NomnomlEntityPropertyCodeGenerator';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\n\nexport default class NomnomlEntityCodeGenerator {\n\n\tprivate readonly entityIdentityPropertyCodeGenerator = new NomnomlEntityIdentityPropertyCodeGenerator();\n\tprivate readonly entityPropertyCodeGenerator = new NomnomlEntityPropertyCodeGenerator();\n\n\tpublic generateEntityCode(entity: EntityDescriptor): string {\n\n\t\tconst propertiesCode = this.generateEntityPropertiesCode(entity);\n\n\t\tif (!propertiesCode) {\n\t\t\treturn `[${entity.name}]`;\n\t\t}\n\n\t\treturn [\n\t\t\t`[${entity.name}|`,\n\t\t\tpropertiesCode,\n\t\t\t']'\n\t\t].join('\\n');\n\n\t}\n\n\tprivate generateEntityPropertiesCode(entity: EntityDescriptor): string {\n\n\t\tconst {\n\t\t\tidentityPropertyName,\n\t\t\tproperties\n\t\t} = entity;\n\n\t\tconst propertiesCode = properties.map(property => this.entityPropertyCodeGenerator.generateEntityPropertyCode(property));\n\n\t\tif (identityPropertyName) {\n\t\t\tpropertiesCode.unshift(this.entityIdentityPropertyCodeGenerator.generateEntityIdentityPropertyCode(identityPropertyName));\n\t\t}\n\n\t\treturn indentLines(propertiesCode).join('\\n');\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class NomnomlEntityIdentityPropertyCodeGenerator {\n\n\tpublic generateEntityIdentityPropertyCode(identityPropertyName: string): string {\n\t\treturn `${identityPropertyName}: ${EntityPropertyType.IDENTITY}`;\n\t}\n\n}\n","import {EntityPropertyDescriptor, EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class NomnomlEntityPropertyCodeGenerator {\n\n\tpublic generateEntityPropertyCode(property: EntityPropertyDescriptor): string {\n\n\t\tconst {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tlength,\n\t\t\toptional,\n\t\t\tunique\n\t\t} = property;\n\n\t\tconst typeWithLengthCode = this.getTypeWithLengthCode(type, length);\n\n\t\tconst modifiersCode = this.getModifiersCode(optional, unique);\n\n\t\treturn `${name}${modifiersCode}: ${typeWithLengthCode}`;\n\n\t}\n\n\tprivate getTypeWithLengthCode(type: EntityPropertyType, length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn type;\n\t\t}\n\n\t\treturn `${type}(${length.join(', ')})`;\n\n\t}\n\n\tprivate getModifiersCode(optional: boolean, unique: boolean) {\n\n\t\tconst optionalModifierCode = optional ? '?' : '';\n\t\tconst uniqueModifierCode = unique ? '!' : '';\n\n\t\treturn optionalModifierCode + uniqueModifierCode;\n\n\t}\n\n}\n","import NomnomlEntityRelationshipModelSourceCodeGenerator\n\tfrom './NomnomlEntityRelationshipModelSourceCodeGenerator';\n\nexport * from './config/exports';\n\nexport {\n\tNomnomlEntityRelationshipModelSourceCodeGenerator\n};\n","import {RelationshipDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport NomnomlRelationshipDirectionCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipDirectionCodeGenerator';\nimport NomnomlRelationshipCardinalityCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipCardinalityCodeGenerator';\n\nexport default class NomnomlNamedRelationshipCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly relationshipDirectionCodeGenerator: NomnomlRelationshipDirectionCodeGenerator,\n\t\t\tprivate readonly relationshipCardinalityCodeGenerator: NomnomlRelationshipCardinalityCodeGenerator\n\t) {\n\n\t}\n\n\tpublic generateNamedRelationshipCode(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\tleftMember,\n\t\t\trightMember,\n\t\t\tdirection,\n\t\t\trelationshipName\n\t\t} = relationship;\n\n\t\tconst leftMemberCardinalityCode = this.relationshipCardinalityCodeGenerator.generateCardinalityCode(leftMember.cardinality);\n\t\tconst rightMemberCardinalityCode = this.relationshipCardinalityCodeGenerator.generateCardinalityCode(rightMember.cardinality);\n\n\t\tconst leftSideDirectionCode = this.relationshipDirectionCodeGenerator.generateLeftSideDirectionCode(direction);\n\t\tconst rightSideDirectionCode = this.relationshipDirectionCodeGenerator.generateRightSideDirectionCode(direction);\n\n\t\treturn [\n\t\t\t`[<label>${relationshipName}]`,\n\t\t\t`[${leftMember.entity}] ${leftMemberCardinalityCode}${leftSideDirectionCode} [${relationshipName}]`,\n\t\t\t`[${relationshipName}] ${rightSideDirectionCode}${rightMemberCardinalityCode} [${rightMember.entity}]`\n\t\t].join('\\n');\n\n\t}\n\n}\n","import {Cardinality} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class NomnomlRelationshipCardinalityCodeGenerator {\n\n\tpublic generateCardinalityCode(cardinality: Cardinality): string {\n\t\tswitch (cardinality) {\n\t\t\tcase Cardinality.ZERO_OR_ONE:\n\t\t\t\treturn '0..1';\n\t\t\tcase Cardinality.ONE:\n\t\t\t\treturn '1';\n\t\t\tcase Cardinality.MANY:\n\t\t\t\treturn '*';\n\t\t}\n\t}\n\n}\n","import {RelationshipDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport NomnomlRelationshipDirectionCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipDirectionCodeGenerator';\nimport NomnomlRelationshipCardinalityCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipCardinalityCodeGenerator';\nimport NomnomlUnnamedRelationshipCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlUnnamedRelationshipCodeGenerator';\nimport NomnomlNamedRelationshipCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlNamedRelationshipCodeGenerator';\n\nexport default class NomnomlRelationshipCodeGenerator {\n\n\tprivate readonly relationshipDirectionCodeGenerator = new NomnomlRelationshipDirectionCodeGenerator();\n\tprivate readonly relationshipCardinalityCodeGenerator = new NomnomlRelationshipCardinalityCodeGenerator();\n\n\tprivate readonly namedRelationshipCodeGenerator = new NomnomlNamedRelationshipCodeGenerator(\n\t\t\tthis.relationshipDirectionCodeGenerator,\n\t\t\tthis.relationshipCardinalityCodeGenerator\n\t);\n\n\tprivate readonly unnamedRelationshipCodeGenerator = new NomnomlUnnamedRelationshipCodeGenerator(\n\t\t\tthis.relationshipDirectionCodeGenerator,\n\t\t\tthis.relationshipCardinalityCodeGenerator\n\t);\n\n\tpublic generateRelationshipCode(relationship: RelationshipDescriptor): string {\n\t\tif (relationship.relationshipName) {\n\t\t\treturn this.namedRelationshipCodeGenerator.generateNamedRelationshipCode(relationship);\n\t\t} else {\n\t\t\treturn this.unnamedRelationshipCodeGenerator.generateUnnamedRelationshipCode(relationship);\n\t\t}\n\t}\n\n}\n","import {Direction} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class NomnomlRelationshipDirectionCodeGenerator {\n\n\tpublic generateDirectionCode(direction: Direction): string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.LEFT_TO_RIGHT:\n\t\t\t\treturn '->';\n\t\t\tcase Direction.RIGHT_TO_LEFT:\n\t\t\t\treturn '<-';\n\t\t\tcase Direction.BIDIRECTIONAL:\n\t\t\t\treturn '<->';\n\t\t}\n\t}\n\n\tpublic generateLeftSideDirectionCode(direction: Direction): string {\n\t\treturn [Direction.RIGHT_TO_LEFT, Direction.BIDIRECTIONAL].includes(direction) ? '<-' : '-';\n\t}\n\n\tpublic generateRightSideDirectionCode(direction: Direction): string {\n\t\treturn [Direction.LEFT_TO_RIGHT, Direction.BIDIRECTIONAL].includes(direction) ? '->' : '-';\n\t}\n\n}\n","import {RelationshipDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport NomnomlRelationshipDirectionCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipDirectionCodeGenerator';\nimport NomnomlRelationshipCardinalityCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/nomnoml/relationship/NomnomlRelationshipCardinalityCodeGenerator';\n\nexport default class NomnomlUnnamedRelationshipCodeGenerator {\n\n\tconstructor(\n\t\t\tprivate readonly relationshipDirectionCodeGenerator: NomnomlRelationshipDirectionCodeGenerator,\n\t\t\tprivate readonly relationshipCardinalityCodeGenerator: NomnomlRelationshipCardinalityCodeGenerator\n\t) {\n\n\t}\n\n\tpublic generateUnnamedRelationshipCode(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\tleftMember,\n\t\t\trightMember,\n\t\t\tdirection\n\t\t} = relationship;\n\n\t\tconst leftMemberCardinalityCode = this.relationshipCardinalityCodeGenerator.generateCardinalityCode(leftMember.cardinality);\n\t\tconst rightMemberCardinalityCode = this.relationshipCardinalityCodeGenerator.generateCardinalityCode(rightMember.cardinality);\n\n\t\tconst directionCode = this.relationshipDirectionCodeGenerator.generateDirectionCode(direction);\n\t\treturn `[${leftMember.entity}] ${leftMemberCardinalityCode}${directionCode}${rightMemberCardinalityCode} [${rightMember.entity}]`;\n\n\t}\n\n}\n","import {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport EntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/EntityRelationshipModelSourceCodeGenerator';\nimport PlantUmlEntityCodeGenerator from '@/erdiagram/converter/diagram/plantuml/entity/PlantUmlEntityCodeGenerator';\nimport PlantUmlRelationshipCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/plantuml/relationship/PlantUmlRelationshipCodeGenerator';\n\nexport default class PlantUmlEntityRelationshipModelSourceCodeGenerator implements EntityRelationshipModelSourceCodeGenerator {\n\n\tprivate readonly entityCodeGenerator = new PlantUmlEntityCodeGenerator();\n\tprivate readonly relationshipCodeGenerator = new PlantUmlRelationshipCodeGenerator();\n\n\tpublic generateSourceCode(model: EntityRelationshipModel): string {\n\t\treturn [\n\t\t\t'@startuml',\n\t\t\t...model.entities.map(entity => this.entityCodeGenerator.generateEntityCode(entity)),\n\t\t\t...model.relationships.map(relationship => this.relationshipCodeGenerator.generateRelationshipCode(relationship)),\n\t\t\t'@enduml'\n\t\t].join('\\n\\n');\n\t}\n\n}\n","import {EntityDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport PlantUmlEntityIdentityPropertyCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/plantuml/entity/PlantUmlEntityIdentityPropertyCodeGenerator';\nimport PlantUmlEntityPropertyCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/plantuml/entity/PlantUmlEntityPropertyCodeGenerator';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\n\nexport default class PlantUmlEntityCodeGenerator {\n\n\tprivate readonly entityIdentityPropertyCodeGenerator = new PlantUmlEntityIdentityPropertyCodeGenerator();\n\tprivate readonly entityPropertyCodeGenerator = new PlantUmlEntityPropertyCodeGenerator();\n\n\tpublic generateEntityCode(entity: EntityDescriptor): string {\n\n\t\tconst propertiesCode = this.generateEntityPropertiesCode(entity);\n\n\t\tif (!propertiesCode) {\n\t\t\treturn `class ${entity.name} {}`;\n\t\t}\n\n\t\treturn [\n\t\t\t`class ${entity.name} {`,\n\t\t\tpropertiesCode,\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t}\n\n\tprivate generateEntityPropertiesCode(entity: EntityDescriptor): string {\n\n\t\tconst {\n\t\t\tidentityPropertyName,\n\t\t\tproperties\n\t\t} = entity;\n\n\t\tconst propertiesCode = properties.map(property => this.entityPropertyCodeGenerator.generateEntityPropertyCode(property));\n\n\t\tif (identityPropertyName) {\n\t\t\tpropertiesCode.unshift(this.entityIdentityPropertyCodeGenerator.generateEntityIdentityPropertyCode(identityPropertyName));\n\t\t}\n\n\t\treturn indentLines(propertiesCode).join('\\n');\n\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class PlantUmlEntityIdentityPropertyCodeGenerator {\n\n\tpublic generateEntityIdentityPropertyCode(identityPropertyName: string): string {\n\t\treturn `{field} ${identityPropertyName}: ${EntityPropertyType.IDENTITY}`;\n\t}\n\n}\n","import {EntityPropertyDescriptor, EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class PlantUmlEntityPropertyCodeGenerator {\n\n\tpublic generateEntityPropertyCode(property: EntityPropertyDescriptor): string {\n\n\t\tconst {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tlength,\n\t\t\toptional,\n\t\t\tunique\n\t\t} = property;\n\n\t\tconst typeWithLengthCode = this.getTypeWithLengthCode(type, length);\n\n\t\tconst modifiersCode = this.getModifiersCode(optional, unique);\n\n\t\treturn `{field} ${name}${modifiersCode}: ${typeWithLengthCode}`;\n\n\t}\n\n\tprivate getTypeWithLengthCode(type: EntityPropertyType, length: number[]): string {\n\n\t\tif (length.length === 0) {\n\t\t\treturn type;\n\t\t}\n\n\t\treturn `${type}(${length.join(', ')})`;\n\n\t}\n\n\tprivate getModifiersCode(optional: boolean, unique: boolean) {\n\n\t\tconst optionalModifierCode = optional ? '?' : '';\n\t\tconst uniqueModifierCode = unique ? '!' : '';\n\n\t\treturn optionalModifierCode + uniqueModifierCode;\n\n\t}\n\n}\n","import PlantUmlEntityRelationshipModelSourceCodeGenerator\n\tfrom './PlantUmlEntityRelationshipModelSourceCodeGenerator';\n\nexport {\n\tPlantUmlEntityRelationshipModelSourceCodeGenerator\n};\n","import {Cardinality} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class PlantUmlRelationshipCardinalityCodeGenerator {\n\n\tpublic generateCardinalityCode(cardinality: Cardinality): string {\n\t\tswitch (cardinality) {\n\t\t\tcase Cardinality.ZERO_OR_ONE:\n\t\t\t\treturn '0..1';\n\t\t\tcase Cardinality.ONE:\n\t\t\t\treturn '1';\n\t\t\tcase Cardinality.MANY:\n\t\t\t\treturn '*';\n\t\t}\n\t}\n\n}\n","import {RelationshipDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport PlantUmlRelationshipDirectionCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/plantuml/relationship/PlantUmlRelationshipDirectionCodeGenerator';\nimport PlantUmlRelationshipCardinalityCodeGenerator\n\tfrom '@/erdiagram/converter/diagram/plantuml/relationship/PlantUmlRelationshipCardinalityCodeGenerator';\n\nexport default class PlantUmlRelationshipCodeGenerator {\n\n\tprivate readonly relationshipDirectionCodeGenerator = new PlantUmlRelationshipDirectionCodeGenerator();\n\tprivate readonly relationshipCardinalityCodeGenerator = new PlantUmlRelationshipCardinalityCodeGenerator();\n\n\tpublic generateRelationshipCode(relationship: RelationshipDescriptor): string {\n\n\t\tconst {\n\t\t\tleftMember,\n\t\t\trightMember,\n\t\t\tdirection\n\t\t} = relationship;\n\n\t\tconst leftMemberCardinalityCode = this.relationshipCardinalityCodeGenerator.generateCardinalityCode(leftMember.cardinality);\n\t\tconst rightMemberCardinalityCode = this.relationshipCardinalityCodeGenerator.generateCardinalityCode(rightMember.cardinality);\n\n\t\tconst directionCode = this.relationshipDirectionCodeGenerator.generateDirectionCode(direction);\n\n\t\tconst relationshipCode = `${leftMember.entity} \"${leftMemberCardinalityCode}\" ${directionCode} \"${rightMemberCardinalityCode}\" ${rightMember.entity}`;\n\n\t\tif (relationship.relationshipName) {\n\t\t\treturn `${relationshipCode} : ${relationship.relationshipName}`;\n\t\t} else {\n\t\t\treturn relationshipCode;\n\t\t}\n\n\t}\n\n}\n","import {Direction} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class PlantUmlRelationshipDirectionCodeGenerator {\n\n\tpublic generateDirectionCode(direction: Direction): string {\n\t\tswitch (direction) {\n\t\t\tcase Direction.LEFT_TO_RIGHT:\n\t\t\t\treturn '-->';\n\t\t\tcase Direction.RIGHT_TO_LEFT:\n\t\t\t\treturn '<--';\n\t\t\tcase Direction.BIDIRECTIONAL:\n\t\t\t\treturn '<-->';\n\t\t}\n\t}\n\n}\n","import EntityRelationshipModelSourceCodeGenerator from './EntityRelationshipModelSourceCodeGenerator';\nimport MultipleFileEntityRelationshipModelSourceCodeGenerator, {isMultipleFileEntityRelationshipModelSourceCodeGenerator} from '@/erdiagram/converter/MultipleFileEntityRelationshipModelSourceCodeGenerator';\n\nexport * from './common/exports';\nexport * from './database/exports';\nexport * from './oop/exports';\nexport * from './diagram/exports';\n\nexport {\n\tEntityRelationshipModelSourceCodeGenerator,\n\tMultipleFileEntityRelationshipModelSourceCodeGenerator,\n\tisMultipleFileEntityRelationshipModelSourceCodeGenerator\n};\n","export * from './source-code-generator/exports';\nexport * from './model/exports';\n","import {ClassModel} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport ClassModelGeneratorConfig, {PartialClassModelGeneratorConfig} from '@/erdiagram/converter/oop/model/config/ClassModelGeneratorConfig';\nimport classModelGeneratorConfigManager from '@/erdiagram/converter/oop/model/config/ClassModelGeneratorConfigManager';\nimport EntityToClassMapper from '@/erdiagram/converter/oop/model/class/EntityToClassMapper';\n\nexport default class ClassModelGenerator {\n\n\tprivate readonly config: ClassModelGeneratorConfig;\n\tprivate readonly entityToClassMapper: EntityToClassMapper;\n\n\tconstructor(config?: PartialClassModelGeneratorConfig) {\n\t\tthis.config = classModelGeneratorConfigManager.mergeWithDefaultConfig(config);\n\t\tthis.entityToClassMapper = new EntityToClassMapper(this.config);\n\t}\n\n\tgenerateClassModel(model: EntityRelationshipModel): ClassModel {\n\n\t\tconst {\n\t\t\tentities,\n\t\t\trelationships\n\t\t} = model;\n\n\t\tconst classes = entities.map(entity => this.entityToClassMapper.mapEntityToClass(entity, relationships));\n\n\t\treturn {\n\t\t\tclasses\n\t\t};\n\n\t}\n\n};\n","import {capitalizeWord} from '@/erdiagram/util/string-utils';\nimport {ClassDescriptor, ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {\n\tDirection,\n\tEntityDescriptor,\n\tRelationshipDescriptor\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport ClassModelGeneratorConfig from '@/erdiagram/converter/oop/model/config/ClassModelGeneratorConfig';\nimport RelationshipMemberToClassFieldMapper\n\tfrom '@/erdiagram/converter/oop/model/class/field/RelationshipMemberToClassFieldMapper';\nimport EntityPropertyToClassFieldMapper\n\tfrom '@/erdiagram/converter/oop/model/class/field/EntityPropertyToClassFieldMapper';\nimport EntityToIdClassFieldMapper from '@/erdiagram/converter/oop/model/class/field/EntityToIdClassFieldMapper';\nimport {SourceType} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class EntityToClassMapper {\n\n\tprivate readonly entityToIdClassFieldMapper: EntityToIdClassFieldMapper;\n\tprivate readonly entityPropertyToClassFieldMapper: EntityPropertyToClassFieldMapper;\n\tprivate readonly relationshipMemberToClassFieldMapper: RelationshipMemberToClassFieldMapper;\n\n\tconstructor(\n\t\t\tprivate readonly config: ClassModelGeneratorConfig\n\t) {\n\t\tthis.entityToIdClassFieldMapper = new EntityToIdClassFieldMapper(this.config.idNamingStrategy);\n\t\tthis.entityPropertyToClassFieldMapper = new EntityPropertyToClassFieldMapper();\n\t\tthis.relationshipMemberToClassFieldMapper = new RelationshipMemberToClassFieldMapper();\n\t}\n\n\tpublic mapEntityToClass(entity: EntityDescriptor, relationships: RelationshipDescriptor[]): ClassDescriptor {\n\n\t\tconst name = capitalizeWord(entity.name);\n\n\t\tconst fields: ClassFieldDescriptor[] = [\n\t\t\tthis.entityToIdClassFieldMapper.mapEntityToIdClassField(entity)\n\t\t];\n\n\t\tfor (const property of entity.properties) {\n\t\t\tfields.push(this.entityPropertyToClassFieldMapper.mapPropertyToField(entity, property));\n\t\t}\n\n\t\tfor (const relationship of relationships) {\n\n\t\t\tconst {\n\t\t\t\tleftMember,\n\t\t\t\trightMember,\n\t\t\t\tdirection\n\t\t\t} = relationship;\n\n\t\t\tif (leftMember.entity === entity.name && [Direction.LEFT_TO_RIGHT, Direction.BIDIRECTIONAL].includes(direction)) {\n\t\t\t\tfields.push(this.relationshipMemberToClassFieldMapper.mapRelationshipMemberToField(relationship, rightMember));\n\t\t\t}\n\n\t\t\tif (rightMember.entity === entity.name && [Direction.RIGHT_TO_LEFT, Direction.BIDIRECTIONAL].includes(direction)) {\n\t\t\t\tfields.push(this.relationshipMemberToClassFieldMapper.mapRelationshipMemberToField(relationship, leftMember));\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tname,\n\t\t\tfields,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.ENTITY,\n\t\t\t\tentity\n\t\t\t}\n\t\t};\n\n\t}\n\n};\n","import {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityPropertyType\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {SourceType} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nconst TYPES_WITH_MAX_SIZE_SUPPORT = [EntityPropertyType.TEXT, EntityPropertyType.BLOB];\n\nexport default class EntityPropertyToClassFieldMapper {\n\n\tpublic mapPropertyToField(entity: EntityDescriptor, property: EntityPropertyDescriptor): ClassFieldDescriptor {\n\n\t\tconst {\n\t\t\tname,\n\t\t\toptional,\n\t\t\ttype,\n\t\t\tlength\n\t\t} = property;\n\n\t\treturn {\n\t\t\tname,\n\t\t\tnullable: optional,\n\t\t\tprimitiveType: type,\n\t\t\tlist: false,\n\t\t\tmaxSize: TYPES_WITH_MAX_SIZE_SUPPORT.includes(type) ? length[0] : undefined,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.ENTITY_PROPERTY,\n\t\t\t\tentity,\n\t\t\t\tproperty\n\t\t\t}\n\t\t};\n\n\t}\n\n};\n","import {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {EntityDescriptor, EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport IdNamingStrategy from '@/erdiagram/converter/common/id-naming-strategy/IdNamingStrategy';\nimport {SourceType} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class EntityToIdClassFieldMapper {\n\n\tconstructor(\n\t\t\tprivate readonly idNamingStrategy: IdNamingStrategy\n\t) {\n\n\t}\n\n\tpublic mapEntityToIdClassField(entity: EntityDescriptor): ClassFieldDescriptor {\n\t\treturn {\n\t\t\tname: this.getIdentityFieldName(entity),\n\t\t\tprimitiveType: EntityPropertyType.IDENTITY,\n\t\t\t// ID field must be nullable, so NULL value can be used to represent an unsaved instance\n\t\t\tnullable: true,\n\t\t\tlist: false,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.ENTITY_IDENTITY,\n\t\t\t\tentity\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate getIdentityFieldName(entity: EntityDescriptor) {\n\n\t\tif (entity.identityPropertyName) {\n\t\t\treturn entity.identityPropertyName;\n\t\t}\n\n\t\tconst {idNamingStrategy} = this;\n\t\treturn idNamingStrategy(entity.name);\n\n\t}\n\n};\n","import {\n\tCardinality,\n\tRelationshipDescriptor,\n\tRelationshipMember\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport pluralize from 'pluralize';\nimport {SourceType} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport default class RelationshipMemberToClassFieldMapper {\n\n\tpublic mapRelationshipMemberToField(relationship: RelationshipDescriptor, toMember: RelationshipMember): ClassFieldDescriptor {\n\n\t\tconst list = toMember.cardinality === Cardinality.MANY;\n\t\tconst name = list ? pluralize(toMember.entityAlias) : toMember.entityAlias;\n\n\t\treturn {\n\t\t\tname,\n\t\t\tnullable: toMember.cardinality === Cardinality.ZERO_OR_ONE,\n\t\t\tentityType: toMember.entity,\n\t\t\tlist,\n\t\t\tsourceMetadata: {\n\t\t\t\tsourceType: SourceType.RELATIONSHIP_MEMBER,\n\t\t\t\trelationship,\n\t\t\t\treferencedMember: toMember\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport ClassModelGeneratorConfig, {PartialClassModelGeneratorConfig} from '@/erdiagram/converter/oop/model/config/ClassModelGeneratorConfig';\nimport StandardIdNamingStrategies from '@/erdiagram/converter/common/id-naming-strategy/StandardIdNamingStrategies';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\n\nexport class ClassModelGeneratorConfigManager\n\t\textends AbstractComponentConfigManager<ClassModelGeneratorConfig, PartialClassModelGeneratorConfig> {\n\n\tgetDefaultConfig(): ClassModelGeneratorConfig {\n\t\treturn {\n\t\t\tidNamingStrategy: StandardIdNamingStrategies.DEFAULT\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: ClassModelGeneratorConfig, partialConfig?: PartialClassModelGeneratorConfig): ClassModelGeneratorConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<ClassModelGeneratorConfig> {\n\t\treturn JsonAdapters.object<ClassModelGeneratorConfig>({\n\t\t\tidNamingStrategy: JsonAdapters.byKeyLenient(StandardIdNamingStrategies, 'DEFAULT')\n\t\t});\n\t}\n\n}\n\nconst classModelGeneratorConfigManager = new ClassModelGeneratorConfigManager();\nexport default classModelGeneratorConfigManager;\n","import ClassModelGeneratorConfig from './ClassModelGeneratorConfig';\nimport classModelGeneratorConfigManager, {ClassModelGeneratorConfigManager} from './ClassModelGeneratorConfigManager';\n\nexport {\n\tClassModelGeneratorConfig,\n\tClassModelGeneratorConfigManager,\n\tclassModelGeneratorConfigManager\n};\n","import ClassModelGenerator from './ClassModelGenerator';\n\nexport * from './class-model-types';\nexport * from './config/exports';\n\nexport {\n\tClassModelGenerator\n};\n","import {\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityRelationshipModel,\n\tRelationshipDescriptor,\n\tRelationshipMember\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport enum SourceType {\n\tENTITY_RELATIONSHIP_MODEL = 'entity_relationship_model',\n\tENTITY = 'entity',\n\tENTITY_IDENTITY = 'entity_identity',\n\tENTITY_PROPERTY = 'entity_property',\n\tRELATIONSHIP = 'relationship',\n\tRELATIONSHIP_MEMBER = 'relationship_member'\n}\n\nexport interface SourceMetadata<T extends SourceType = SourceType> {\n\treadonly sourceType: T;\n}\n\nexport interface EntityRelationshipModelSourceMetadata extends SourceMetadata<SourceType.ENTITY_RELATIONSHIP_MODEL> {\n\tentityRelationshipModel: EntityRelationshipModel;\n}\n\nexport interface EntitySourceMetadata extends SourceMetadata<SourceType.ENTITY> {\n\tentity: EntityDescriptor;\n}\n\nexport interface EntityIdentitySourceMetadata extends SourceMetadata<SourceType.ENTITY_IDENTITY> {\n\tentity: EntityDescriptor;\n}\n\nexport interface EntityPropertySourceMetadata extends SourceMetadata<SourceType.ENTITY_PROPERTY> {\n\tentity: EntityDescriptor;\n\tproperty: EntityPropertyDescriptor;\n}\n\nexport interface RelationshipSourceMetadata extends SourceMetadata<SourceType.RELATIONSHIP> {\n\trelationship: RelationshipDescriptor;\n}\n\nexport interface RelationshipMemberSourceMetadata extends SourceMetadata<SourceType.RELATIONSHIP_MEMBER> {\n\trelationship: RelationshipDescriptor;\n\treferencedMember: RelationshipMember;\n}\n\nexport type OmitSource<T> = Omit<T, 'sourceMetadata'>;\n","import {\n\tEntityIdentitySourceMetadata,\n\tEntityPropertySourceMetadata,\n\tEntityRelationshipModelSourceMetadata,\n\tEntitySourceMetadata,\n\tRelationshipMemberSourceMetadata,\n\tRelationshipSourceMetadata,\n\tSourceMetadata,\n\tSourceType\n} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-types';\n\nexport function isEntityRelationshipModelSourceMetadata(sourceMetadata: SourceMetadata): sourceMetadata is EntityRelationshipModelSourceMetadata {\n\treturn sourceMetadata.sourceType === SourceType.ENTITY_RELATIONSHIP_MODEL;\n}\n\nexport function isEntitySourceMetadata(sourceMetadata: SourceMetadata): sourceMetadata is EntitySourceMetadata {\n\treturn sourceMetadata.sourceType === SourceType.ENTITY;\n}\n\nexport function isEntityIdentitySourceMetadata(sourceMetadata: SourceMetadata): sourceMetadata is EntityIdentitySourceMetadata {\n\treturn sourceMetadata.sourceType === SourceType.ENTITY_IDENTITY;\n}\n\nexport function isEntityPropertySourceMetadata(sourceMetadata: SourceMetadata): sourceMetadata is EntityPropertySourceMetadata {\n\treturn sourceMetadata.sourceType === SourceType.ENTITY_PROPERTY;\n}\n\nexport function isRelationshipSourceMetadata(sourceMetadata: SourceMetadata): sourceMetadata is RelationshipSourceMetadata {\n\treturn sourceMetadata.sourceType === SourceType.RELATIONSHIP;\n}\n\nexport function isRelationshipMemberSourceMetadata(sourceMetadata: SourceMetadata): sourceMetadata is RelationshipMemberSourceMetadata {\n\treturn sourceMetadata.sourceType === SourceType.RELATIONSHIP_MEMBER;\n}\n","import ClassModelToCodeConverterConfig from './ClassModelToCodeConverterConfig';\nimport ClassModelToCodeConverter from './ClassModelToCodeConverter';\n\nexport * from './java/exports';\nexport * from './typescript/exports';\n\nexport {\n\tClassModelToCodeConverter,\n\tClassModelToCodeConverterConfig\n};\n","import {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport ClassModelGenerator from '@/erdiagram/converter/oop/model/ClassModelGenerator';\nimport JavaClassModelTransformer\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/JavaClassModelTransformer';\nimport JavaClassModelGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassModelGenerator';\nimport JavaClassModelCodeGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassModelCodeGenerator';\nimport ApplyTransformersCommand\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/ApplyTransformersCommand';\nimport {SetupContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport JavaEntityRelationshipModelSourceCodeGeneratorBuilder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/JavaEntityRelationshipModelSourceCodeGeneratorBuilder';\nimport SourceFileInfo from '@/erdiagram/converter/common/SourceFileInfo';\nimport JavaClassModelSourceFilesGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassModelSourceFilesGenerator';\nimport MultipleFileEntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/MultipleFileEntityRelationshipModelSourceCodeGenerator';\nimport {JavaClassModel} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\n\nexport default class JavaEntityRelationshipModelSourceCodeGenerator\n\t\timplements MultipleFileEntityRelationshipModelSourceCodeGenerator {\n\n\treadonly #classModelGenerator: ClassModelGenerator;\n\treadonly #javaClassModelGenerator: JavaClassModelGenerator;\n\treadonly #javaClassModelTransformers: JavaClassModelTransformer[];\n\treadonly #javaClassModelCodeGenerator: JavaClassModelCodeGenerator;\n\treadonly #javaClassModelSourceFilesGenerator: JavaClassModelSourceFilesGenerator;\n\n\tconstructor(\n\t\t\tclassModelGenerator: ClassModelGenerator,\n\t\t\tjavaClassModelGenerator: JavaClassModelGenerator,\n\t\t\tjavaClassModelTransformers: JavaClassModelTransformer[],\n\t\t\tjavaClassModelCodeGenerator: JavaClassModelCodeGenerator,\n\t\t\tjavaClassModelSourceFilesGenerator: JavaClassModelSourceFilesGenerator\n\t) {\n\t\tthis.#classModelGenerator = classModelGenerator;\n\t\tthis.#javaClassModelGenerator = javaClassModelGenerator;\n\t\tthis.#javaClassModelTransformers = javaClassModelTransformers;\n\t\tthis.#javaClassModelCodeGenerator = javaClassModelCodeGenerator;\n\t\tthis.#javaClassModelSourceFilesGenerator = javaClassModelSourceFilesGenerator;\n\t}\n\n\tgenerateSourceCode(entityRelationshipModel: EntityRelationshipModel): string {\n\t\tconst javaClassModel = this.getJavaClassModel(entityRelationshipModel);\n\t\treturn this.#javaClassModelCodeGenerator.generateCode(javaClassModel);\n\t}\n\n\tgenerateSourceFiles(entityRelationshipModel: EntityRelationshipModel): SourceFileInfo[] {\n\t\tconst javaClassModel = this.getJavaClassModel(entityRelationshipModel);\n\t\treturn this.#javaClassModelSourceFilesGenerator.generateSourceFiles(javaClassModel);\n\t}\n\n\tprivate getJavaClassModel(entityRelationshipModel: EntityRelationshipModel): JavaClassModel {\n\n\t\tconst classModel = this.#classModelGenerator.generateClassModel(entityRelationshipModel);\n\n\t\tconst {\n\t\t\tjavaClassModel,\n\t\t\tjavaClassModelDescriptorsRepository\n\t\t} = this.#javaClassModelGenerator.generateJavaClassModel(classModel);\n\n\t\t// FIXME too much dependencies?\n\t\tconst applyTransformersCommandContext: SetupContext = {\n\t\t\tentityRelationshipModel,\n\t\t\tclassModel,\n\t\t\tjavaClassModel\n\t\t};\n\n\t\tnew ApplyTransformersCommand(\n\t\t\t\tapplyTransformersCommandContext,\n\t\t\t\tjavaClassModelDescriptorsRepository,\n\t\t\t\tthis.#javaClassModelTransformers\n\t\t).execute();\n\n\t\treturn javaClassModel;\n\n\t}\n\n\tstatic withDefaultConfig() {\n\t\treturn this.builder().build();\n\t}\n\n\tstatic builder() {\n\t\treturn new JavaEntityRelationshipModelSourceCodeGeneratorBuilder();\n\t}\n\n}\n","import ClassModelGenerator from '@/erdiagram/converter/oop/model/ClassModelGenerator';\nimport JavaClassModelTransformer\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/JavaClassModelTransformer';\nimport JavaClassModelGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassModelGenerator';\nimport {PartialClassModelGeneratorConfig} from '@/erdiagram/converter/oop/model/config/ClassModelGeneratorConfig';\nimport {PartialJavaClassModelGeneratorConfig} from '@/erdiagram/converter/oop/source-code-generator/java/model/generator/config/JavaClassModelGeneratorConfig';\nimport JavaEntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/JavaEntityRelationshipModelSourceCodeGenerator';\nimport JavaClassModelCodeGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassModelCodeGenerator';\nimport JavaClassCodeGenerator from '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassCodeGenerator';\nimport JavaClassModelSourceFilesGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassModelSourceFilesGenerator';\n\nexport default class JavaEntityRelationshipModelSourceCodeGeneratorBuilder {\n\n\t#classModelGeneratorConfig: PartialClassModelGeneratorConfig = {};\n\t#javaClassModelGeneratorConfig: PartialJavaClassModelGeneratorConfig = {};\n\t#javaClassModelTransformers: JavaClassModelTransformer[] = [];\n\n\tpublic withClassModelGeneratorConfig(config: PartialClassModelGeneratorConfig) {\n\t\tthis.#classModelGeneratorConfig = config;\n\t\treturn this;\n\t}\n\n\tpublic withJavaClassModelGeneratorConfig(config: PartialJavaClassModelGeneratorConfig) {\n\t\tthis.#javaClassModelGeneratorConfig = config;\n\t\treturn this;\n\t}\n\n\tpublic addJavaClassModelTransformers(...javaClassModelTransformers: JavaClassModelTransformer[]) {\n\t\tthis.#javaClassModelTransformers.push(...javaClassModelTransformers);\n\t\treturn this;\n\t}\n\n\tpublic build() {\n\n\t\tconst classModelGenerator = new ClassModelGenerator(this.#classModelGeneratorConfig);\n\t\tconst javaClassModelGenerator = new JavaClassModelGenerator(this.#javaClassModelGeneratorConfig);\n\n\t\tconst javaClassCodeGenerator = new JavaClassCodeGenerator();\n\t\tconst javaClassModelCodeGenerator = new JavaClassModelCodeGenerator(javaClassCodeGenerator);\n\t\tconst javaClassModelSourceFilesGenerator = new JavaClassModelSourceFilesGenerator(javaClassCodeGenerator);\n\n\t\treturn new JavaEntityRelationshipModelSourceCodeGenerator(\n\t\t\t\tclassModelGenerator,\n\t\t\t\tjavaClassModelGenerator,\n\t\t\t\t[...this.#javaClassModelTransformers],\n\t\t\t\tjavaClassModelCodeGenerator,\n\t\t\t\tjavaClassModelSourceFilesGenerator\n\t\t);\n\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport formatJavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/utils/formatJavaAnnotation';\nimport {\n\tcreateRawParameterValue,\n\tisRawParameterValue\n} from '@/erdiagram/converter/oop/source-code-generator/java/annotation/utils/RawAnnotationParameterValue';\nimport {JavaAnnotationParameterValue} from '@/erdiagram/converter/oop/source-code-generator/java/annotation/annotation-parameter-types';\n\nexport type JavaAnnotationParametersRecord = Record<string, JavaAnnotationParameterValue | undefined>;\n\nexport default class JavaAnnotation {\n\n\treadonly #type: JavaType;\n\treadonly #parameters: JavaAnnotationParametersRecord;\n\n\tconstructor(\n\t\t\tannotationType: JavaType,\n\t\t\tparameters: JavaAnnotationParametersRecord = {}\n\t) {\n\t\tthis.#type = annotationType;\n\t\tthis.#parameters = parameters;\n\t}\n\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n\tget parameters() {\n\t\treturn this.#parameters;\n\t}\n\n\tpublic format(): string {\n\t\treturn formatJavaAnnotation(this);\n\t}\n\n\tstatic createRawParameterValue = createRawParameterValue;\n\tstatic isRawParameterValue = isRawParameterValue;\n\n}\n","import JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport RawAnnotationParameterValue\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/annotation/utils/RawAnnotationParameterValue';\n\nexport * from './annotation-parameter-types';\n\nexport {\n\tJavaAnnotation,\n\tRawAnnotationParameterValue\n};\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport {JavaAnnotationParameterValue} from '@/erdiagram/converter/oop/source-code-generator/java/annotation/annotation-parameter-types';\n\nconst RAW_ANNOTATION_PARAMETER_VALUE_SYMBOL = Symbol('RawAnnotationParameterValue');\n\nexport default interface RawAnnotationParameterValue {\n\t[RAW_ANNOTATION_PARAMETER_VALUE_SYMBOL]: true;\n\tcode: string;\n\tusedTypes: JavaType[];\n}\n\nexport function createRawParameterValue(code: string, ...usedTypes: JavaType[]): RawAnnotationParameterValue {\n\treturn {\n\t\t[RAW_ANNOTATION_PARAMETER_VALUE_SYMBOL]: true,\n\t\tcode,\n\t\tusedTypes\n\t};\n}\n\nexport function isRawParameterValue(value: JavaAnnotationParameterValue): value is RawAnnotationParameterValue {\n\treturn value != null && typeof value === 'object' && (value as RawAnnotationParameterValue)[RAW_ANNOTATION_PARAMETER_VALUE_SYMBOL];\n}\n","import JavaAnnotation, {JavaAnnotationParametersRecord} from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport {\n\tJavaAnnotationParameterSingleValue,\n\tJavaAnnotationParameterValue\n} from '@/erdiagram/converter/oop/source-code-generator/java/annotation/annotation-parameter-types';\n\nexport default function formatJavaAnnotation(annotation: JavaAnnotation): string {\n\n\tconst simpleName = annotation.type.formatSimple();\n\tconst formattedParams = formatAnnotationParameters(annotation.parameters);\n\n\treturn `@${simpleName}${formattedParams}`;\n\n}\n\nfunction formatAnnotationParameters(annotationParameters: JavaAnnotationParametersRecord): string {\n\n\tconst annotationParamsEntries = Object.entries(annotationParameters)\n\t\t\t.filter(([, paramValue]) => paramValue != null) as [string, JavaAnnotationParameterValue][];\n\n\tif (annotationParamsEntries.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst formattedParams = annotationParamsEntries.map(([paramName, paramValue]) => `${paramName} = ${(formatAnnotationParameterValue(paramValue))}`);\n\n\treturn `(${formattedParams.join(', ')})`;\n\n}\n\nfunction formatAnnotationParameterValue(value: JavaAnnotationParameterValue): string {\n\n\tif (!Array.isArray(value)) {\n\t\treturn formatAnnotationParameterSingleValue(value);\n\t}\n\n\tconst formattedValues = value.map(formatAnnotationParameterSingleValue);\n\n\treturn `{${formattedValues.join(', ')}}`;\n\n}\n\nfunction formatAnnotationParameterSingleValue(value: JavaAnnotationParameterSingleValue): string {\n\tswitch (typeof value) {\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn String(value);\n\t\tcase 'string':\n\t\t\treturn `\"${value}\"`;\n\t\tdefault:\n\t\t\tif (JavaAnnotation.isRawParameterValue(value)) {\n\t\t\t\treturn value.code;\n\t\t\t}\n\t\t\treturn formatJavaAnnotation(value);\n\t}\n}\n","import {indentLine, indentLines} from '@/erdiagram/util/indent-utils';\nimport JavaImportStatementsGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/import/JavaImportStatementsGenerator';\nimport {\n\tJavaClass,\n\tJavaField,\n\tJavaFieldGetter,\n\tJavaFieldSetter,\n\tJavaVisibility\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport JavaClassUsedTypesCompiler\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/import/JavaClassUsedTypesCompiler';\n\nconst EMPTY_STRING: string = '';\n\nexport default class JavaClassCodeGenerator {\n\n\treadonly #javaUsedTypesCompiler: JavaClassUsedTypesCompiler;\n\n\tconstructor() {\n\t\tthis.#javaUsedTypesCompiler = new JavaClassUsedTypesCompiler();\n\t}\n\n\tpublic generateCode(javaClass: JavaClass): string {\n\n\t\tconst fieldsLines: string[] = [];\n\t\tconst methodsLines: string[] = [];\n\n\t\tfor (const javaField of javaClass.fields) {\n\n\t\t\tconst {\n\t\t\t\tfieldLines,\n\t\t\t\tgetterLines,\n\t\t\t\tsetterLines\n\t\t\t} = this.createField(javaField);\n\n\t\t\tfieldsLines.push(...fieldLines);\n\t\t\tmethodsLines.push(...getterLines, ...setterLines);\n\n\t\t}\n\n\t\tconst classOuterLines = [];\n\n\t\tif (javaClass.packageName) {\n\t\t\tclassOuterLines.push(`package ${javaClass.packageName};`, EMPTY_STRING);\n\t\t}\n\n\t\tconst importLines = this.generateImportLines(javaClass);\n\n\t\tif (importLines.length > 0) {\n\t\t\tclassOuterLines.push(...importLines, EMPTY_STRING);\n\t\t}\n\n\t\tclassOuterLines.push(\n\t\t\t\t...this.getAnnotationsLines(javaClass.annotations),\n\t\t\t\tthis.prependVisibility(`class ${javaClass.name} {`, javaClass.visibility),\n\t\t\t\tEMPTY_STRING\n\t\t);\n\n\t\tif (fieldsLines.length > 0) {\n\t\t\tclassOuterLines.push(...indentLines(fieldsLines), EMPTY_STRING);\n\t\t}\n\n\t\tif (methodsLines.length > 0) {\n\t\t\tclassOuterLines.push(...indentLines(methodsLines));\n\t\t}\n\n\t\tclassOuterLines.push(`}`);\n\n\t\treturn classOuterLines.join('\\n');\n\n\t}\n\n\t// TODO move the field generator to a separate class\n\n\tprivate createField(javaField: JavaField) {\n\n\t\tconst fieldLines: string[] = [];\n\n\t\tconst fieldName = javaField.name;\n\t\tconst formattedJavaType = javaField.type.formatSimple();\n\n\t\tfieldLines.push(...this.getAnnotationsLines(javaField.annotations));\n\t\tfieldLines.push(this.prependVisibility(`${formattedJavaType} ${fieldName};`, javaField.visibility));\n\n\t\tconst getterLines: string[] = this.createGetterLines(fieldName, formattedJavaType, javaField.getter);\n\t\tconst setterLines: string[] = this.createSetterLines(fieldName, formattedJavaType, javaField.setter);\n\n\t\treturn {\n\t\t\tfieldLines,\n\t\t\tgetterLines,\n\t\t\tsetterLines\n\t\t};\n\n\t}\n\n\tprivate createGetterLines(fieldName: string, formattedJavaType: string, getter: JavaFieldGetter | undefined) {\n\n\t\tif (getter == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t...this.getAnnotationsLines(getter.annotations),\n\t\t\tthis.prependVisibility(`${formattedJavaType} ${getter.name}() {`, getter.visibility),\n\t\t\tindentLine(`return ${fieldName};`),\n\t\t\t'}',\n\t\t\tEMPTY_STRING\n\t\t];\n\n\t}\n\n\tprivate createSetterLines(fieldName: string, formattedJavaType: string, setter: JavaFieldSetter | undefined) {\n\n\t\tif (setter == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t...this.getAnnotationsLines(setter.annotations),\n\t\t\tthis.prependVisibility(`void ${setter.name}(${formattedJavaType} ${fieldName}) {`, setter.visibility),\n\t\t\tindentLine(`this.${fieldName} = ${fieldName};`),\n\t\t\t'}',\n\t\t\tEMPTY_STRING\n\t\t];\n\n\t}\n\n\tprivate getAnnotationsLines(annotations: JavaAnnotation[]) {\n\t\treturn annotations.map(annotation => annotation.format());\n\t}\n\n\tprivate prependVisibility(text: string, visibility: JavaVisibility): string {\n\t\tif (visibility === JavaVisibility.PACKAGE_PRIVATE) {\n\t\t\treturn text;\n\t\t}\n\t\treturn visibility + ' ' + text;\n\t}\n\n\tprivate generateImportLines(javaClass: JavaClass) {\n\n\t\tconst usedTypes = this.#javaUsedTypesCompiler.getUsedTypes(javaClass);\n\n\t\tconst javaImportStatementsGenerator = new JavaImportStatementsGenerator(javaClass.packageName);\n\t\treturn javaImportStatementsGenerator.generateImportStatements(usedTypes);\n\n\t}\n\n}\n","import {JavaClass, JavaClassModel} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaClassCodeGenerator from '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassCodeGenerator';\n\nexport default class JavaClassModelCodeGenerator {\n\n\treadonly #javaClassCodeGenerator: JavaClassCodeGenerator;\n\n\tconstructor(javaClassCodeGenerator: JavaClassCodeGenerator) {\n\t\tthis.#javaClassCodeGenerator = javaClassCodeGenerator;\n\t}\n\n\tpublic generateCode(javaClassModel: JavaClassModel): string {\n\t\treturn javaClassModel.classes\n\t\t\t\t.map(javaClass => this.generateClassCode(javaClass))\n\t\t\t\t.join('\\n\\n');\n\t}\n\n\tprivate generateClassCode(javaClass: JavaClass) {\n\t\tconst headerComment = this.generateClassHeaderComment(javaClass);\n\t\tconst classCode = this.#javaClassCodeGenerator.generateCode(javaClass);\n\t\treturn `${headerComment}\\n\\n${classCode}`;\n\t}\n\n\tprivate generateClassHeaderComment(javaClass: JavaClass) {\n\t\treturn `/* ========== ${javaClass.name} class ========== */`;\n\t}\n\n}\n","import {JavaClass, JavaClassModel} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaClassCodeGenerator from '@/erdiagram/converter/oop/source-code-generator/java/code/JavaClassCodeGenerator';\nimport SourceFileInfo from '@/erdiagram/converter/common/SourceFileInfo';\n\nexport default class JavaClassModelSourceFilesGenerator {\n\n\treadonly #javaClassCodeGenerator: JavaClassCodeGenerator;\n\n\tconstructor(javaClassCodeGenerator: JavaClassCodeGenerator) {\n\t\tthis.#javaClassCodeGenerator = javaClassCodeGenerator;\n\t}\n\n\tpublic generateSourceFiles(javaClassModel: JavaClassModel): SourceFileInfo[] {\n\t\treturn javaClassModel.classes.map(javaClass => this.generateClassSourceFile(javaClass));\n\t}\n\n\tprivate generateClassSourceFile(javaClass: JavaClass): SourceFileInfo {\n\t\treturn {\n\t\t\tfolder: this.generateClassSourceFileFolder(javaClass),\n\t\t\tfilename: this.generateClassSourceFileName(javaClass),\n\t\t\tcontents: this.#javaClassCodeGenerator.generateCode(javaClass)\n\t\t};\n\t}\n\n\tprivate generateClassSourceFileFolder(javaClass: JavaClass) {\n\t\treturn javaClass.packageName?.split('.') ?? [];\n\t}\n\n\tprivate generateClassSourceFileName(javaClass: JavaClass) {\n\t\treturn `${javaClass.name}.java`;\n\t}\n\n}\n","import JavaEntityRelationshipModelSourceCodeGenerator from './JavaEntityRelationshipModelSourceCodeGenerator';\nimport JavaEntityRelationshipModelSourceCodeGeneratorBuilder\n\tfrom './JavaEntityRelationshipModelSourceCodeGeneratorBuilder';\n\nexport * from './annotation/exports';\nexport * from './model/exports';\nexport * from './jpa/exports';\nexport * from './validation/exports';\nexport * from './type/exports';\n\nexport {\n\tJavaEntityRelationshipModelSourceCodeGenerator,\n\tJavaEntityRelationshipModelSourceCodeGeneratorBuilder\n};\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport JpaTransformerConfig, {PartialJpaTransformerConfig} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/config/JpaTransformerConfig';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\n\nexport class JpaTransformerConfigManager\n\t\textends AbstractComponentConfigManager<JpaTransformerConfig, PartialJpaTransformerConfig> {\n\n\tgetDefaultConfig(): JpaTransformerConfig {\n\t\treturn {\n\t\t\ttableNameCaseFormat: StandardCaseFormats.UPPER_CAMEL,\n\t\t\tcolumnNameCaseFormat: StandardCaseFormats.LOWER_CAMEL,\n\t\t\tannotateGetters: false\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: JpaTransformerConfig, partialConfig?: PartialJpaTransformerConfig): JpaTransformerConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<JpaTransformerConfig> {\n\t\treturn JsonAdapters.object<JpaTransformerConfig>({\n\t\t\ttableNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'UPPER_CAMEL'),\n\t\t\tcolumnNameCaseFormat: JsonAdapters.byKeyLenient(StandardCaseFormats, 'LOWER_CAMEL')\n\t\t});\n\t}\n\n}\n\nconst jpaTransformerConfigManager = new JpaTransformerConfigManager();\nexport default jpaTransformerConfigManager;\n","import JpaTransformerConfig, {PartialJpaTransformerConfig} from './JpaTransformerConfig';\nimport jpaTransformerConfigManager, {JpaTransformerConfigManager} from './JpaTransformerConfigManager';\n\nexport {\n\tJpaTransformerConfig,\n\tPartialJpaTransformerConfig,\n\tJpaTransformerConfigManager,\n\tjpaTransformerConfigManager\n};\n","export * from './config/exports';\nexport * from './transformer/exports';\n","import createJavaSimpleType from '@/erdiagram/converter/oop/source-code-generator/java/type/simple/createJavaSimpleType';\n\nconst JPA_PACKAGE = 'javax.persistence';\n\nexport const JpaAnnotationTypes = {\n\tEntity: createJavaSimpleType('Entity', JPA_PACKAGE),\n\tTable: createJavaSimpleType('Table', JPA_PACKAGE),\n\tColumn: createJavaSimpleType('Column', JPA_PACKAGE),\n\tId: createJavaSimpleType('Id', JPA_PACKAGE),\n\tGeneratedValue: createJavaSimpleType('GeneratedValue', JPA_PACKAGE),\n\tOneToOne: createJavaSimpleType('OneToOne', JPA_PACKAGE),\n\tOneToMany: createJavaSimpleType('OneToMany', JPA_PACKAGE),\n\tManyToOne: createJavaSimpleType('ManyToOne', JPA_PACKAGE),\n\tManyToMany: createJavaSimpleType('ManyToMany', JPA_PACKAGE),\n\tJoinTable: createJavaSimpleType('JoinTable', JPA_PACKAGE),\n\tJoinColumn: createJavaSimpleType('JoinColumn', JPA_PACKAGE),\n\tJoinColumns: createJavaSimpleType('JoinColumns', JPA_PACKAGE),\n};\n\nexport const JpaEnumTypes = {\n\tGenerationType: createJavaSimpleType('GenerationType', JPA_PACKAGE),\n};\n","import JavaClassModelTransformer\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/JavaClassModelTransformer';\nimport {\n\tJavaClassModelTransformContext,\n\tJavaClassTransformContext,\n\tJavaFieldTransformContext,\n\tSetupContext\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport DatabaseModelGenerator from '@/erdiagram/converter/database/model/DatabaseModelGenerator';\nimport JpaTransformerConfig from '@/erdiagram/converter/oop/source-code-generator/java/jpa/config/JpaTransformerConfig';\nimport jpaTransformerConfigManager\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/config/JpaTransformerConfigManager';\nimport {\n\tJavaClass,\n\tJavaClassModel,\n\tJavaField\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport StandardCaseFormats from '@/erdiagram/converter/common/case-format/StandardCaseFormats';\nimport JpaTransformerFieldVisitor\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/JpaTransformerFieldVisitor';\nimport JpaTransformerClassVisitor\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/class/JpaTransformerClassVisitor';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\nimport JpaTransformerSetupDataGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupDataGenerator';\nimport JpaTransformerBuilder from '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/JpaTransformerBuilder';\n\nexport class JpaTransformer implements JavaClassModelTransformer<JpaTransformerSetupData> {\n\n\treadonly #setupDataGenerator: JpaTransformerSetupDataGenerator;\n\treadonly #fieldVisitor: JpaTransformerFieldVisitor;\n\treadonly #classVisitor: JpaTransformerClassVisitor;\n\n\tconstructor(databaseModelGenerator: DatabaseModelGenerator, config?: Partial<JpaTransformerConfig>) {\n\n\t\tconst {\n\t\t\ttableNameCaseFormat,\n\t\t\tcolumnNameCaseFormat,\n\t\t\tannotateGetters\n\t\t} = jpaTransformerConfigManager.mergeWithDefaultConfig(config);\n\n\t\tconst tableNameCaseConverter = new CaseConverter(StandardCaseFormats.UPPER_CAMEL, tableNameCaseFormat);\n\t\tconst columnNameCaseConverter = new CaseConverter(StandardCaseFormats.UPPER_CAMEL, columnNameCaseFormat);\n\n\t\tthis.#setupDataGenerator = new JpaTransformerSetupDataGenerator(databaseModelGenerator);\n\n\t\tthis.#fieldVisitor = new JpaTransformerFieldVisitor(\n\t\t\t\ttableNameCaseConverter,\n\t\t\t\tcolumnNameCaseConverter,\n\t\t\t\tannotateGetters\n\t\t);\n\n\t\tthis.#classVisitor = new JpaTransformerClassVisitor(tableNameCaseConverter);\n\n\t}\n\n\tsetup(context: SetupContext): JpaTransformerSetupData {\n\t\treturn this.#setupDataGenerator.setup(context);\n\t}\n\n\tvisitField(javaField: JavaField, context: JavaFieldTransformContext<JpaTransformerSetupData>): void {\n\t\tthis.#fieldVisitor.visitField(javaField, context);\n\t}\n\n\tvisitClass(javaClass: JavaClass, context: JavaClassTransformContext<JpaTransformerSetupData>): void {\n\t\tthis.#classVisitor.visitClass(javaClass, context);\n\t}\n\n\tvisitModel(javaClassModel: JavaClassModel, context: JavaClassModelTransformContext<JpaTransformerSetupData>): void {\n\t\t// Do nothing\n\t}\n\n\tstatic withDefaultConfig() {\n\t\treturn this.builder().build();\n\t}\n\n\tstatic builder() {\n\t\treturn new JpaTransformerBuilder();\n\t}\n\n}\n","import DatabaseModelGenerator from '@/erdiagram/converter/database/model/DatabaseModelGenerator';\nimport {PartialDatabaseModelGeneratorConfig} from '@/erdiagram/converter/database/model/config/DatabaseModelGeneratorConfig';\nimport {PartialJpaTransformerConfig} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/config/JpaTransformerConfig';\nimport {JpaTransformer} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/JpaTransformer';\n\nexport default class JpaTransformerBuilder {\n\n\t#databaseModelGeneratorConfig: PartialDatabaseModelGeneratorConfig = {};\n\t#config: PartialJpaTransformerConfig = {};\n\n\tpublic withDatabaseModelGeneratorConfig(config: PartialDatabaseModelGeneratorConfig) {\n\t\tthis.#databaseModelGeneratorConfig = config;\n\t\treturn this;\n\t}\n\n\tpublic withConfig(config: PartialJpaTransformerConfig) {\n\t\tthis.#config = config;\n\t\treturn this;\n\t}\n\n\tpublic build() {\n\t\treturn new JpaTransformer(\n\t\t\t\tnew DatabaseModelGenerator(this.#databaseModelGeneratorConfig),\n\t\t\t\tthis.#config\n\t\t);\n\t}\n\n}\n","import {JpaTransformer} from './JpaTransformer';\nimport JpaTransformerBuilder from './JpaTransformerBuilder';\n\nexport {\n\tJpaTransformer,\n\tJpaTransformerBuilder\n};\n","import {isRelationshipMemberSourceMetadata} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-utils';\nimport {RelationshipMember} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {ClassModel} from '@/erdiagram/converter/oop/model/class-model-types';\n\nexport default class ClassModelSourceFinder {\n\n\tpublic findClassAndFieldFromReferencedMember(classModel: ClassModel, referencedMember: RelationshipMember) {\n\n\t\tfor (const classDescriptor of classModel.classes) {\n\t\t\tfor (const field of classDescriptor.fields) {\n\t\t\t\tif (isRelationshipMemberSourceMetadata(field.sourceMetadata) && field.sourceMetadata.referencedMember === referencedMember) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclassDescriptor,\n\t\t\t\t\t\tfield\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Cannot find field from target member \"${referencedMember.entityAlias}\"`);\n\n\t}\n\n}\n","import {\n\tDatabaseModel,\n\tTableColumnDescriptor,\n\tTableDescriptor\n} from '@/erdiagram/converter/database/model/database-model-types';\nimport {isEntitySourceMetadata} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-utils';\nimport {\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tRelationshipMember\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\n// FIXME change this name or refactor this class, as it also retrieves field and class descriptors, not only database ones\nexport default class EntityRelationshipModelSourceFinder {\n\n\tpublic findTableAndReferenceFromReferencedMember(databaseModel: DatabaseModel, referencedMember: RelationshipMember) {\n\n\t\tfor (const table of databaseModel.tables) {\n\t\t\tfor (const reference of table.references) {\n\t\t\t\tif (reference.sourceMetadata.referencedMember === referencedMember) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttable,\n\t\t\t\t\t\treference\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Cannot find reference from target member \"${referencedMember.entityAlias}\"`);\n\n\t}\n\n\tpublic findTableFromEntity(databaseModel: DatabaseModel, entity: EntityDescriptor): TableDescriptor {\n\n\t\tconst foundTable = databaseModel.tables.find(table => this.isCorrespondingTable(entity, table));\n\n\t\tif (foundTable == null) {\n\t\t\tthrow new Error(`Cannot find the corresponding table for entity \"${entity.name}\"`);\n\t\t}\n\n\t\treturn foundTable;\n\n\t}\n\n\tprivate isCorrespondingTable(entity: EntityDescriptor, tableDescriptor: TableDescriptor): boolean {\n\t\treturn isEntitySourceMetadata(tableDescriptor.sourceMetadata) && tableDescriptor.sourceMetadata.entity === entity;\n\t}\n\n\tpublic findColumnFromProperty(databaseModel: DatabaseModel, property: EntityPropertyDescriptor): TableColumnDescriptor {\n\n\t\tfor (const table of databaseModel.tables) {\n\t\t\tfor (const column of table.columns) {\n\t\t\t\tif (column.sourceMetadata.property === property) {\n\t\t\t\t\treturn column;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Cannot find the corresponding column for property \"${property.name}\"`);\n\n\t}\n\n}\n","import {SetupContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport DatabaseModelGenerator from '@/erdiagram/converter/database/model/DatabaseModelGenerator';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\n\nexport default class JpaTransformerSetupDataGenerator {\n\n\treadonly #databaseModelGenerator: DatabaseModelGenerator;\n\n\tconstructor(databaseModelGenerator: DatabaseModelGenerator) {\n\t\tthis.#databaseModelGenerator = databaseModelGenerator;\n\t}\n\n\tsetup(context: SetupContext): JpaTransformerSetupData {\n\t\treturn {\n\t\t\tdatabaseModel: this.#databaseModelGenerator.generateDatabaseModel(context.entityRelationshipModel)\n\t\t};\n\t}\n\n}\n","import {JavaClassTransformContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {JavaClass} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport {DatabaseModel, TableDescriptor} from '@/erdiagram/converter/database/model/database-model-types';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport {isEntitySourceMetadata} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-utils';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {EntityDescriptor} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {JpaAnnotationTypes} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/jpa-java-types';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\n\nexport default class JpaTransformerClassVisitor {\n\n\treadonly #tableNameCaseConverter: CaseConverter;\n\n\tconstructor(tableNameCaseConverter: CaseConverter) {\n\t\tthis.#tableNameCaseConverter = tableNameCaseConverter;\n\t}\n\n\tpublic visitClass(javaClass: JavaClass, context: JavaClassTransformContext<JpaTransformerSetupData>): void {\n\n\t\tconst table = this.findTableFromEntity(context.classDescriptor.sourceMetadata.entity, context.setupData.databaseModel);\n\n\t\tjavaClass.annotations.push(\n\t\t\t\tnew JavaAnnotation(JpaAnnotationTypes.Entity),\n\t\t\t\tnew JavaAnnotation(JpaAnnotationTypes.Table, {\n\t\t\t\t\tname: this.formatTableName(table.name)\n\t\t\t\t})\n\t\t);\n\n\t}\n\n\tprivate findTableFromEntity(entity: EntityDescriptor, databaseModel: DatabaseModel): TableDescriptor {\n\n\t\tconst foundTable = databaseModel.tables.find(table => this.isCorrespondingTable(entity, table));\n\n\t\tif (foundTable == null) {\n\t\t\tthrow new Error(`Cannot find the corresponding table for entity \"${entity.name}\"`);\n\t\t}\n\n\t\treturn foundTable;\n\n\t}\n\n\tprivate isCorrespondingTable(entity: EntityDescriptor, tableDescriptor: TableDescriptor): boolean {\n\t\treturn isEntitySourceMetadata(tableDescriptor.sourceMetadata) && tableDescriptor.sourceMetadata.entity === entity;\n\t}\n\n\tprivate formatTableName(tableName: string): string {\n\t\treturn this.#tableNameCaseConverter.convertCase(tableName);\n\t}\n\n}\n","import {JavaFieldTransformContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {JavaField} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport {DatabaseModel} from '@/erdiagram/converter/database/model/database-model-types';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport {\n\tisEntityIdentitySourceMetadata,\n\tisEntityPropertySourceMetadata\n} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-utils';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport EntityRelationshipModelSourceFinder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/EntityRelationshipModelSourceFinder';\nimport {JpaAnnotationTypes} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/jpa-java-types';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\nimport FieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/FieldAnnotationsSupplier';\n\nexport default class ColumnFieldAnnotationsSupplier implements FieldAnnotationsSupplier {\n\n\treadonly #entityRelationshipModelSourceFinder: EntityRelationshipModelSourceFinder;\n\treadonly #columnNameCaseConverter: CaseConverter;\n\n\tconstructor(\n\t\t\tentityRelationshipModelSourceFinder: EntityRelationshipModelSourceFinder,\n\t\t\tcolumnNameCaseConverter: CaseConverter\n\t) {\n\t\tthis.#entityRelationshipModelSourceFinder = entityRelationshipModelSourceFinder;\n\t\tthis.#columnNameCaseConverter = columnNameCaseConverter;\n\t}\n\n\tpublic getAnnotations(javaField: JavaField, context: JavaFieldTransformContext<JpaTransformerSetupData>): JavaAnnotation[] {\n\t\tconst columnAnnotation = this.getColumnAnnotation(context.fieldDescriptor, context.setupData.databaseModel);\n\t\treturn columnAnnotation != null ? [columnAnnotation] : [];\n\t}\n\n\tprivate getColumnAnnotation(fieldDescriptor: ClassFieldDescriptor, databaseModel: DatabaseModel): JavaAnnotation | null {\n\n\t\tconst {sourceMetadata} = fieldDescriptor;\n\n\t\tconst columnName = this.getColumnName(fieldDescriptor, databaseModel);\n\n\t\tif (columnName == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new JavaAnnotation(JpaAnnotationTypes.Column, {\n\t\t\tname: this.formatColumnName(columnName),\n\t\t\tnullable: fieldDescriptor.nullable ? undefined : false\n\t\t});\n\n\t}\n\n\tprivate getColumnName(fieldDescriptor: ClassFieldDescriptor, databaseModel: DatabaseModel): string | null {\n\n\t\tconst {sourceMetadata} = fieldDescriptor;\n\n\t\tif (isEntityIdentitySourceMetadata(sourceMetadata)) {\n\t\t\tconst table = this.#entityRelationshipModelSourceFinder.findTableFromEntity(databaseModel, sourceMetadata.entity);\n\t\t\treturn table.identityColumnName;\n\t\t}\n\n\t\tif (isEntityPropertySourceMetadata(sourceMetadata)) {\n\t\t\tconst column = this.#entityRelationshipModelSourceFinder.findColumnFromProperty(databaseModel, sourceMetadata.property);\n\t\t\treturn column.name;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tprivate formatColumnName(columnName: string): string {\n\t\treturn this.#columnNameCaseConverter.convertCase(columnName);\n\t}\n\n}\n","import {JavaFieldTransformContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {JavaField} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport {isEntityIdentitySourceMetadata} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-utils';\nimport {JpaAnnotationTypes, JpaEnumTypes} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/jpa-java-types';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\nimport FieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/FieldAnnotationsSupplier';\n\nexport default class IdentityFieldAnnotationsSupplier implements FieldAnnotationsSupplier {\n\n\tpublic getAnnotations(javaField: JavaField, context: JavaFieldTransformContext<JpaTransformerSetupData>): JavaAnnotation[] {\n\n\t\tif (!isEntityIdentitySourceMetadata(context.fieldDescriptor.sourceMetadata)) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.Id),\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.GeneratedValue, {\n\t\t\t\t// FIXME allow configuring the generation type (if IDENTITY is not valid for all scenarios)\n\t\t\t\tstrategy: JavaAnnotation.createRawParameterValue('GenerationType.IDENTITY', JpaEnumTypes.GenerationType)\n\t\t\t})\n\t\t];\n\n\t}\n\n}\n","import {JavaFieldTransformContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {\n\tJavaAnnotatedElement,\n\tJavaField\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport EntityRelationshipModelSourceFinder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/EntityRelationshipModelSourceFinder';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\nimport IdentityFieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/IdentityFieldAnnotationsSupplier';\nimport ColumnFieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/ColumnFieldAnnotationsSupplier';\nimport FieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/FieldAnnotationsSupplier';\nimport RelationshipFieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/relationship/RelationshipFieldAnnotationsSupplier';\nimport ClassModelSourceFinder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/ClassModelSourceFinder';\n\nexport default class JpaTransformerFieldVisitor {\n\n\treadonly #annotateGetters: boolean;\n\treadonly #fieldAnnotationsSuppliers: FieldAnnotationsSupplier[];\n\n\tconstructor(\n\t\t\ttableNameCaseConverter: CaseConverter,\n\t\t\tcolumnNameCaseConverter: CaseConverter,\n\t\t\tannotateGetters: boolean\n\t) {\n\n\t\tthis.#annotateGetters = annotateGetters;\n\n\t\tconst entityRelationshipModelSourceFinder = new EntityRelationshipModelSourceFinder();\n\t\tconst classModelSourceFinder = new ClassModelSourceFinder();\n\n\t\tthis.#fieldAnnotationsSuppliers = [\n\t\t\tnew IdentityFieldAnnotationsSupplier(),\n\t\t\tnew ColumnFieldAnnotationsSupplier(\n\t\t\t\t\tentityRelationshipModelSourceFinder,\n\t\t\t\t\tcolumnNameCaseConverter\n\t\t\t),\n\t\t\tnew RelationshipFieldAnnotationsSupplier(\n\t\t\t\t\tentityRelationshipModelSourceFinder,\n\t\t\t\t\tclassModelSourceFinder,\n\t\t\t\t\ttableNameCaseConverter,\n\t\t\t\t\tcolumnNameCaseConverter\n\t\t\t)\n\t\t];\n\t}\n\n\tpublic visitField(javaField: JavaField, context: JavaFieldTransformContext<JpaTransformerSetupData>): void {\n\n\t\tconst annotations = this.getFieldAnnotations(javaField, context);\n\t\tconst elementToAnnotate = this.getElementToAnnotate(javaField);\n\n\t\telementToAnnotate.annotations.push(...annotations);\n\n\t}\n\n\tprivate getFieldAnnotations(javaField: JavaField, context: JavaFieldTransformContext<JpaTransformerSetupData>) {\n\t\treturn this.#fieldAnnotationsSuppliers.flatMap(supplier => supplier.getAnnotations(javaField, context));\n\t}\n\n\tprivate getElementToAnnotate(javaField: JavaField): JavaAnnotatedElement {\n\n\t\tif (this.#annotateGetters && javaField.getter != null) {\n\t\t\treturn javaField.getter;\n\t\t}\n\n\t\treturn javaField;\n\n\t}\n\n}\n","import {JavaFieldTransformContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {JavaField} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport {DatabaseModel} from '@/erdiagram/converter/database/model/database-model-types';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport {isRelationshipMemberSourceMetadata} from '@/erdiagram/converter/oop/model/source-metadata/source-metadata-utils';\nimport CaseConverter from '@/erdiagram/converter/common/case-format/CaseConverter';\nimport {\n\tCardinality,\n\tDirection,\n\tRelationshipDescriptor,\n\tRelationshipMember\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {ClassModel} from '@/erdiagram/converter/oop/model/class-model-types';\nimport EntityRelationshipModelSourceFinder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/EntityRelationshipModelSourceFinder';\nimport {JpaAnnotationTypes} from '@/erdiagram/converter/oop/source-code-generator/java/jpa/jpa-java-types';\nimport JpaTransformerSetupData\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/setup/JpaTransformerSetupData';\nimport FieldAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/visitor/field/FieldAnnotationsSupplier';\nimport ClassModelSourceFinder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/jpa/transformer/finder/ClassModelSourceFinder';\n\nenum RelationshipCardinality {\n\tONE_TO_ONE = 'one_to_one',\n\tONE_TO_MANY = 'one_to_many',\n\tMANY_TO_ONE = 'many_to_one',\n\tMANY_TO_MANY = 'many_to_many'\n}\n\n// TODO split this class\nexport default class RelationshipFieldAnnotationsSupplier implements FieldAnnotationsSupplier {\n\n\treadonly #entityRelationshipModelSourceFinder: EntityRelationshipModelSourceFinder;\n\treadonly #classModelSourceFinder: ClassModelSourceFinder;\n\treadonly #tableNameCaseConverter: CaseConverter;\n\treadonly #columnNameCaseConverter: CaseConverter;\n\n\tconstructor(\n\t\t\tentityRelationshipModelSourceFinder: EntityRelationshipModelSourceFinder,\n\t\t\tclassModelSourceFinder: ClassModelSourceFinder,\n\t\t\ttableNameCaseConverter: CaseConverter,\n\t\t\tcolumnNameCaseConverter: CaseConverter\n\t) {\n\t\tthis.#entityRelationshipModelSourceFinder = entityRelationshipModelSourceFinder;\n\t\tthis.#classModelSourceFinder = classModelSourceFinder;\n\t\tthis.#tableNameCaseConverter = tableNameCaseConverter;\n\t\tthis.#columnNameCaseConverter = columnNameCaseConverter;\n\t}\n\n\tpublic getAnnotations(javaField: JavaField, context: JavaFieldTransformContext<JpaTransformerSetupData>): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\tfieldDescriptor: {\n\t\t\t\tsourceMetadata\n\t\t\t},\n\t\t\tclassModel,\n\t\t\tsetupData: {\n\t\t\t\tdatabaseModel\n\t\t\t}\n\t\t} = context;\n\n\t\tif (!isRelationshipMemberSourceMetadata(sourceMetadata)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst {\n\t\t\trelationship,\n\t\t\treferencedMember\n\t\t} = sourceMetadata;\n\n\t\tconst fieldBelongsToLeftMember = referencedMember === relationship.rightMember;\n\n\t\tconst relationshipCardinality = this.getRelationshipCardinality(relationship);\n\n\t\tif (relationshipCardinality === RelationshipCardinality.ONE_TO_ONE) {\n\n\t\t\tif (fieldBelongsToLeftMember) {\n\t\t\t\treturn this.getOneToOneRelationshipAnnotations(relationship.rightMember, databaseModel);\n\t\t\t}\n\n\t\t\tif (relationship.direction === Direction.BIDIRECTIONAL) {\n\t\t\t\treturn this.getMappedByOneToOneRelationshipAnnotations(relationship.rightMember, relationship.leftMember, classModel);\n\t\t\t}\n\n\t\t\treturn this.getInverseOneToOneRelationshipAnnotations(relationship.rightMember, relationship.leftMember, databaseModel);\n\n\t\t}\n\n\t\tif (relationshipCardinality === RelationshipCardinality.MANY_TO_ONE) {\n\n\t\t\tif (fieldBelongsToLeftMember) {\n\t\t\t\treturn this.getManyToOneRelationshipAnnotations(relationship.rightMember, databaseModel);\n\t\t\t}\n\n\t\t\tif (relationship.direction === Direction.BIDIRECTIONAL) {\n\t\t\t\treturn this.getMappedByOneToManyRelationshipAnnotations(relationship.rightMember, classModel);\n\t\t\t}\n\n\t\t\treturn this.getInverseOneToManyRelationshipAnnotations(relationship.rightMember, databaseModel);\n\n\t\t}\n\n\t\tif (relationshipCardinality === RelationshipCardinality.ONE_TO_MANY) {\n\n\t\t\tif (!fieldBelongsToLeftMember) {\n\t\t\t\treturn this.getManyToOneRelationshipAnnotations(relationship.leftMember, databaseModel);\n\t\t\t}\n\n\t\t\tif (relationship.direction === Direction.BIDIRECTIONAL) {\n\t\t\t\treturn this.getMappedByOneToManyRelationshipAnnotations(relationship.leftMember, classModel);\n\t\t\t}\n\n\t\t\treturn this.getInverseOneToManyRelationshipAnnotations(relationship.leftMember, databaseModel);\n\n\t\t}\n\n\t\tif (relationshipCardinality === RelationshipCardinality.MANY_TO_MANY) {\n\n\t\t\tif (fieldBelongsToLeftMember) {\n\t\t\t\treturn this.getManyToManyRelationshipAnnotations(relationship.leftMember, databaseModel);\n\t\t\t}\n\n\t\t\tif (relationship.direction === Direction.BIDIRECTIONAL) {\n\t\t\t\treturn this.getMappedByManyToManyRelationshipAnnotations(relationship.rightMember, classModel);\n\t\t\t}\n\n\t\t\treturn this.getManyToManyRelationshipAnnotations(relationship.rightMember, databaseModel);\n\n\t\t}\n\n\t\treturn [];\n\n\t}\n\n\tprivate getRelationshipCardinality(relationship: RelationshipDescriptor): RelationshipCardinality {\n\n\t\tconst isLeftMemberMany = relationship.leftMember.cardinality === Cardinality.MANY;\n\t\tconst isRightMemberMany = relationship.rightMember.cardinality === Cardinality.MANY;\n\n\t\tif (isLeftMemberMany) {\n\t\t\treturn isRightMemberMany ? RelationshipCardinality.MANY_TO_MANY : RelationshipCardinality.MANY_TO_ONE;\n\t\t} else {\n\t\t\treturn isRightMemberMany ? RelationshipCardinality.ONE_TO_MANY : RelationshipCardinality.ONE_TO_ONE;\n\t\t}\n\n\t}\n\n\tprivate getOneToOneRelationshipAnnotations(foreignMember: RelationshipMember, databaseModel: DatabaseModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\treference\n\t\t} = this.#entityRelationshipModelSourceFinder.findTableAndReferenceFromReferencedMember(databaseModel, foreignMember);\n\n\t\tconst optionalRelationship = foreignMember.cardinality === Cardinality.ZERO_OR_ONE;\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.OneToOne, {\n\t\t\t\toptional: optionalRelationship ? undefined : false\n\t\t\t}),\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.JoinColumn, {\n\t\t\t\tname: this.formatColumnName(reference.columnName),\n\t\t\t\tnullable: optionalRelationship ? undefined : false\n\t\t\t}),\n\t\t];\n\n\t}\n\n\tprivate getMappedByOneToOneRelationshipAnnotations(ownMember: RelationshipMember, foreignMember: RelationshipMember, classModel: ClassModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\tfield\n\t\t} = this.#classModelSourceFinder.findClassAndFieldFromReferencedMember(classModel, ownMember);\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.OneToOne, {\n\t\t\t\tmappedBy: field.name,\n\t\t\t\toptional: foreignMember.cardinality === Cardinality.ZERO_OR_ONE ? undefined : false\n\t\t\t}),\n\t\t];\n\t}\n\n\tprivate getInverseOneToOneRelationshipAnnotations(ownMember: RelationshipMember, foreignMember: RelationshipMember, databaseModel: DatabaseModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\ttable,\n\t\t\treference\n\t\t} = this.#entityRelationshipModelSourceFinder.findTableAndReferenceFromReferencedMember(databaseModel, ownMember);\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.OneToOne, {\n\t\t\t\toptional: foreignMember.cardinality === Cardinality.ZERO_OR_ONE ? undefined : false\n\t\t\t}),\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.JoinTable, {\n\t\t\t\tname: this.formatTableName(table.name),\n\t\t\t\tinverseJoinColumns: new JavaAnnotation(JpaAnnotationTypes.JoinColumn, {\n\t\t\t\t\tname: this.formatColumnName(reference.columnName),\n\t\t\t\t\tnullable: ownMember.cardinality === Cardinality.ZERO_OR_ONE ? undefined : false\n\t\t\t\t}),\n\t\t\t}),\n\t\t];\n\n\t}\n\n\tprivate getManyToOneRelationshipAnnotations(foreignMember: RelationshipMember, databaseModel: DatabaseModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\treference\n\t\t} = this.#entityRelationshipModelSourceFinder.findTableAndReferenceFromReferencedMember(databaseModel, foreignMember);\n\n\t\tconst optionalRelationship = foreignMember.cardinality === Cardinality.ZERO_OR_ONE;\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.ManyToOne, {\n\t\t\t\toptional: optionalRelationship ? undefined : false\n\t\t\t}),\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.JoinColumn, {\n\t\t\t\tname: this.formatColumnName(reference.columnName),\n\t\t\t\tnullable: optionalRelationship ? undefined : false\n\t\t\t}),\n\t\t];\n\n\t}\n\n\tprivate getMappedByOneToManyRelationshipAnnotations(ownMember: RelationshipMember, classModel: ClassModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\tfield\n\t\t} = this.#classModelSourceFinder.findClassAndFieldFromReferencedMember(classModel, ownMember);\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.OneToMany, {\n\t\t\t\tmappedBy: field.name\n\t\t\t}),\n\t\t];\n\t}\n\n\tprivate getInverseOneToManyRelationshipAnnotations(ownMember: RelationshipMember, databaseModel: DatabaseModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\ttable,\n\t\t\treference\n\t\t} = this.#entityRelationshipModelSourceFinder.findTableAndReferenceFromReferencedMember(databaseModel, ownMember);\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.OneToMany),\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.JoinTable, {\n\t\t\t\tname: this.formatTableName(table.name),\n\t\t\t\tinverseJoinColumns: new JavaAnnotation(JpaAnnotationTypes.JoinColumn, {\n\t\t\t\t\tname: this.formatColumnName(reference.columnName),\n\t\t\t\t\tnullable: ownMember.cardinality === Cardinality.ZERO_OR_ONE ? undefined : false\n\t\t\t\t}),\n\t\t\t}),\n\t\t];\n\n\t}\n\n\tprivate getManyToManyRelationshipAnnotations(ownMember: RelationshipMember, databaseModel: DatabaseModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\ttable,\n\t\t\treference: ownReference\n\t\t} = this.#entityRelationshipModelSourceFinder.findTableAndReferenceFromReferencedMember(databaseModel, ownMember);\n\n\t\tif (table.references.length !== 2) {\n\t\t\tthrow new Error('Relationship table has more than 2 references');\n\t\t}\n\n\t\tconst foreignReference = table.references.find(reference => reference !== ownReference)!;\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.ManyToMany),\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.JoinTable, {\n\t\t\t\tname: this.formatTableName(table.name),\n\t\t\t\tjoinColumns: new JavaAnnotation(JpaAnnotationTypes.JoinColumn, {\n\t\t\t\t\tname: this.formatColumnName(ownReference.columnName),\n\t\t\t\t\tnullable: false\n\t\t\t\t}),\n\t\t\t\tinverseJoinColumns: new JavaAnnotation(JpaAnnotationTypes.JoinColumn, {\n\t\t\t\t\tname: this.formatColumnName(foreignReference.columnName),\n\t\t\t\t\tnullable: false\n\t\t\t\t}),\n\t\t\t}),\n\t\t];\n\n\t}\n\n\tprivate getMappedByManyToManyRelationshipAnnotations(sourceMember: RelationshipMember, classModel: ClassModel): JavaAnnotation[] {\n\n\t\tconst {\n\t\t\tfield: referencedField\n\t\t} = this.#classModelSourceFinder.findClassAndFieldFromReferencedMember(classModel, sourceMember);\n\n\t\treturn [\n\t\t\tnew JavaAnnotation(JpaAnnotationTypes.ManyToMany, {\n\t\t\t\tmappedBy: referencedField.name\n\t\t\t}),\n\t\t];\n\t}\n\n\tprivate formatColumnName(columnName: string): string {\n\t\treturn this.#columnNameCaseConverter.convertCase(columnName);\n\t}\n\n\tprivate formatTableName(tableName: string): string {\n\t\treturn this.#tableNameCaseConverter.convertCase(tableName);\n\t}\n\n}\n","export * from './generator/exports';\nexport * from './java-class-model-types';\n","import {ClassDescriptor, ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {\n\tJavaClass,\n\tJavaField,\n\tJavaVisibility\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaFieldTypeResolver from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaFieldTypeResolver';\nimport JavaFieldGenerator from '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaFieldGenerator';\n\ninterface FieldGeneratedEvent {\n\tjavaField: JavaField;\n\tfieldDescriptor: ClassFieldDescriptor;\n}\n\ntype FieldGeneratedEventListener = (event: FieldGeneratedEvent) => void;\n\nexport default class JavaClassGenerator {\n\n\treadonly #generatedClassesPackage?: string;\n\treadonly #javaFieldGenerator: JavaFieldGenerator;\n\n\tconstructor(\n\t\t\tgeneratedClassesPackage: string | undefined,\n\t\t\ttypeResolver: JavaFieldTypeResolver\n\t) {\n\t\tthis.#generatedClassesPackage = generatedClassesPackage;\n\t\tthis.#javaFieldGenerator = new JavaFieldGenerator(typeResolver);\n\t}\n\n\tpublic generateJavaClass(classDescriptor: ClassDescriptor, fieldGeneratedEventListener: FieldGeneratedEventListener): JavaClass {\n\t\treturn {\n\t\t\tpackageName: this.#generatedClassesPackage,\n\t\t\tvisibility: JavaVisibility.PUBLIC,\n\t\t\tname: classDescriptor.name,\n\t\t\tannotations: [],\n\t\t\tfields: classDescriptor.fields.map(fieldDescriptor => {\n\t\t\t\tconst javaField = this.#javaFieldGenerator.generateJavaField(fieldDescriptor);\n\t\t\t\tfieldGeneratedEventListener({javaField, fieldDescriptor});\n\t\t\t\treturn javaField;\n\t\t\t})\n\t\t};\n\t}\n\n}\n","import {ClassModel} from '@/erdiagram/converter/oop/model/class-model-types';\nimport JavaFieldTypeResolver from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaFieldTypeResolver';\nimport JavaClassModelGenerationResult\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassModelGenerationResult';\nimport {PartialJavaClassModelGeneratorConfig} from '@/erdiagram/converter/oop/source-code-generator/java/model/generator/config/JavaClassModelGeneratorConfig';\nimport javaClassModelGeneratorConfigManager\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/config/JavaClassModelGeneratorConfigManager';\nimport JavaClassModelDescriptorsRepositoryBuilder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/source/JavaClassModelDescriptorsRepositoryBuilder';\nimport JavaClassGenerator from '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassGenerator';\n\nexport default class JavaClassModelGenerator {\n\n\treadonly #javaClassGenerator: JavaClassGenerator;\n\n\tconstructor(config?: PartialJavaClassModelGeneratorConfig) {\n\n\t\tconst fullConfig = javaClassModelGeneratorConfigManager.mergeWithDefaultConfig(config);\n\n\t\tconst generatedClassesPackage = fullConfig.generatedClassesPackage;\n\t\tconst typeResolver = new JavaFieldTypeResolver(fullConfig.typeBindings, generatedClassesPackage);\n\n\t\tthis.#javaClassGenerator = new JavaClassGenerator(generatedClassesPackage, typeResolver);\n\n\t}\n\n\tpublic generateJavaClassModel(classModel: ClassModel): JavaClassModelGenerationResult {\n\n\t\tconst descriptorsRepositoryBuilder = new JavaClassModelDescriptorsRepositoryBuilder();\n\n\t\tconst javaClasses = classModel.classes\n\t\t\t\t.map(classDescriptor => {\n\t\t\t\t\tconst javaClass = this.#javaClassGenerator.generateJavaClass(classDescriptor, event => {\n\t\t\t\t\t\tdescriptorsRepositoryBuilder.addField(event.javaField, event.fieldDescriptor);\n\t\t\t\t\t});\n\t\t\t\t\tdescriptorsRepositoryBuilder.addClass(javaClass, classDescriptor);\n\t\t\t\t\treturn javaClass;\n\t\t\t\t});\n\n\t\treturn {\n\t\t\tjavaClassModel: {\n\t\t\t\tclasses: javaClasses\n\t\t\t},\n\t\t\tjavaClassModelDescriptorsRepository: descriptorsRepositoryBuilder.build()\n\t\t};\n\n\t}\n\n}\n","import {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {JavaField, JavaVisibility} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaFieldTypeResolver from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaFieldTypeResolver';\nimport {capitalizeWord} from '@/erdiagram/util/string-utils';\nimport JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\n\nexport default class JavaFieldGenerator {\n\n\treadonly #typeResolver: JavaFieldTypeResolver;\n\n\tconstructor(typeResolver: JavaFieldTypeResolver) {\n\t\tthis.#typeResolver = typeResolver;\n\t}\n\n\tpublic generateJavaField(fieldDescriptor: ClassFieldDescriptor): JavaField {\n\n\t\tconst fieldType = this.#typeResolver.resolveFieldType(fieldDescriptor);\n\n\t\treturn {\n\t\t\tvisibility: JavaVisibility.PRIVATE,\n\t\t\tname: fieldDescriptor.name,\n\t\t\ttype: fieldType,\n\t\t\tannotations: [],\n\t\t\tgetter: {\n\t\t\t\tvisibility: JavaVisibility.PUBLIC,\n\t\t\t\tannotations: [],\n\t\t\t\tname: this.getGetterName(fieldDescriptor.name, fieldType)\n\t\t\t},\n\t\t\tsetter: {\n\t\t\t\tvisibility: JavaVisibility.PUBLIC,\n\t\t\t\tannotations: [],\n\t\t\t\tname: this.getSetterName(fieldDescriptor.name)\n\t\t\t},\n\t\t};\n\n\t}\n\n\tprivate getGetterName(fieldName: string, fieldType: JavaType) {\n\t\tconst capitalizedFieldName = capitalizeWord(fieldName);\n\t\treturn this.isBooleanType(fieldType) ? `is${capitalizedFieldName}` : `get${capitalizedFieldName}`;\n\t}\n\n\tprivate isBooleanType(fieldType: JavaType) {\n\t\treturn fieldType.formatCanonical() === 'boolean';\n\t}\n\n\tprivate getSetterName(fieldName: string) {\n\t\tconst capitalizedFieldName = capitalizeWord(fieldName);\n\t\treturn `set${capitalizedFieldName}`;\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport parseJavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/parseJavaType';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\nimport JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaClassModelGeneratorConfig, {PartialJavaClassModelGeneratorConfig} from '@/erdiagram/converter/oop/source-code-generator/java/model/generator/config/JavaClassModelGeneratorConfig';\n\nexport class JavaClassModelGeneratorConfigManager\n\t\textends AbstractComponentConfigManager<JavaClassModelGeneratorConfig, PartialJavaClassModelGeneratorConfig> {\n\n\tgetDefaultConfig(): JavaClassModelGeneratorConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: parseJavaType('java.lang.Long'),\n\t\t\t\t[EntityPropertyType.TEXT]: parseJavaType('java.lang.String'),\n\t\t\t\t[EntityPropertyType.LONG]: parseJavaType('java.lang.Long'),\n\t\t\t\t[EntityPropertyType.INT]: parseJavaType('java.lang.Integer'),\n\t\t\t\t[EntityPropertyType.SHORT]: parseJavaType('java.lang.Short'),\n\t\t\t\t[EntityPropertyType.DECIMAL]: parseJavaType('java.math.BigDecimal'),\n\t\t\t\t[EntityPropertyType.BOOLEAN]: parseJavaType('java.lang.Boolean'),\n\t\t\t\t[EntityPropertyType.DATE]: parseJavaType('java.time.LocalDate'),\n\t\t\t\t[EntityPropertyType.TIME]: parseJavaType('java.time.LocalTime'),\n\t\t\t\t[EntityPropertyType.DATETIME]: parseJavaType('java.time.LocalDateTime'),\n\t\t\t\t[EntityPropertyType.BLOB]: parseJavaType('byte[]')\n\t\t\t}\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: JavaClassModelGeneratorConfig, partialConfig?: PartialJavaClassModelGeneratorConfig): JavaClassModelGeneratorConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<JavaClassModelGeneratorConfig> {\n\t\treturn JsonAdapters.object<JavaClassModelGeneratorConfig>({\n\t\t\ttypeBindings: JsonAdapters.record(JsonAdapters.custom<JavaType, string>({\n\t\t\t\tadaptToJson(value) {\n\t\t\t\t\treturn value.formatCanonical();\n\t\t\t\t},\n\t\t\t\trecoverFromJson(value) {\n\t\t\t\t\treturn parseJavaType(value);\n\t\t\t\t}\n\t\t\t}))\n\t\t});\n\t}\n\n}\n\nconst javaClassModelGeneratorConfigManager = new JavaClassModelGeneratorConfigManager();\nexport default javaClassModelGeneratorConfigManager;\n","import JavaClassModelGeneratorConfig, {PartialJavaClassModelGeneratorConfig} from './JavaClassModelGeneratorConfig';\nimport javaClassModelGeneratorConfigManager, {JavaClassModelGeneratorConfigManager} from './JavaClassModelGeneratorConfigManager';\n\nexport {\n\tJavaClassModelGeneratorConfig,\n\tPartialJavaClassModelGeneratorConfig,\n\tJavaClassModelGeneratorConfigManager,\n\tjavaClassModelGeneratorConfigManager\n};\n","import JavaClassModelGenerationResult\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassModelGenerationResult';\nimport JavaClassModelGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/JavaClassModelGenerator';\n\nexport * from './config/exports';\n\nexport {\n\tJavaClassModelGenerationResult,\n\tJavaClassModelGenerator\n};\n","import {JavaClass, JavaField} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport {ClassDescriptor, ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport JavaClassModelDescriptorsRepositoryBuilder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/source/JavaClassModelDescriptorsRepositoryBuilder';\n\nexport default class JavaClassModelDescriptorsRepository {\n\n\treadonly #classDescriptorsMap: Map<JavaClass, ClassDescriptor>;\n\treadonly #fieldDescriptorsMap: Map<JavaField, ClassFieldDescriptor>;\n\n\tconstructor(\n\t\t\tclassDescriptorsMap: Map<JavaClass, ClassDescriptor>,\n\t\t\tfieldDescriptorsMap: Map<JavaField, ClassFieldDescriptor>\n\t) {\n\t\tthis.#classDescriptorsMap = classDescriptorsMap;\n\t\tthis.#fieldDescriptorsMap = fieldDescriptorsMap;\n\t}\n\n\tpublic getClassDescriptor(javaClass: JavaClass): ClassDescriptor {\n\n\t\tconst classDescriptor = this.#classDescriptorsMap.get(javaClass);\n\n\t\tif (classDescriptor == null) {\n\t\t\tthrow new Error(`Cannot find descriptor for Java class \"${javaClass.name}\"`);\n\t\t}\n\n\t\treturn classDescriptor;\n\n\t}\n\n\tpublic getFieldDescriptor(javaField: JavaField): ClassFieldDescriptor {\n\n\t\tconst fieldDescriptor = this.#fieldDescriptorsMap.get(javaField);\n\n\t\tif (fieldDescriptor == null) {\n\t\t\tthrow new Error(`Cannot find descriptor for Java field \"${javaField.name}\"`);\n\t\t}\n\n\t\treturn fieldDescriptor;\n\n\t}\n\n\tstatic builder() {\n\t\treturn new JavaClassModelDescriptorsRepositoryBuilder();\n\t}\n\n}\n","import {JavaClass, JavaField} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport {ClassDescriptor, ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport JavaClassModelDescriptorsRepository\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/source/JavaClassModelDescriptorsRepository';\n\nexport default class JavaClassModelDescriptorsRepositoryBuilder {\n\n\treadonly #classDescriptorsMap = new Map<JavaClass, ClassDescriptor>();\n\treadonly #fieldDescriptorsMap = new Map<JavaField, ClassFieldDescriptor>();\n\n\tpublic addClass(javaClass: JavaClass, classDescriptor: ClassDescriptor): this {\n\t\tthis.#classDescriptorsMap.set(javaClass, classDescriptor);\n\t\treturn this;\n\t}\n\n\tpublic addField(javaField: JavaField, fieldDescriptor: ClassFieldDescriptor): this {\n\t\tthis.#fieldDescriptorsMap.set(javaField, fieldDescriptor);\n\t\treturn this;\n\t}\n\n\tpublic build(): JavaClassModelDescriptorsRepository {\n\t\treturn new JavaClassModelDescriptorsRepository(\n\t\t\t\tnew Map(this.#classDescriptorsMap.entries()),\n\t\t\t\tnew Map(this.#fieldDescriptorsMap.entries())\n\t\t);\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\n\nexport interface JavaClassModel {\n\tclasses: JavaClass[];\n}\n\nexport interface JavaAnnotatedElement {\n\tannotations: JavaAnnotation[];\n}\n\nexport interface JavaAccessibleElement {\n\tvisibility: JavaVisibility;\n}\n\nexport enum JavaVisibility {\n\tPRIVATE = 'private',\n\tPROTECTED = 'protected',\n\tPUBLIC = 'public',\n\tPACKAGE_PRIVATE = 'package-private'\n}\n\nexport interface JavaClass extends JavaAnnotatedElement, JavaAccessibleElement {\n\tpackageName?: string;\n\tname: string;\n\tfields: JavaField[];\n}\n\nexport interface JavaField extends JavaAnnotatedElement, JavaAccessibleElement {\n\tname: string;\n\ttype: JavaType;\n\tgetter?: JavaFieldGetter;\n\tsetter?: JavaFieldSetter;\n}\n\nexport interface JavaFieldGetter extends JavaAnnotatedElement, JavaAccessibleElement {\n\tname: string;\n}\n\nexport interface JavaFieldSetter extends JavaAnnotatedElement, JavaAccessibleElement {\n\tname: string;\n}\n","import JavaClassModelTransformer\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/JavaClassModelTransformer';\nimport {SetupContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport JavaClassModelDescriptorsRepository\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/generator/source/JavaClassModelDescriptorsRepository';\n\nexport default class ApplyTransformersCommand {\n\n\treadonly #setupContext: SetupContext;\n\treadonly #javaClassModelDescriptorsRepository: JavaClassModelDescriptorsRepository;\n\treadonly #transformers: JavaClassModelTransformer[];\n\n\tconstructor(\n\t\t\tsetupContext: SetupContext,\n\t\t\tjavaClassModelDescriptorsRepository: JavaClassModelDescriptorsRepository,\n\t\t\ttransformers: JavaClassModelTransformer[]\n\t) {\n\t\tthis.#setupContext = setupContext;\n\t\tthis.#javaClassModelDescriptorsRepository = javaClassModelDescriptorsRepository;\n\t\tthis.#transformers = transformers;\n\t}\n\n\tpublic execute() {\n\t\tthis.#transformers.forEach(transformer => this.applyTransformer(transformer));\n\t}\n\n\tprivate applyTransformer<T>(transformer: JavaClassModelTransformer<T>) {\n\n\t\tconst {javaClassModel} = this.#setupContext;\n\n\t\tconst setupData = transformer.setup(this.#setupContext);\n\n\t\tjavaClassModel.classes.forEach(javaClass => {\n\n\t\t\tconst classDescriptor = this.#javaClassModelDescriptorsRepository.getClassDescriptor(javaClass)!;\n\n\t\t\tjavaClass.fields.forEach(javaField => {\n\n\t\t\t\tconst fieldDescriptor = this.#javaClassModelDescriptorsRepository.getFieldDescriptor(javaField)!;\n\n\t\t\t\treturn transformer.visitField(javaField, {\n\t\t\t\t\t...this.#setupContext,\n\t\t\t\t\tsetupData,\n\t\t\t\t\tjavaClass: javaClass,\n\t\t\t\t\tclassDescriptor,\n\t\t\t\t\tfieldDescriptor\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\ttransformer.visitClass(javaClass, {\n\t\t\t\t...this.#setupContext,\n\t\t\t\tsetupData,\n\t\t\t\tclassDescriptor\n\t\t\t});\n\n\t\t});\n\n\t\ttransformer.visitModel(javaClassModel, {\n\t\t\t...this.#setupContext,\n\t\t\tsetupData\n\t\t});\n\n\t}\n\n}\n","import {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/JavaParameterizedType';\nimport {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport FieldTypeResolver from '@/erdiagram/converter/oop/source-code-generator/common/type/FieldTypeResolver';\nimport createJavaSimpleType from '@/erdiagram/converter/oop/source-code-generator/java/type/simple/createJavaSimpleType';\nimport createJavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/createJavaParameterizedType';\n\nexport default class JavaFieldTypeResolver implements FieldTypeResolver<JavaType> {\n\n\tconstructor(\n\t\t\tprivate readonly typeBindings: Partial<Record<EntityPropertyType, JavaType>>,\n\t\t\tprivate readonly generatedClassesPackage: string | undefined\n\t) {\n\n\t}\n\n\tpublic resolveFieldType(field: ClassFieldDescriptor): JavaType {\n\t\tif (field.list) {\n\t\t\treturn this.resolveListType(field);\n\t\t} else {\n\t\t\treturn this.resolveSingleType(field);\n\t\t}\n\t}\n\n\tprivate resolveListType(field: ClassFieldDescriptor): JavaParameterizedType {\n\t\treturn createJavaParameterizedType(\n\t\t\t\t'List',\n\t\t\t\t'java.util',\n\t\t\t\t[this.resolveSingleType(field)]\n\t\t);\n\t}\n\n\tprivate resolveSingleType(field: ClassFieldDescriptor): JavaType {\n\n\t\tconst {\n\t\t\tentityType,\n\t\t\tprimitiveType\n\t\t} = field;\n\n\t\tif (entityType) {\n\n\t\t\tif (primitiveType) {\n\t\t\t\tthrow new Error('Invalid field descriptor: provided both primitive and entity types');\n\t\t\t}\n\n\t\t\treturn createJavaSimpleType(entityType, this.generatedClassesPackage);\n\n\t\t}\n\n\t\tif (!primitiveType) {\n\t\t\tthrow new Error('Invalid field descriptor: missing type');\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif (!this.typeBindings.hasOwnProperty(primitiveType)) {\n\t\t\tthrow new Error('Unsupported type: ' + primitiveType);\n\t\t}\n\n\t\treturn this.typeBindings[primitiveType]!;\n\n\t}\n\n}\n","import JavaType from './JavaType';\nimport JavaParameterizedType from './parameterized/JavaParameterizedType';\nimport parseJavaType from './parseJavaType';\nimport createJavaSimpleType from './simple/createJavaSimpleType';\nimport createJavaParameterizedType from './parameterized/createJavaParameterizedType';\nimport createJavaArrayType from './parameterized/createJavaArrayType';\nimport isJavaParameterizedType from './parameterized/isJavaParameterizedType';\n\nexport {\n\tJavaType,\n\tcreateJavaSimpleType,\n\tJavaParameterizedType,\n\tcreateJavaParameterizedType,\n\tcreateJavaArrayType,\n\tisJavaParameterizedType,\n\tparseJavaType\n};\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport {\n\tJavaAnnotationParameterSingleValue,\n\tJavaAnnotationParameterValue\n} from '@/erdiagram/converter/oop/source-code-generator/java/annotation/annotation-parameter-types';\n\n// TODO add unit tests\nexport default class JavaAnnotationUsedTypesCompiler {\n\n\tpublic getUsedTypes(annotation: JavaAnnotation): JavaType[] {\n\n\t\tconst parametersUsedTypes = Object.values(annotation.parameters)\n\t\t\t\t.filter(parameterValue => parameterValue != null)\n\t\t\t\t.flatMap(parameterValue => this.getAnnotationParameterUsedTypes(parameterValue!));\n\n\t\treturn [\n\t\t\tannotation.type,\n\t\t\t...parametersUsedTypes\n\t\t];\n\n\t}\n\n\tprivate getAnnotationParameterUsedTypes(parameterValue: JavaAnnotationParameterValue) {\n\n\t\tif (!Array.isArray(parameterValue)) {\n\t\t\treturn this.getAnnotationSingleParameterUsedTypes(parameterValue);\n\t\t}\n\n\t\treturn parameterValue.flatMap(singleParameterValue => this.getAnnotationSingleParameterUsedTypes(singleParameterValue));\n\n\t}\n\n\tprivate getAnnotationSingleParameterUsedTypes(parameterValue: JavaAnnotationParameterSingleValue): JavaType[] {\n\n\t\tif (JavaAnnotation.isRawParameterValue(parameterValue)) {\n\t\t\treturn parameterValue.usedTypes;\n\t\t}\n\n\t\tif (parameterValue instanceof JavaAnnotation) {\n\t\t\treturn this.getUsedTypes(parameterValue);\n\t\t}\n\n\t\treturn [];\n\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport {JavaClass} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport JavaAnnotationUsedTypesCompiler\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/import/JavaAnnotationUsedTypesCompiler';\n\n// TODO add unit tests\nexport default class JavaClassUsedTypesCompiler {\n\n\treadonly #javaAnnotationUsedTypesCompiler = new JavaAnnotationUsedTypesCompiler();\n\n\tpublic getUsedTypes(javaClass: JavaClass): JavaType[] {\n\n\t\tconst usedTypes: JavaType[] = [];\n\n\t\tusedTypes.push(...this.getAnnotationsUsedTypes(javaClass.annotations));\n\n\t\tjavaClass.fields.forEach(javaField => {\n\n\t\t\tusedTypes.push(javaField.type);\n\n\t\t\tusedTypes.push(...this.getAnnotationsUsedTypes(javaField.annotations));\n\t\t\tusedTypes.push(...this.getAnnotationsUsedTypes(javaField.getter?.annotations ?? []));\n\t\t\tusedTypes.push(...this.getAnnotationsUsedTypes(javaField.setter?.annotations ?? []));\n\n\t\t});\n\n\t\treturn usedTypes;\n\n\t}\n\n\tprivate getAnnotationsUsedTypes(annotations: JavaAnnotation[]): JavaType[] {\n\t\treturn annotations.flatMap(annotation => this.#javaAnnotationUsedTypesCompiler.getUsedTypes(annotation));\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport {removeDuplicates} from '@/erdiagram/util/array-utils';\nimport isJavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/isJavaParameterizedType';\n\nconst JAVA_LANG_PACKAGE = 'java.lang';\n\n// TODO add unit tests\nexport default class JavaImportStatementsGenerator {\n\n\treadonly #currentPackage?: string;\n\n\tconstructor(currentPackage?: string) {\n\t\tthis.#currentPackage = currentPackage;\n\t}\n\n\tpublic generateImportStatements(javaTypes: JavaType[]): string[] {\n\n\t\tconst importStatements = this.unrollTypesRecursively(javaTypes)\n\t\t\t\t.filter(javaType => this.isImportRequired(javaType))\n\t\t\t\t.map(javaType => `import ${javaType.canonicalName};`);\n\n\t\treturn removeDuplicates(importStatements).sort();\n\n\t}\n\n\tprivate unrollTypesRecursively(javaTypes: ReadonlyArray<JavaType>, appendTo: JavaType[] = []): JavaType[] {\n\n\t\tfor (const javaType of javaTypes) {\n\n\t\t\tappendTo.push(javaType);\n\n\t\t\tif (isJavaParameterizedType(javaType)) {\n\t\t\t\tthis.unrollTypesRecursively(javaType.parameterTypes, appendTo);\n\t\t\t}\n\n\t\t}\n\n\t\treturn appendTo;\n\n\t}\n\n\tprivate isImportRequired(javaType: JavaType): boolean {\n\t\treturn !!javaType.packageName\n\t\t\t\t&& javaType.packageName !== JAVA_LANG_PACKAGE\n\t\t\t\t&& javaType.packageName !== this.#currentPackage;\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/JavaParameterizedType';\n\nexport default function createJavaArrayType(parameterType: JavaType): JavaParameterizedType {\n\treturn new JavaArrayTypeImpl(parameterType);\n}\n\nclass JavaArrayTypeImpl implements JavaParameterizedType {\n\n\treadonly #name: string;\n\treadonly #canonicalName: string;\n\treadonly #parameterType: JavaType;\n\n\tconstructor(parameterType: JavaType) {\n\t\tthis.#name = `${parameterType.name}[]`;\n\t\tthis.#canonicalName = `${parameterType.canonicalName}[]`;\n\t\tthis.#parameterType = parameterType;\n\t}\n\n\tget canonicalName() {\n\t\treturn this.#canonicalName;\n\t}\n\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\tget packageName() {\n\t\treturn undefined;\n\t}\n\n\tget parameterTypes() {\n\t\treturn [this.#parameterType];\n\t}\n\n\tformatSimple() {\n\t\tconst formattedParameterType = this.#parameterType.formatSimple();\n\t\treturn `${formattedParameterType}[]`;\n\t}\n\n\tformatCanonical() {\n\t\tconst formattedParameterType = this.#parameterType.formatCanonical();\n\t\treturn `${formattedParameterType}[]`;\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/JavaParameterizedType';\n\nexport default function createJavaParameterizedType(name: string, packageName: string | undefined, parameterTypes: JavaType[]): JavaParameterizedType {\n\treturn new JavaParameterizedTypeImpl(name, packageName, parameterTypes);\n}\n\nclass JavaParameterizedTypeImpl implements JavaParameterizedType {\n\n\treadonly #name: string;\n\treadonly #packageName?: string;\n\treadonly #canonicalName: string;\n\treadonly #parameterTypes: JavaType[];\n\n\tconstructor(name: string, packageName: string | undefined, parameterTypes: JavaType[]) {\n\t\tthis.#name = name;\n\t\tthis.#packageName = packageName;\n\t\tthis.#canonicalName = packageName ? `${packageName}.${name}` : name;\n\t\tthis.#parameterTypes = parameterTypes;\n\t}\n\n\tget canonicalName() {\n\t\treturn this.#canonicalName;\n\t}\n\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\tget packageName() {\n\t\treturn this.#packageName;\n\t}\n\n\tget parameterTypes() {\n\t\treturn this.#parameterTypes;\n\t}\n\n\tformatSimple() {\n\t\tconst formattedParameterTypes = this.#parameterTypes.map(parameterType => parameterType.formatSimple()).join(', ');\n\t\treturn `${this.#name}<${formattedParameterTypes}>`;\n\t}\n\n\tformatCanonical() {\n\t\tconst formattedParameterTypes = this.#parameterTypes.map(parameterType => parameterType.formatCanonical()).join(', ');\n\t\treturn `${this.#canonicalName}<${formattedParameterTypes}>`;\n\t}\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport JavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/JavaParameterizedType';\n\nexport default function isJavaParameterizedType(javaType: JavaType): javaType is JavaParameterizedType {\n\treturn Array.isArray((javaType as JavaParameterizedType).parameterTypes);\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\nimport createJavaSimpleType from '@/erdiagram/converter/oop/source-code-generator/java/type/simple/createJavaSimpleType';\nimport createJavaParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/createJavaParameterizedType';\nimport createJavaArrayType from '@/erdiagram/converter/oop/source-code-generator/java/type/parameterized/createJavaArrayType';\n\nconst RAW_TYPE_REGEX = /^(?:[a-zA-Z_$][a-zA-Z_$\\d]*\\.)*[a-zA-Z_$][a-zA-Z_$\\d]*$/;\nconst ARRAY_TYPE_REGEX = /^(.*)\\[\\s*]\\s*$/;\nconst PACKAGE_SEPARATOR = '.';\n\nexport default function parseJavaType(text: string): JavaType {\n\ttry {\n\t\treturn parseJavaTypeInternal(text);\n\t} catch (error) {\n\t\tthrow new Error('Malformed Java type: ' + text);\n\t}\n}\n\nfunction parseJavaTypeInternal(text: string): JavaType {\n\n\tconst trimmedText = text.trim();\n\n\tif (ARRAY_TYPE_REGEX.test(trimmedText)) {\n\t\tconst [fullMatch, rawTypeText] = ARRAY_TYPE_REGEX.exec(trimmedText)!;\n\t\treturn createJavaArrayType(parseJavaTypeInternal(rawTypeText));\n\t}\n\n\tconst startOfParameterTypes = trimmedText.indexOf('<');\n\n\tif (startOfParameterTypes === -1) {\n\t\treturn parseJavaRawType(trimmedText);\n\t}\n\n\tconst endOfParameterTypes = trimmedText.lastIndexOf('>');\n\n\tif (endOfParameterTypes === -1) {\n\t\tthrow new Error('Missing end character of parameter types (>)');\n\t}\n\n\tif (endOfParameterTypes !== trimmedText.length - 1) {\n\t\tthrow new Error('Unexpected characters found after parameter types');\n\t}\n\n\tconst rawType = parseJavaRawType(trimmedText.substring(0, startOfParameterTypes));\n\n\tconst parameterTypes = splitParameterTypes(trimmedText.substring(startOfParameterTypes + 1, endOfParameterTypes))\n\t\t\t.map(parameterType => parseJavaTypeInternal(parameterType));\n\n\treturn createJavaParameterizedType(rawType.name, rawType.packageName, parameterTypes);\n\n}\n\nfunction parseJavaRawType(text: string): JavaType {\n\n\tconst trimmedText = trimRawJavaTypeParts(text.trim());\n\n\tif (!RAW_TYPE_REGEX.test(trimmedText)) {\n\t\tthrow new Error(`Illegal Java type format: ${text}`);\n\t}\n\n\tconst lastDotIndex = trimmedText.lastIndexOf(PACKAGE_SEPARATOR);\n\n\tif (lastDotIndex === -1) {\n\t\treturn createJavaSimpleType(trimmedText);\n\t}\n\n\tconst packageName = trimmedText.substring(0, lastDotIndex);\n\tconst className = trimmedText.substring(lastDotIndex + 1);\n\n\treturn createJavaSimpleType(className, packageName);\n\n}\n\nfunction trimRawJavaTypeParts(packageName: string): string {\n\treturn packageName.split(PACKAGE_SEPARATOR).map(e => e.trim()).join(PACKAGE_SEPARATOR);\n}\n\nfunction splitParameterTypes(parameterTypesText: string): string[] {\n\n\tif (!parameterTypesText.includes(',')) {\n\t\treturn [parameterTypesText];\n\t}\n\n\tconst commaIndices: number[] = [];\n\n\tlet nestedLevelsCount = 0;\n\n\t[...parameterTypesText].forEach((character, index) => {\n\t\tswitch (character) {\n\t\t\tcase ',':\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tnestedLevelsCount++;\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tthrow new Error('Unexpected character \">\"');\n\t\t\t\t}\n\t\t\t\tnestedLevelsCount--;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst splittedParameterTypes: string[] = [];\n\tlet startIndex = 0;\n\n\tfor (const commaIndex of commaIndices) {\n\t\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex, commaIndex));\n\t\tstartIndex = commaIndex + 1;\n\t}\n\n\t// Text after the last comma\n\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex));\n\n\treturn splittedParameterTypes;\n\n}\n","import JavaType from '@/erdiagram/converter/oop/source-code-generator/java/type/JavaType';\n\nexport default function createJavaSimpleType(name: string, packageName?: string): JavaType {\n\treturn new JavaSimpleTypeImpl(name, packageName);\n}\n\nclass JavaSimpleTypeImpl implements JavaType {\n\n\treadonly #name: string;\n\treadonly #packageName?: string;\n\treadonly #canonicalName: string;\n\n\tconstructor(name: string, packageName?: string) {\n\t\tthis.#name = name;\n\t\tthis.#packageName = packageName;\n\t\tthis.#canonicalName = packageName ? `${packageName}.${name}` : name;\n\t}\n\n\tget canonicalName() {\n\t\treturn this.#canonicalName;\n\t}\n\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\tget packageName() {\n\t\treturn this.#packageName;\n\t}\n\n\tformatSimple() {\n\t\treturn this.#name;\n\t}\n\n\tformatCanonical() {\n\t\treturn this.#canonicalName;\n\t}\n\n}\n","import createJavaSimpleType from '@/erdiagram/converter/oop/source-code-generator/java/type/simple/createJavaSimpleType';\n\nconst VALIDATION_ANNOTATIONS_PACKAGE = 'javax.validation.constraints';\n\nconst JavaValidationAnnotationTypes = {\n\tNotNull: createJavaSimpleType('NotNull', VALIDATION_ANNOTATIONS_PACKAGE),\n\tNotEmpty: createJavaSimpleType('NotEmpty', VALIDATION_ANNOTATIONS_PACKAGE),\n\tNotBlank: createJavaSimpleType('NotBlank', VALIDATION_ANNOTATIONS_PACKAGE),\n\tSize: createJavaSimpleType('Size', VALIDATION_ANNOTATIONS_PACKAGE)\n};\n\nexport default JavaValidationAnnotationTypes;\n","import JavaClassModelTransformer\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/JavaClassModelTransformer';\nimport {\n\tJavaClassModelTransformContext,\n\tJavaClassTransformContext,\n\tJavaFieldTransformContext,\n\tSetupContext\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {\n\tJavaClass,\n\tJavaClassModel,\n\tJavaField\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaxValidationAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/visitor/JavaxValidationAnnotationsSupplier';\nimport {PartialJavaxValidationTransformerConfig} from '@/erdiagram/converter/oop/source-code-generator/java/validation/config/JavaxValidationTransformerConfig';\nimport javaxValidationTransformerConfigManager\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/config/JavaxValidationTransformerConfigManager';\nimport JavaxValidationFieldVisitor\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/visitor/JavaxValidationFieldVisitor';\n\nexport default class JavaxValidationTransformer implements JavaClassModelTransformer {\n\n\treadonly #javaxValidationFieldVisitor: JavaxValidationFieldVisitor;\n\n\tconstructor(config?: PartialJavaxValidationTransformerConfig) {\n\n\t\tconst {\n\t\t\tnotNullTextValidationStrategy,\n\t\t\tnotNullBlobValidationStrategy,\n\t\t\tannotateGetters\n\t\t} = javaxValidationTransformerConfigManager.mergeWithDefaultConfig(config);\n\n\t\tconst javaxValidationAnnotationsSupplier = new JavaxValidationAnnotationsSupplier(notNullTextValidationStrategy, notNullBlobValidationStrategy);\n\n\t\tthis.#javaxValidationFieldVisitor = new JavaxValidationFieldVisitor(\n\t\t\t\tjavaxValidationAnnotationsSupplier,\n\t\t\t\tannotateGetters\n\t\t);\n\n\t}\n\n\tsetup(context: SetupContext): unknown {\n\t\treturn undefined;\n\t}\n\n\tvisitField(javaField: JavaField, context: JavaFieldTransformContext<unknown>): void {\n\t\tthis.#javaxValidationFieldVisitor.visitField(javaField, context);\n\t}\n\n\tvisitClass(javaClass: JavaClass, context: JavaClassTransformContext<unknown>): void {\n\t\t// Do nothing\n\t}\n\n\tvisitModel(javaClassModel: JavaClassModel, context: JavaClassModelTransformContext<unknown>): void {\n\t\t// Do nothing\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport JavaxValidationTransformerConfig, {PartialJavaxValidationTransformerConfig} from '@/erdiagram/converter/oop/source-code-generator/java/validation/config/JavaxValidationTransformerConfig';\nimport NotNullTextValidationStrategy\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullTextValidationStrategy';\nimport NotNullBlobValidationStrategy\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullBlobValidationStrategy';\n\nexport class JavaxValidationTransformerConfigManager\n\t\textends AbstractComponentConfigManager<JavaxValidationTransformerConfig, PartialJavaxValidationTransformerConfig> {\n\n\tgetDefaultConfig(): JavaxValidationTransformerConfig {\n\t\treturn {\n\t\t\tnotNullTextValidationStrategy: NotNullTextValidationStrategy.NOT_NULL,\n\t\t\tnotNullBlobValidationStrategy: NotNullBlobValidationStrategy.NOT_NULL,\n\t\t\tannotateGetters: false\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: JavaxValidationTransformerConfig, partialConfig?: PartialJavaxValidationTransformerConfig): JavaxValidationTransformerConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n}\n\nconst javaxValidationTransformerConfigManager = new JavaxValidationTransformerConfigManager();\nexport default javaxValidationTransformerConfigManager;\n","import JavaxValidationTransformerConfig, {PartialJavaxValidationTransformerConfig} from './JavaxValidationTransformerConfig';\nimport javaxValidationTransformerConfigManager, {JavaxValidationTransformerConfigManager} from './JavaxValidationTransformerConfigManager';\n\nexport {\n\tJavaxValidationTransformerConfig,\n\tPartialJavaxValidationTransformerConfig,\n\tJavaxValidationTransformerConfigManager,\n\tjavaxValidationTransformerConfigManager\n};\n","import NotNullTextValidationStrategy\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullTextValidationStrategy';\nimport NotNullBlobValidationStrategy\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullBlobValidationStrategy';\nimport JavaxValidationTransformer\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/JavaxValidationTransformer';\n\nexport * from './config/exports';\n\nexport {\n\tNotNullTextValidationStrategy,\n\tNotNullBlobValidationStrategy,\n\tJavaxValidationTransformer\n};\n","enum NotNullBlobValidationStrategy {\n\tNOT_NULL = 'not_null',\n\tNOT_EMPTY = 'not_empty'\n}\n\nexport default NotNullBlobValidationStrategy;\n","enum NotNullTextValidationStrategy {\n\tNOT_NULL = 'not_null',\n\tNOT_EMPTY = 'not_empty',\n\tNOT_BLANK = 'not_blank'\n}\n\nexport default NotNullTextValidationStrategy;\n","import {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport NotNullTextValidationStrategy\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullTextValidationStrategy';\nimport {removeNullableValues} from '@/erdiagram/util/array-utils';\nimport JavaValidationAnnotationTypes\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/JavaValidationAnnotationTypes';\nimport NotNullBlobValidationStrategy\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/strategy/NotNullBlobValidationStrategy';\nimport JavaAnnotation from '@/erdiagram/converter/oop/source-code-generator/java/annotation/JavaAnnotation';\nimport ERDiagramSyntaxError from '@/erdiagram/parser/types/error/ERDiagramSyntaxError';\n\nexport default class JavaxValidationAnnotationsSupplier {\n\n\tconstructor(\n\t\t\tprivate readonly notNullTextValidationStrategy: NotNullTextValidationStrategy,\n\t\t\tprivate readonly notNullBlobValidationStrategy: NotNullBlobValidationStrategy,\n\t) {\n\n\t}\n\n\tpublic getAnnotations(field: ClassFieldDescriptor): JavaAnnotation[] {\n\t\treturn removeNullableValues([\n\t\t\tthis.getNotNullAnnotation(field),\n\t\t\tthis.getSizeAnnotation(field)\n\t\t]);\n\t}\n\n\tprivate getNotNullAnnotation(field: ClassFieldDescriptor): JavaAnnotation | null {\n\n\t\tif (field.nullable) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst annotationType = this.getNotNullAnnotationForField(field);\n\n\t\treturn new JavaAnnotation(annotationType);\n\n\t}\n\n\tprivate getSizeAnnotation(field: ClassFieldDescriptor): JavaAnnotation | null {\n\n\t\tconst {maxSize} = field;\n\n\t\tif (maxSize == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new JavaAnnotation(\n\t\t\t\tJavaValidationAnnotationTypes.Size,\n\t\t\t\t{max: maxSize}\n\t\t);\n\n\t}\n\n\tprivate getNotNullAnnotationForField(field: ClassFieldDescriptor) {\n\t\tswitch (field.primitiveType) {\n\t\t\tcase EntityPropertyType.TEXT:\n\t\t\t\treturn this.getNotNullAnnotationForTextType();\n\t\t\tcase EntityPropertyType.BLOB:\n\t\t\t\treturn this.getNotNullAnnotationForBlobType();\n\t\t\tdefault:\n\t\t\t\treturn JavaValidationAnnotationTypes.NotNull;\n\t\t}\n\t}\n\n\tprivate getNotNullAnnotationForTextType() {\n\t\tswitch (this.notNullTextValidationStrategy) {\n\t\t\tcase NotNullTextValidationStrategy.NOT_NULL:\n\t\t\t\treturn JavaValidationAnnotationTypes.NotNull;\n\t\t\tcase NotNullTextValidationStrategy.NOT_EMPTY:\n\t\t\t\treturn JavaValidationAnnotationTypes.NotEmpty;\n\t\t\tcase NotNullTextValidationStrategy.NOT_BLANK:\n\t\t\t\treturn JavaValidationAnnotationTypes.NotBlank;\n\t\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new ERDiagramSyntaxError(`Unknown statement type`);\n\t\t}\n\t}\n\n\tprivate getNotNullAnnotationForBlobType() {\n\t\tswitch (this.notNullBlobValidationStrategy) {\n\t\t\tcase NotNullBlobValidationStrategy.NOT_NULL:\n\t\t\t\treturn JavaValidationAnnotationTypes.NotNull;\n\t\t\tcase NotNullBlobValidationStrategy.NOT_EMPTY:\n\t\t\t\treturn JavaValidationAnnotationTypes.NotEmpty;\n\t\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new ERDiagramSyntaxError(`Unknown statement type`);\n\t\t}\n\t}\n\n}\n","import {JavaFieldTransformContext} from '@/erdiagram/converter/oop/source-code-generator/java/model/transformer/java-class-model-transformer-context-types';\nimport {\n\tJavaAnnotatedElement,\n\tJavaField\n} from '@/erdiagram/converter/oop/source-code-generator/java/model/java-class-model-types';\nimport JavaxValidationAnnotationsSupplier\n\tfrom '@/erdiagram/converter/oop/source-code-generator/java/validation/visitor/JavaxValidationAnnotationsSupplier';\n\nexport default class JavaxValidationFieldVisitor {\n\n\treadonly #javaValidationAnnotationsGenerator: JavaxValidationAnnotationsSupplier;\n\treadonly #annotateGetters: boolean;\n\n\tconstructor(\n\t\t\tjavaValidationAnnotationsGenerator: JavaxValidationAnnotationsSupplier,\n\t\t\tannotateGetters: boolean\n\t) {\n\t\tthis.#javaValidationAnnotationsGenerator = javaValidationAnnotationsGenerator;\n\t\tthis.#annotateGetters = annotateGetters;\n\t}\n\n\tvisitField(javaField: JavaField, context: JavaFieldTransformContext<unknown>): void {\n\n\t\tconst annotations = this.#javaValidationAnnotationsGenerator.getAnnotations(context.fieldDescriptor);\n\t\tconst elementToAnnotate = this.getElementToAnnotate(javaField);\n\n\t\telementToAnnotate.annotations.push(...annotations);\n\n\t}\n\n\tprivate getElementToAnnotate(javaField: JavaField): JavaAnnotatedElement {\n\n\t\tif (this.#annotateGetters && javaField.getter != null) {\n\t\t\treturn javaField.getter;\n\t\t}\n\n\t\treturn javaField;\n\n\t}\n\n}\n","import {capitalizeWord} from '@/erdiagram/util/string-utils';\nimport {ClassDescriptor, ClassFieldDescriptor, ClassModel} from '@/erdiagram/converter/oop/model/class-model-types';\nimport {indentLines} from '@/erdiagram/util/indent-utils';\nimport ClassModelToCodeConverter from '@/erdiagram/converter/oop/source-code-generator/ClassModelToCodeConverter';\nimport TypeScriptClassModelToCodeConverterConfig, {PartialTypeScriptClassModelToCodeConverterConfig} from '@/erdiagram/converter/oop/source-code-generator/typescript/config/TypeScriptClassModelToCodeConverterConfig';\nimport typescriptClassModelToCodeConverterConfigManager\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/config/TypeScriptClassModelToCodeConverterConfigManager';\nimport TypeScriptTypeResolver from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptTypeResolver';\n\nexport default class TypeScriptClassModelToCodeConverter implements ClassModelToCodeConverter {\n\n\tprivate readonly config: TypeScriptClassModelToCodeConverterConfig;\n\tprivate readonly typeResolver: TypeScriptTypeResolver;\n\n\tconstructor(config?: PartialTypeScriptClassModelToCodeConverterConfig) {\n\t\tthis.config = typescriptClassModelToCodeConverterConfigManager.mergeWithDefaultConfig(config);\n\t\tthis.typeResolver = new TypeScriptTypeResolver(this.config.typeBindings);\n\t}\n\n\tpublic convertToCode(classModel: ClassModel): string {\n\t\treturn classModel.classes\n\t\t\t\t.map(classDescriptor => this.generateClass(classDescriptor))\n\t\t\t\t.join('\\n\\n');\n\t}\n\n\tprivate generateClass(classDescriptor: ClassDescriptor): string {\n\n\t\tconst interfaceName = capitalizeWord(classDescriptor.name);\n\n\t\tconst fieldsLines: string[] = classDescriptor.fields\n\t\t\t\t.map(field => this.createField(field));\n\n\t\tconst classOuterLines = [\n\t\t\t`interface ${interfaceName} {`\n\t\t];\n\n\t\tclassOuterLines.push(...indentLines(fieldsLines));\n\n\t\tclassOuterLines.push(`}`);\n\n\t\treturn classOuterLines.join('\\n');\n\n\t}\n\n\tprivate createField(field: ClassFieldDescriptor) {\n\n\t\tconst fieldName = field.name;\n\n\t\tconst typescriptType = this.typeResolver.resolveFieldType(field);\n\t\tconst formattedTypeScriptType = typescriptType.format();\n\t\tconst optionalIndicatorChar = field.nullable ? '?' : '';\n\n\t\treturn `${fieldName}${optionalIndicatorChar}: ${formattedTypeScriptType};`;\n\n\t}\n\n}\n","import {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport ClassModelGenerator from '@/erdiagram/converter/oop/model/ClassModelGenerator';\nimport EntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/EntityRelationshipModelSourceCodeGenerator';\nimport TypeScriptClassModelToCodeConverter\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptClassModelToCodeConverter';\nimport TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder';\n\nexport default class TypeScriptEntityRelationshipModelSourceCodeGenerator\n\t\timplements EntityRelationshipModelSourceCodeGenerator {\n\n\treadonly #classModelGenerator: ClassModelGenerator;\n\treadonly #typeScriptClassModelToCodeConverter: TypeScriptClassModelToCodeConverter;\n\n\tconstructor(\n\t\t\tclassModelGenerator: ClassModelGenerator,\n\t\t\ttypeScriptClassModelToCodeConverter: TypeScriptClassModelToCodeConverter\n\t) {\n\t\tthis.#classModelGenerator = classModelGenerator;\n\t\tthis.#typeScriptClassModelToCodeConverter = typeScriptClassModelToCodeConverter;\n\t}\n\n\tgenerateSourceCode(entityRelationshipModel: EntityRelationshipModel): string {\n\t\tconst classModel = this.#classModelGenerator.generateClassModel(entityRelationshipModel);\n\t\treturn this.#typeScriptClassModelToCodeConverter.convertToCode(classModel);\n\t}\n\n\tstatic withDefaultConfig() {\n\t\treturn this.builder().build();\n\t}\n\n\tstatic builder() {\n\t\treturn new TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder();\n\t}\n\n}\n","import ClassModelGenerator from '@/erdiagram/converter/oop/model/ClassModelGenerator';\nimport {PartialClassModelGeneratorConfig} from '@/erdiagram/converter/oop/model/config/ClassModelGeneratorConfig';\nimport TypeScriptClassModelToCodeConverter\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptClassModelToCodeConverter';\nimport {PartialTypeScriptClassModelToCodeConverterConfig} from '@/erdiagram/converter/oop/source-code-generator/typescript/config/TypeScriptClassModelToCodeConverterConfig';\nimport TypeScriptEntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptEntityRelationshipModelSourceCodeGenerator';\n\nexport default class TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder {\n\n\t#classModelGeneratorConfig: PartialClassModelGeneratorConfig = {};\n\t#typeScriptClassModelToCodeConverterConfig: PartialTypeScriptClassModelToCodeConverterConfig = {};\n\n\tpublic withClassModelGeneratorConfig(config: PartialClassModelGeneratorConfig) {\n\t\tthis.#classModelGeneratorConfig = config;\n\t\treturn this;\n\t}\n\n\tpublic withTypeScriptClassModelToCodeConverterConfig(config: PartialTypeScriptClassModelToCodeConverterConfig) {\n\t\tthis.#typeScriptClassModelToCodeConverterConfig = config;\n\t\treturn this;\n\t}\n\n\tpublic build() {\n\t\treturn new TypeScriptEntityRelationshipModelSourceCodeGenerator(\n\t\t\t\tnew ClassModelGenerator(this.#classModelGeneratorConfig),\n\t\t\t\tnew TypeScriptClassModelToCodeConverter(this.#typeScriptClassModelToCodeConverterConfig)\n\t\t);\n\t}\n\n}\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport TypeScriptClassModelToCodeConverterConfig, {PartialTypeScriptClassModelToCodeConverterConfig} from '@/erdiagram/converter/oop/source-code-generator/typescript/config/TypeScriptClassModelToCodeConverterConfig';\nimport parseTypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/parseTypeScriptType';\nimport {JsonAdapter, JsonAdapters} from 'true-json';\nimport TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\n\nexport class TypeScriptClassModelToCodeConverterConfigManager\n\t\textends AbstractComponentConfigManager<TypeScriptClassModelToCodeConverterConfig, PartialTypeScriptClassModelToCodeConverterConfig> {\n\n\tgetDefaultConfig(): TypeScriptClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\ttypeBindings: {\n\t\t\t\t[EntityPropertyType.IDENTITY]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.TEXT]: parseTypeScriptType('string'),\n\t\t\t\t[EntityPropertyType.LONG]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.INT]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.SHORT]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.DECIMAL]: parseTypeScriptType('number'),\n\t\t\t\t[EntityPropertyType.BOOLEAN]: parseTypeScriptType('boolean'),\n\t\t\t\t[EntityPropertyType.DATE]: parseTypeScriptType('Date'),\n\t\t\t\t[EntityPropertyType.TIME]: parseTypeScriptType('Date'),\n\t\t\t\t[EntityPropertyType.DATETIME]: parseTypeScriptType('Date'),\n\t\t\t\t[EntityPropertyType.BLOB]: parseTypeScriptType('Uint8Array'),\n\t\t\t}\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: TypeScriptClassModelToCodeConverterConfig, partialConfig?: PartialTypeScriptClassModelToCodeConverterConfig): TypeScriptClassModelToCodeConverterConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig,\n\t\t\ttypeBindings: {\n\t\t\t\t...fullConfig.typeBindings,\n\t\t\t\t...partialConfig?.typeBindings\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getJsonAdapter(): JsonAdapter<TypeScriptClassModelToCodeConverterConfig> {\n\t\treturn JsonAdapters.object<TypeScriptClassModelToCodeConverterConfig>({\n\t\t\ttypeBindings: JsonAdapters.record(JsonAdapters.custom<TypeScriptType, string>({\n\t\t\t\tadaptToJson(value) {\n\t\t\t\t\treturn value.format();\n\t\t\t\t},\n\t\t\t\trecoverFromJson(value) {\n\t\t\t\t\treturn parseTypeScriptType(value);\n\t\t\t\t}\n\t\t\t}))\n\t\t});\n\t}\n\n}\n\nconst typescriptClassModelToCodeConverterConfigManager = new TypeScriptClassModelToCodeConverterConfigManager();\nexport default typescriptClassModelToCodeConverterConfigManager;\n","import TypeScriptClassModelToCodeConverterConfig, {PartialTypeScriptClassModelToCodeConverterConfig} from './TypeScriptClassModelToCodeConverterConfig';\nimport typescriptClassModelToCodeConverterConfigManager, {TypeScriptClassModelToCodeConverterConfigManager} from './TypeScriptClassModelToCodeConverterConfigManager';\n\nexport {\n\tTypeScriptClassModelToCodeConverterConfig,\n\tPartialTypeScriptClassModelToCodeConverterConfig,\n\tTypeScriptClassModelToCodeConverterConfigManager,\n\ttypescriptClassModelToCodeConverterConfigManager\n};\n","import TypeScriptClassModelToCodeConverter from './TypeScriptClassModelToCodeConverter';\nimport TypeScriptEntityRelationshipModelSourceCodeGenerator\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptEntityRelationshipModelSourceCodeGenerator';\nimport TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/TypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder';\n\nexport * from './config/exports';\nexport * from './type/exports';\n\nexport {\n\tTypeScriptClassModelToCodeConverter,\n\tTypeScriptEntityRelationshipModelSourceCodeGenerator,\n\tTypeScriptEntityRelationshipModelSourceCodeGeneratorBuilder\n};\n","import {ClassFieldDescriptor} from '@/erdiagram/converter/oop/model/class-model-types';\nimport TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\nimport TypeScriptParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/TypeScriptParameterizedType';\nimport {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport FieldTypeResolver from '@/erdiagram/converter/oop/source-code-generator/common/type/FieldTypeResolver';\nimport createTypeScriptArrayType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/createTypeScriptArrayType';\nimport createTypeScriptSimpleType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/simple/createTypeScriptSimpleType';\n\nexport default class TypeScriptTypeResolver implements FieldTypeResolver<TypeScriptType> {\n\n\tconstructor(\n\t\t\tprivate readonly typeBindings: Partial<Record<EntityPropertyType, TypeScriptType>>\n\t) {\n\n\t}\n\n\tpublic resolveFieldType(field: ClassFieldDescriptor): TypeScriptType {\n\t\tif (field.list) {\n\t\t\treturn this.resolveListType(field);\n\t\t} else {\n\t\t\treturn this.resolveSingleType(field);\n\t\t}\n\t}\n\n\tprivate resolveListType(field: ClassFieldDescriptor): TypeScriptParameterizedType {\n\t\treturn createTypeScriptArrayType(this.resolveSingleType(field));\n\t}\n\n\tprivate resolveSingleType(field: ClassFieldDescriptor): TypeScriptType {\n\n\t\tconst {\n\t\t\tentityType,\n\t\t\tprimitiveType\n\t\t} = field;\n\n\t\tif (entityType) {\n\n\t\t\tif (primitiveType) {\n\t\t\t\tthrow new Error('Invalid field descriptor: provided both primitive and entity types');\n\t\t\t}\n\n\t\t\treturn createTypeScriptSimpleType(entityType);\n\n\t\t}\n\n\t\tif (!primitiveType) {\n\t\t\tthrow new Error('Invalid field descriptor: missing type');\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif (!this.typeBindings.hasOwnProperty(primitiveType)) {\n\t\t\tthrow new Error('Unsupported type: ' + primitiveType);\n\t\t}\n\n\t\treturn this.typeBindings[primitiveType]!;\n\n\t}\n\n}","import TypeScriptType from './TypeScriptType';\nimport TypeScriptParameterizedType from './parameterized/TypeScriptParameterizedType';\nimport parseTypeScriptType from './parseTypeScriptType';\nimport createTypeScriptParameterizedType from './parameterized/createTypeScriptParameterizedType';\nimport createTypeScriptArrayType from './parameterized/createTypeScriptArrayType';\nimport isTypeScriptParameterizedType from './parameterized/isTypeScriptParameterizedType';\nimport createTypeScriptSimpleType from './simple/createTypeScriptSimpleType';\n\nexport {\n\tTypeScriptType,\n\tcreateTypeScriptSimpleType,\n\tTypeScriptParameterizedType,\n\tcreateTypeScriptParameterizedType,\n\tcreateTypeScriptArrayType,\n\tisTypeScriptParameterizedType,\n\tparseTypeScriptType\n};\n","import TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\nimport TypeScriptParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/TypeScriptParameterizedType';\n\nexport default function createTypeScriptArrayType(parameterType: TypeScriptType): TypeScriptParameterizedType {\n\treturn new TypeScriptArrayTypeImpl(parameterType);\n}\n\nclass TypeScriptArrayTypeImpl implements TypeScriptParameterizedType {\n\n\treadonly #parameterType: TypeScriptType;\n\n\tconstructor(parameterType: TypeScriptType) {\n\t\tthis.#parameterType = parameterType;\n\t}\n\n\tget name() {\n\t\treturn 'Array';\n\t}\n\n\tget parameterTypes() {\n\t\treturn [this.#parameterType];\n\t}\n\n\tformat(): string {\n\t\tconst formattedParameterType = this.#parameterType.format();\n\t\treturn `${formattedParameterType}[]`;\n\t}\n\n}\n","import TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\nimport TypeScriptParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/TypeScriptParameterizedType';\n\nexport default function createTypeScriptParameterizedType(name: string, parameterTypes: TypeScriptType[]): TypeScriptParameterizedType {\n\treturn new TypeScriptParameterizedTypeImpl(name, parameterTypes);\n}\n\nclass TypeScriptParameterizedTypeImpl implements TypeScriptParameterizedType {\n\n\treadonly #name: string;\n\treadonly #parameterTypes: TypeScriptType[];\n\n\tconstructor(name: string, parameterTypes: TypeScriptType[]) {\n\t\tthis.#name = name;\n\t\tthis.#parameterTypes = parameterTypes;\n\t}\n\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\tget parameterTypes() {\n\t\treturn this.#parameterTypes;\n\t}\n\n\tformat(): string {\n\t\tconst formattedParameterTypes = this.#parameterTypes.map(parameterType => parameterType.format()).join(', ');\n\t\treturn `${this.#name}<${formattedParameterTypes}>`;\n\t}\n\n}\n","import TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\nimport TypeScriptParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/TypeScriptParameterizedType';\n\nexport default function isTypeScriptParameterizedType(javaType: TypeScriptType): javaType is TypeScriptParameterizedType {\n\treturn Array.isArray((javaType as TypeScriptParameterizedType).parameterTypes);\n}\n","import TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\nimport createTypeScriptParameterizedType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/createTypeScriptParameterizedType';\nimport createTypeScriptArrayType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/parameterized/createTypeScriptArrayType';\nimport createTypeScriptSimpleType\n\tfrom '@/erdiagram/converter/oop/source-code-generator/typescript/type/simple/createTypeScriptSimpleType';\n\nconst RAW_TYPE_REGEX = /^[a-zA-Z_$][a-zA-Z_$\\d]*$/;\nconst ARRAY_TYPE_REGEX = /^(.*)\\[\\s*]\\s*$/;\n\nexport default function parseTypeScriptType(text: string): TypeScriptType {\n\ttry {\n\t\treturn parseTypeScriptTypeInternal(text);\n\t} catch (error) {\n\t\tthrow new Error('Malformed TypeScript type: ' + text);\n\t}\n}\n\nfunction parseTypeScriptTypeInternal(text: string): TypeScriptType {\n\n\tconst trimmedText = text.trim();\n\n\tif (ARRAY_TYPE_REGEX.test(trimmedText)) {\n\t\tconst [fullMatch, rawTypeText] = ARRAY_TYPE_REGEX.exec(trimmedText)!;\n\t\treturn createTypeScriptArrayType(parseTypeScriptTypeInternal(rawTypeText));\n\t}\n\n\tconst startOfParameterTypes = trimmedText.indexOf('<');\n\n\tif (startOfParameterTypes === -1) {\n\t\treturn parseTypeScriptRawType(trimmedText);\n\t}\n\n\tconst endOfParameterTypes = trimmedText.lastIndexOf('>');\n\n\tif (endOfParameterTypes === -1) {\n\t\tthrow new Error('Missing end character of parameter types (>)');\n\t}\n\n\tif (endOfParameterTypes !== trimmedText.length - 1) {\n\t\tthrow new Error('Unexpected characters found after parameter types');\n\t}\n\n\tconst rawType = parseTypeScriptRawType(trimmedText.substring(0, startOfParameterTypes));\n\n\tconst parameterTypes = splitParameterTypes(trimmedText.substring(startOfParameterTypes + 1, endOfParameterTypes))\n\t\t\t.map(parameterType => parseTypeScriptTypeInternal(parameterType));\n\n\treturn createTypeScriptParameterizedType(rawType.name, parameterTypes);\n\n}\n\nfunction parseTypeScriptRawType(text: string): TypeScriptType {\n\n\tconst trimmedText = text.trim();\n\n\tif (!RAW_TYPE_REGEX.test(trimmedText)) {\n\t\tthrow new Error(`Illegal TypeScript type format: ${text}`);\n\t}\n\n\treturn createTypeScriptSimpleType(trimmedText);\n\n}\n\nfunction splitParameterTypes(parameterTypesText: string): string[] {\n\n\tif (!parameterTypesText.includes(',')) {\n\t\treturn [parameterTypesText];\n\t}\n\n\tconst commaIndices: number[] = [];\n\n\tlet nestedLevelsCount = 0;\n\n\t[...parameterTypesText].forEach((character, index) => {\n\t\tswitch (character) {\n\t\t\tcase ',':\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tnestedLevelsCount++;\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (nestedLevelsCount === 0) {\n\t\t\t\t\tthrow new Error('Unexpected character \">\"');\n\t\t\t\t}\n\t\t\t\tnestedLevelsCount--;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst splittedParameterTypes: string[] = [];\n\tlet startIndex = 0;\n\n\tfor (const commaIndex of commaIndices) {\n\t\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex, commaIndex));\n\t\tstartIndex = commaIndex + 1;\n\t}\n\n\t// Text after the last comma\n\tsplittedParameterTypes.push(parameterTypesText.substring(startIndex));\n\n\treturn splittedParameterTypes;\n\n}\n","import TypeScriptType from '@/erdiagram/converter/oop/source-code-generator/typescript/type/TypeScriptType';\n\nexport default function createTypeScriptSimpleType(name: string): TypeScriptType {\n\treturn new TypeScriptSimpleTypeImpl(name);\n}\n\nclass TypeScriptSimpleTypeImpl implements TypeScriptType {\n\n\treadonly #name: string;\n\n\tconstructor(name: string) {\n\t\tthis.#name = name;\n\t}\n\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\tformat(): string {\n\t\treturn this.#name;\n\t}\n\n}\n","export * from './common/exports';\nexport * from './converter/exports';\nexport * from './parser/exports';\n","import {EntityRelationshipModel} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport EntityRelationshipModelParserConfig, {PartialEntityRelationshipModelParserConfig} from '@/erdiagram/parser/config/EntityRelationshipModelParserConfig';\nimport EntityRelationshipModelParseResultValidator\n\tfrom '@/erdiagram/parser/validator/EntityRelationshipModelParseResultValidator';\nimport entityRelationshipModelParserConfigManager\n\tfrom '@/erdiagram/parser/config/EntityRelationshipModelParserConfigManager';\nimport ParsedModelToPublicModelConverter from '@/erdiagram/parser/ParsedModelToPublicModelConverter';\nimport EntityRelationshipModelParserWithoutValidation\n\tfrom '@/erdiagram/parser/EntityRelationshipModelParserWithoutValidation';\n\nexport default class EntityRelationshipModelParser {\n\n\tprivate readonly config: EntityRelationshipModelParserConfig;\n\tprivate readonly entityRelationshipModelParserWithoutValidation: EntityRelationshipModelParserWithoutValidation;\n\tprivate readonly validator: EntityRelationshipModelParseResultValidator;\n\tprivate readonly parsedModelToPublicModelConverter: ParsedModelToPublicModelConverter;\n\n\tconstructor(config?: PartialEntityRelationshipModelParserConfig) {\n\t\tthis.config = entityRelationshipModelParserConfigManager.mergeWithDefaultConfig(config);\n\t\tthis.entityRelationshipModelParserWithoutValidation = new EntityRelationshipModelParserWithoutValidation();\n\t\tthis.validator = new EntityRelationshipModelParseResultValidator(this.config.allowUnknownEntities);\n\t\tthis.parsedModelToPublicModelConverter = new ParsedModelToPublicModelConverter();\n\t}\n\n\tpublic parseModel(code: string): EntityRelationshipModel {\n\n\t\tconst parseResult = this.entityRelationshipModelParserWithoutValidation.parseModelWithoutValidation(code);\n\n\t\tthis.validator.validateParseResult(parseResult);\n\n\t\treturn this.parsedModelToPublicModelConverter.convertParsedModelToPublicModel(parseResult.model);\n\n\t}\n\n}\n","import {\n\tEntityRelationshipModelParseResult,\n\tParsedStatementResult\n} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\nimport EntityRelationshipModelLineParser from '@/erdiagram/parser/line/EntityRelationshipModelLineParser';\nimport ParseState from '@/erdiagram/parser/types/ParseState';\n\nconst LINE_SEPARATOR = '\\n';\n\nexport default class EntityRelationshipModelParserWithoutValidation {\n\n\tprivate readonly lineParser: EntityRelationshipModelLineParser;\n\n\tconstructor() {\n\t\tthis.lineParser = new EntityRelationshipModelLineParser();\n\t}\n\n\tpublic parseModelWithoutValidation(code: string): EntityRelationshipModelParseResult {\n\n\t\tconst state = this.createInitialParseState();\n\n\t\tthis.parseCode(code, state);\n\n\t\treturn this.mapParseStateToParseResult(state);\n\n\t}\n\n\tprivate createInitialParseState(): ParseState {\n\t\treturn {\n\t\t\tentities: [],\n\t\t\trelationships: [],\n\t\t\tentityBeingParsed: null,\n\t\t\tstatementResultToLineMap: new Map<ParsedStatementResult, number>()\n\t\t};\n\t}\n\n\tprivate parseCode(code: string, state: ParseState) {\n\t\tconst lines = code.split(LINE_SEPARATOR);\n\t\tthis.lineParser.parseLines(lines, state);\n\t}\n\n\tprivate mapParseStateToParseResult(state: ParseState): EntityRelationshipModelParseResult {\n\n\t\tconst {\n\t\t\tentities,\n\t\t\trelationships,\n\t\t\tstatementResultToLineMap\n\t\t} = state;\n\n\t\treturn {\n\t\t\tmodel: {\n\t\t\t\tentities,\n\t\t\t\trelationships\n\t\t\t},\n\t\t\tstatementResultToLineMap\n\t\t};\n\n\t}\n\n}\n","import {\n\tEntityDescriptor,\n\tEntityPropertyDescriptor,\n\tEntityPropertyType,\n\tEntityRelationshipModel\n} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tParsedEntityDescriptor,\n\tParsedEntityRelationshipModel\n} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\n\nexport default class ParsedModelToPublicModelConverter {\n\n\tpublic convertParsedModelToPublicModel(parsedModel: ParsedEntityRelationshipModel): EntityRelationshipModel {\n\t\treturn {\n\t\t\tentities: parsedModel.entities.map(parsedEntity => this.convertParsedEntityToPublicEntity(parsedEntity)),\n\t\t\trelationships: parsedModel.relationships\n\t\t};\n\t}\n\n\tprivate convertParsedEntityToPublicEntity(parsedEntity: ParsedEntityDescriptor): EntityDescriptor {\n\n\t\tconst identityProperty = this.getEntityIdentityProperty(parsedEntity);\n\n\t\treturn {\n\t\t\tname: parsedEntity.name,\n\t\t\tidentityPropertyName: identityProperty?.name,\n\t\t\tproperties: parsedEntity.properties.filter(property => property != identityProperty)\n\t\t};\n\n\t}\n\n\tprivate getEntityIdentityProperty(parsedEntity: ParsedEntityDescriptor): EntityPropertyDescriptor | undefined {\n\t\treturn parsedEntity.properties.find(property => property.type === EntityPropertyType.IDENTITY);\n\t}\n\n}\n","import AbstractComponentConfigManager from '@/erdiagram/common/config/AbstractComponentConfigManager';\nimport EntityRelationshipModelParserConfig, {PartialEntityRelationshipModelParserConfig} from '@/erdiagram/parser/config/EntityRelationshipModelParserConfig';\n\nexport class EntityRelationshipModelParserConfigManager\n\t\textends AbstractComponentConfigManager<EntityRelationshipModelParserConfig, PartialEntityRelationshipModelParserConfig> {\n\n\tgetDefaultConfig(): EntityRelationshipModelParserConfig {\n\t\treturn {\n\t\t\tallowUnknownEntities: false\n\t\t};\n\t}\n\n\tmergeConfigs(fullConfig: EntityRelationshipModelParserConfig, partialConfig?: PartialEntityRelationshipModelParserConfig): EntityRelationshipModelParserConfig {\n\t\treturn {\n\t\t\t...fullConfig,\n\t\t\t...partialConfig\n\t\t};\n\t}\n\n}\n\nconst entityRelationshipModelParserConfigManager = new EntityRelationshipModelParserConfigManager();\nexport default entityRelationshipModelParserConfigManager;\n","import EntityRelationshipModelParserConfig from './EntityRelationshipModelParserConfig';\nimport entityRelationshipModelParserConfigManager, {EntityRelationshipModelParserConfigManager} from './EntityRelationshipModelParserConfigManager';\n\nexport {\n\tEntityRelationshipModelParserConfig,\n\tEntityRelationshipModelParserConfigManager,\n\tentityRelationshipModelParserConfigManager\n};\n","import EntityRelationshipModelParser from './EntityRelationshipModelParser';\n\nexport * from './config/exports';\nexport * from './types/exports';\n\nexport {\n\tEntityRelationshipModelParser\n};\n","import {\n\tparseEntityNameStatement,\n\tparseEntityPropertyStatement,\n\tparseRelationshipStatement\n} from '@/erdiagram/parser/statement/statement-types-parse-functions';\nimport {guessStatementType, StatementType} from '@/erdiagram/parser/statement/statement-type-guesser';\nimport {ParsedEntityDescriptor} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\nimport ParseState from '@/erdiagram/parser/types/ParseState';\nimport EntityRelationshipModelLineParserErrorHandler\n\tfrom '@/erdiagram/parser/line/EntityRelationshipModelLineParserErrorHandler';\nimport ERDiagramSyntaxError from '@/erdiagram/parser/types/error/ERDiagramSyntaxError';\n\nexport default class EntityRelationshipModelLineParser {\n\n\tprivate readonly errorHandler: EntityRelationshipModelLineParserErrorHandler;\n\n\tconstructor() {\n\t\tthis.errorHandler = new EntityRelationshipModelLineParserErrorHandler();\n\t}\n\n\tpublic parseLines(lines: string[], state: ParseState) {\n\t\tlines.forEach((line, lineIndex) => {\n\t\t\ttry {\n\t\t\t\tthis.parseLine(line, lineIndex, state);\n\t\t\t} catch (error) {\n\t\t\t\tthis.errorHandler.handleLineError(error, lineIndex);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate parseLine(line: string, lineIndex: number, state: ParseState) {\n\n\t\tconst statementType = guessStatementType(line);\n\n\t\tswitch (statementType) {\n\t\t\tcase StatementType.ENTITY_NAME:\n\t\t\t\tthis.parseEntityNameLine(line, state, lineIndex);\n\t\t\t\tbreak;\n\t\t\tcase StatementType.ENTITY_PROPERTY:\n\t\t\t\tthis.parseEntityPropertyLine(state, line, lineIndex);\n\t\t\t\tbreak;\n\t\t\tcase StatementType.RELATIONSHIP:\n\t\t\t\tthis.parseRelationshipLine(line, state, lineIndex);\n\t\t\t\tbreak;\n\t\t\tcase StatementType.BLANK_LINE:\n\t\t\t\t// Ignore\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new ERDiagramSyntaxError(`Unknown statement type`);\n\t\t}\n\n\t}\n\n\tprivate parseEntityNameLine(line: string, state: ParseState, lineIndex: number) {\n\n\t\tconst entityDescriptor: ParsedEntityDescriptor = {\n\t\t\tname: parseEntityNameStatement(line),\n\t\t\tproperties: []\n\t\t};\n\n\t\tstate.entities.push(entityDescriptor);\n\t\tstate.entityBeingParsed = entityDescriptor;\n\t\tstate.statementResultToLineMap.set(entityDescriptor, lineIndex);\n\n\t}\n\n\tprivate parseEntityPropertyLine(state: ParseState, line: string, lineIndex: number) {\n\n\t\tif (state.entityBeingParsed == null) {\n\t\t\tthrow new ERDiagramSyntaxError('Unexpected entity property statement');\n\t\t}\n\n\t\tconst entityPropertyDescriptor = parseEntityPropertyStatement(line);\n\n\t\tstate.entityBeingParsed.properties.push(entityPropertyDescriptor);\n\t\tstate.statementResultToLineMap.set(entityPropertyDescriptor, lineIndex);\n\n\t}\n\n\tprivate parseRelationshipLine(line: string, state: ParseState, lineIndex: number) {\n\n\t\tconst relationshipDescriptor = parseRelationshipStatement(line);\n\n\t\tstate.relationships.push(relationshipDescriptor);\n\t\tstate.entityBeingParsed = null;\n\t\tstate.statementResultToLineMap.set(relationshipDescriptor, lineIndex);\n\n\t}\n\n}\n","import ERDiagramError from '@/erdiagram/parser/types/error/ERDiagramError';\nimport ERDiagramParseLineError from '@/erdiagram/parser/types/error/ERDiagramParseLineError';\n\nexport default class EntityRelationshipModelLineParserErrorHandler {\n\n\tpublic handleLineError(error: Error, lineIndex: number): never {\n\n\t\t/* istanbul ignore else */\n\t\tif (error instanceof ERDiagramError) {\n\t\t\tthrow new ERDiagramParseLineError(error, lineIndex);\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tthrow error;\n\n\t}\n\n}\n","import {\n\tENTITY_NAME_LINE_REGEX,\n\tENTITY_PROPERTY_LINE_REGEX,\n\tRELATIONSHIP_LINE_REGEX\n} from '@/erdiagram/parser/statement/statement-types-regexes';\n\nexport enum StatementType {\n\tENTITY_NAME = 'entityName',\n\tENTITY_PROPERTY = 'entityProperty',\n\tRELATIONSHIP = 'relationship',\n\tBLANK_LINE = 'blankLine',\n\tUNKNOWN = 'unknown'\n}\n\nexport function guessStatementType(line: string): StatementType {\n\tif (ENTITY_NAME_LINE_REGEX.test(line)) {\n\t\treturn StatementType.ENTITY_NAME;\n\t} else if (ENTITY_PROPERTY_LINE_REGEX.test(line)) {\n\t\treturn StatementType.ENTITY_PROPERTY;\n\t} else if (RELATIONSHIP_LINE_REGEX.test(line)) {\n\t\treturn StatementType.RELATIONSHIP;\n\t} else if (isBlankLine(line)) {\n\t\treturn StatementType.BLANK_LINE;\n\t} else {\n\t\treturn StatementType.UNKNOWN;\n\t}\n}\n\nfunction isBlankLine(line: string) {\n\treturn /^\\s*(#.*)?$/.test(line);\n}\n","import {capitalizeWord, uncapitalizeWord} from '@/erdiagram/util/string-utils';\nimport {\n\tENTITY_NAME_LINE_REGEX,\n\tENTITY_PROPERTY_LINE_REGEX,\n\tRELATIONSHIP_LINE_REGEX\n} from '@/erdiagram/parser/statement/statement-types-regexes';\nimport {Cardinality, Direction, EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tParsedEntityPropertyDescriptor,\n\tParsedRelationshipDescriptor\n} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\nimport ERDiagramSyntaxError from '@/erdiagram/parser/types/error/ERDiagramSyntaxError';\nimport ERDiagramUnknownTypeError from '@/erdiagram/parser/types/error/ERDiagramUnknownTypeError';\n\nexport function parseEntityNameStatement(line: string): string {\n\n\tconst result = ENTITY_NAME_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new ERDiagramSyntaxError('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tentityName\n\t] = result;\n\n\treturn capitalizeWord(entityName);\n\n}\n\nexport function parseEntityPropertyStatement(line: string): ParsedEntityPropertyDescriptor {\n\n\tconst result = ENTITY_PROPERTY_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new ERDiagramSyntaxError('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tname,\n\t\tmodifiers,\n\t\ttype,\n\t\tlength\n\t] = result;\n\n\tconst mappedType = type.toLowerCase() as EntityPropertyType;\n\n\tif (!Object.values(EntityPropertyType).includes(mappedType)) {\n\t\tthrow new ERDiagramUnknownTypeError('Unknown type: ' + type);\n\t}\n\n\treturn {\n\t\tname: uncapitalizeWord(name),\n\t\toptional: modifiers.includes('?'),\n\t\tunique: modifiers.includes('!'),\n\t\ttype: mappedType,\n\t\tlength: parsePropertyLength(length)\n\t};\n\n}\n\nfunction parsePropertyLength(length: string): number[] {\n\n\tif (!length) {\n\t\treturn [];\n\t}\n\n\treturn length.split(',')\n\t\t\t.map(lengthNumber => parseInt(lengthNumber.trim(), 10));\n\n}\n\nexport function parseRelationshipStatement(line: string): ParsedRelationshipDescriptor {\n\n\tconst result = RELATIONSHIP_LINE_REGEX.exec(line);\n\n\tif (result == null) {\n\t\tthrow new ERDiagramSyntaxError('Syntax error');\n\t}\n\n\tconst [\n\t\tfullMatch,\n\t\tleftEntity,\n\t\tleftEntityAlias = leftEntity,\n\t\tleftCardinalityCharacter,\n\t\tdirection,\n\t\trightCardinalityCharacter,\n\t\trightEntity,\n\t\trightEntityAlias = rightEntity,\n\t\trelationshipName\n\t] = result;\n\n\treturn {\n\t\trelationshipName: relationshipName ? capitalizeWord(relationshipName) : undefined,\n\t\tdirection: direction === '->' ? Direction.LEFT_TO_RIGHT : (direction === '<-' ? Direction.RIGHT_TO_LEFT : Direction.BIDIRECTIONAL),\n\t\tleftMember: {\n\t\t\tentity: capitalizeWord(leftEntity),\n\t\t\tentityAlias: uncapitalizeWord(leftEntityAlias),\n\t\t\tcardinality: parseRelationshipMemberCardinality(leftCardinalityCharacter)\n\t\t},\n\t\trightMember: {\n\t\t\tentity: capitalizeWord(rightEntity),\n\t\t\tentityAlias: uncapitalizeWord(rightEntityAlias),\n\t\t\tcardinality: parseRelationshipMemberCardinality(rightCardinalityCharacter)\n\t\t}\n\t};\n\n}\n\nfunction parseRelationshipMemberCardinality(leftCardinalityCharacter: string) {\n\tswitch (leftCardinalityCharacter) {\n\t\tcase '*':\n\t\t\treturn Cardinality.MANY;\n\t\tcase '?':\n\t\t\treturn Cardinality.ZERO_OR_ONE;\n\t\tdefault:\n\t\t\treturn Cardinality.ONE;\n\t}\n}\n","import {joinRegExps} from '@/erdiagram/util/regex-utils';\n\nconst IDENTITY_REGEX = /[a-zA-Z_][a-zA-Z_0-9]*/;\nconst OPTIONAL_TRAILING_SPACES_AND_COMMENT = /\\s*(#.*)?$/;\n\n// Entity name\n\nexport const ENTITY_NAME_LINE_REGEX = new RegExp(`^(${IDENTITY_REGEX.source})${OPTIONAL_TRAILING_SPACES_AND_COMMENT.source}`);\n\n// Entity property\n\nconst PROPERTY_NAME_REGEX = new RegExp(`(${IDENTITY_REGEX.source})`);\nconst PROPERTY_MODIFIERS_REGEX = new RegExp(`([?!]*)`);\n\nconst PROPERTY_TYPE_NAME_REGEX = new RegExp(`(${IDENTITY_REGEX.source})`);\nconst PROPERTY_TYPE_LENGTH_REGEX = new RegExp(`(?:\\\\((\\\\s*\\\\d+\\\\s*(?:,\\\\s*\\\\d+\\\\s*)*)\\\\))?`);\n\nconst ENTITY_PROPERTY_REGEX = joinRegExps(PROPERTY_NAME_REGEX, PROPERTY_MODIFIERS_REGEX, /\\s+/, PROPERTY_TYPE_NAME_REGEX, PROPERTY_TYPE_LENGTH_REGEX);\n\nexport const ENTITY_PROPERTY_LINE_REGEX = new RegExp(`^\\\\s+${ENTITY_PROPERTY_REGEX.source}${OPTIONAL_TRAILING_SPACES_AND_COMMENT.source}`);\n\n// Relationship\n\nconst RELATIONSHIP_DIRECTION_REGEX = /(<-|->|<->)/;\nconst RELATIONSHIP_CARDINALITY_REGEX = /([?1*])?/;\nconst DIRECTION_AND_CARDINALITY_REGEX = joinRegExps(RELATIONSHIP_CARDINALITY_REGEX, RELATIONSHIP_DIRECTION_REGEX, RELATIONSHIP_CARDINALITY_REGEX);\n\nconst ENTITY_AND_ALIAS_REGEX = new RegExp(`(${IDENTITY_REGEX.source})(?:\\\\s+(${IDENTITY_REGEX.source}))?`);\n\nexport const RELATIONSHIP_LINE_REGEX = new RegExp(`^${ENTITY_AND_ALIAS_REGEX.source}\\\\s*?${DIRECTION_AND_CARDINALITY_REGEX.source}\\\\s*?${ENTITY_AND_ALIAS_REGEX.source}(?:\\\\s+\\\\(\\\\s*(${IDENTITY_REGEX.source})\\\\s*\\\\))?${OPTIONAL_TRAILING_SPACES_AND_COMMENT.source}`);\n","export interface EntityRelationshipModel {\n\tentities: EntityDescriptor[];\n\trelationships: RelationshipDescriptor[];\n}\n\nexport interface EntityDescriptor {\n\tname: string;\n\tidentityPropertyName?: string;\n\tproperties: EntityPropertyDescriptor[];\n}\n\nexport interface EntityPropertyDescriptor {\n\tname: string;\n\toptional: boolean;\n\tunique: boolean;\n\ttype: EntityPropertyType;\n\tlength: number[];\n}\n\nexport enum EntityPropertyType {\n\tIDENTITY = 'identity',\n\tBOOLEAN = 'bool',\n\tSHORT = 'short',\n\tINT = 'int',\n\tLONG = 'long',\n\tDECIMAL = 'decimal',\n\tTEXT = 'text',\n\tDATE = 'date',\n\tTIME = 'time',\n\tDATETIME = 'datetime',\n\tBLOB = 'blob'\n}\n\nexport interface RelationshipDescriptor {\n\tleftMember: RelationshipMember;\n\trightMember: RelationshipMember;\n\tdirection: Direction;\n\trelationshipName?: string;\n}\n\nexport interface RelationshipMember {\n\tentity: string;\n\tentityAlias: string;\n\tcardinality: Cardinality;\n}\n\nexport enum Cardinality {\n\tMANY = 'many',\n\tONE = 'one',\n\tZERO_OR_ONE = 'zero_or_one'\n}\n\nexport enum Direction {\n\tLEFT_TO_RIGHT = 'left_to_right',\n\tRIGHT_TO_LEFT = 'right_to_left',\n\tBIDIRECTIONAL = 'bidirectional'\n}\n","import ERDiagramEntityError from '@/erdiagram/parser/types/error/ERDiagramEntityError';\n\nexport default class ERDiagramDuplicatedEntityNameError extends ERDiagramEntityError {\n\n}\n","import ERDiagramEntityPropertyError from '@/erdiagram/parser/types/error/ERDiagramEntityPropertyError';\n\nexport default class ERDiagramDuplicatedPropertyNameError extends ERDiagramEntityPropertyError {\n\n}\n","import ERDiagramError from '@/erdiagram/parser/types/error/ERDiagramError';\nimport {ParsedEntityDescriptor} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\n\nexport default class ERDiagramEntityError extends ERDiagramError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tpublic readonly entity: ParsedEntityDescriptor\n\t) {\n\t\tsuper(message);\n\t}\n\n}\n","import ERDiagramEntityError from '@/erdiagram/parser/types/error/ERDiagramEntityError';\nimport {\n\tParsedEntityDescriptor,\n\tParsedEntityPropertyDescriptor\n} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\n\nexport default class ERDiagramEntityPropertyError extends ERDiagramEntityError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tentity: ParsedEntityDescriptor,\n\t\t\tpublic readonly property: ParsedEntityPropertyDescriptor\n\t) {\n\t\tsuper(message, entity);\n\t}\n\n}\n","export default class ERDiagramError extends Error {\n\n}\n","import ERDiagramEntityPropertyError from '@/erdiagram/parser/types/error/ERDiagramEntityPropertyError';\n\nexport default class ERDiagramInvalidIdentityDefinitionError extends ERDiagramEntityPropertyError {\n\n}\n","import ERDiagramEntityPropertyError from '@/erdiagram/parser/types/error/ERDiagramEntityPropertyError';\nimport {\n\tParsedEntityDescriptor,\n\tParsedEntityPropertyDescriptor\n} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\n\nexport default class ERDiagramMultipleIdentitiesError extends ERDiagramEntityPropertyError {\n\n\tpublic readonly identityProperties: ParsedEntityPropertyDescriptor[];\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tentity: ParsedEntityDescriptor,\n\t\t\tidentityProperties: ParsedEntityPropertyDescriptor[]\n\t) {\n\t\tconst firstDuplicateApparition = identityProperties[1];\n\t\tsuper(message, entity, firstDuplicateApparition);\n\t\tthis.identityProperties = identityProperties;\n\t}\n\n}\n","import ERDiagramError from '@/erdiagram/parser/types/error/ERDiagramError';\n\nexport default class ERDiagramParseLineError extends ERDiagramError {\n\n\tconstructor(\n\t\t\tprivate readonly cause: ERDiagramError,\n\t\t\tpublic readonly lineIndex: number\n\t) {\n\t\tsuper(cause.message);\n\t}\n\n\tget lineNumber() {\n\t\treturn this.lineIndex + 1;\n\t}\n\n}\n","import ERDiagramError from '@/erdiagram/parser/types/error/ERDiagramError';\nimport {ParsedRelationshipDescriptor} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\n\nexport default class ERDiagramRelationshipError extends ERDiagramError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\tpublic readonly relationship: ParsedRelationshipDescriptor\n\t) {\n\t\tsuper(message);\n\t}\n\n}\n","import ERDiagramError from '@/erdiagram/parser/types/error/ERDiagramError';\n\nexport default class ERDiagramSyntaxError extends ERDiagramError {\n\n}\n","import ERDiagramRelationshipError from '@/erdiagram/parser/types/error/ERDiagramRelationshipError';\nimport {ParsedRelationshipDescriptor} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\nimport {RelationshipMember} from '@/erdiagram/parser/types/entity-relationship-model-types';\n\nexport default class ERDiagramUnknownEntityError extends ERDiagramRelationshipError {\n\n\tconstructor(\n\t\t\tmessage: string,\n\t\t\trelationship: ParsedRelationshipDescriptor,\n\t\t\tpublic readonly member: RelationshipMember\n\t) {\n\t\tsuper(message, relationship);\n\t}\n\n}\n","import ERDiagramError from '@/erdiagram/parser/types/error/ERDiagramError';\n\nexport default class ERDiagramUnknownTypeError extends ERDiagramError {\n\n}\n","import ERDiagramError from './ERDiagramError';\nimport ERDiagramParseLineError from './ERDiagramParseLineError';\nimport ERDiagramSyntaxError from './ERDiagramSyntaxError';\nimport ERDiagramUnknownTypeError from './ERDiagramUnknownTypeError';\nimport ERDiagramRelationshipError from './ERDiagramRelationshipError';\nimport ERDiagramUnknownEntityError from './ERDiagramUnknownEntityError';\nimport ERDiagramEntityError from './ERDiagramEntityError';\nimport ERDiagramDuplicatedEntityNameError from './ERDiagramDuplicatedEntityNameError';\nimport ERDiagramEntityPropertyError from './ERDiagramEntityPropertyError';\nimport ERDiagramMultipleIdentitiesError from './ERDiagramMultipleIdentitiesError';\nimport ERDiagramInvalidIdentityDefinitionError from './ERDiagramInvalidIdentityDefinitionError';\nimport ERDiagramDuplicatedPropertyNameError from './ERDiagramDuplicatedPropertyNameError';\n\nexport {\n\tERDiagramError,\n\tERDiagramParseLineError,\n\tERDiagramSyntaxError,\n\tERDiagramUnknownTypeError,\n\tERDiagramRelationshipError,\n\tERDiagramUnknownEntityError,\n\tERDiagramEntityError,\n\tERDiagramDuplicatedEntityNameError,\n\tERDiagramEntityPropertyError,\n\tERDiagramMultipleIdentitiesError,\n\tERDiagramInvalidIdentityDefinitionError,\n\tERDiagramDuplicatedPropertyNameError\n};\n","export * from './entity-relationship-model-types';\nexport * from './error/exports';\n","import {EntityPropertyType} from '@/erdiagram/parser/types/entity-relationship-model-types';\nimport {\n\tEntityRelationshipModelParseResult,\n\tParsedEntityRelationshipModel\n} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\nimport EntityRelationshipModelParseResultValidatorErrorHandler\n\tfrom '@/erdiagram/parser/validator/EntityRelationshipModelParseResultValidatorErrorHandler';\nimport ERDiagramUnknownEntityError from '@/erdiagram/parser/types/error/ERDiagramUnknownEntityError';\nimport ERDiagramDuplicatedEntityNameError from '@/erdiagram/parser/types/error/ERDiagramDuplicatedEntityNameError';\nimport ERDiagramMultipleIdentitiesError from '@/erdiagram/parser/types/error/ERDiagramMultipleIdentitiesError';\nimport ERDiagramInvalidIdentityDefinitionError\n\tfrom '@/erdiagram/parser/types/error/ERDiagramInvalidIdentityDefinitionError';\nimport ERDiagramDuplicatedPropertyNameError from '@/erdiagram/parser/types/error/ERDiagramDuplicatedPropertyNameError';\n\nexport default class EntityRelationshipModelParseResultValidator {\n\n\tprivate readonly errorHandler: EntityRelationshipModelParseResultValidatorErrorHandler;\n\n\tconstructor(\n\t\t\tprivate readonly allowUnknownEntities: boolean\n\t) {\n\t\tthis.errorHandler = new EntityRelationshipModelParseResultValidatorErrorHandler();\n\t}\n\n\tpublic validateParseResult(parseResult: EntityRelationshipModelParseResult) {\n\n\t\tconst {\n\t\t\tmodel,\n\t\t\tstatementResultToLineMap\n\t\t} = parseResult;\n\n\t\ttry {\n\t\t\tthis.validateParsedModel(model);\n\t\t} catch (error) {\n\t\t\tthis.errorHandler.handleValidationError(error, statementResultToLineMap);\n\t\t}\n\n\t}\n\n\tprivate validateParsedModel(model: ParsedEntityRelationshipModel) {\n\n\t\tthis.validateNonRepeatedEntityNames(model);\n\t\tthis.validateNonRepeatedPropertyNames(model);\n\t\tthis.validateIdentityProperties(model);\n\n\t\tif (!this.allowUnknownEntities) {\n\t\t\tthis.validateRelationshipsHaveNoUnknownEntities(model);\n\t\t}\n\n\t}\n\n\tprivate validateNonRepeatedEntityNames(model: ParsedEntityRelationshipModel) {\n\n\t\tconst entityNames = new Set<string>();\n\n\t\tmodel.entities.forEach(entity => {\n\n\t\t\tconst entityName = entity.name;\n\n\t\t\tif (entityNames.has(entityName)) {\n\t\t\t\tthrow new ERDiagramDuplicatedEntityNameError(\n\t\t\t\t\t\t`Repeated entity \"${entityName}\"`,\n\t\t\t\t\t\tentity\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tentityNames.add(entityName);\n\n\t\t});\n\n\t}\n\n\tprivate validateNonRepeatedPropertyNames(model: ParsedEntityRelationshipModel) {\n\n\t\tmodel.entities.forEach(entity => {\n\n\t\t\tconst entityPropertyNames = new Set<string>();\n\n\t\t\tentity.properties.forEach(property => {\n\n\t\t\t\tconst propertyName = property.name;\n\n\t\t\t\tif (entityPropertyNames.has(propertyName)) {\n\t\t\t\t\tthrow new ERDiagramDuplicatedPropertyNameError(\n\t\t\t\t\t\t\t`Repeated property \"${propertyName}\" in \"${entity.name}\" entity`,\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tproperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tentityPropertyNames.add(propertyName);\n\n\t\t\t});\n\n\t\t});\n\n\t}\n\n\tprivate validateIdentityProperties(model: ParsedEntityRelationshipModel) {\n\n\t\tmodel.entities.forEach(entity => {\n\n\t\t\tconst identityProperties = entity.properties.filter(property => property.type === EntityPropertyType.IDENTITY);\n\n\t\t\tif (identityProperties.length > 1) {\n\t\t\t\tthrow new ERDiagramMultipleIdentitiesError(\n\t\t\t\t\t\t`Entity ${entity.name} has more than one identity property`,\n\t\t\t\t\t\tentity,\n\t\t\t\t\t\tidentityProperties\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst identityProperty = identityProperties[0];\n\n\t\t\tif (identityProperty != null) {\n\n\t\t\t\tif (identityProperty.optional) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentityDefinitionError(\n\t\t\t\t\t\t\t'Optional modifier (?) cannot be used in identity properties',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentityProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (identityProperty.unique) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentityDefinitionError(\n\t\t\t\t\t\t\t'Unique modifier (!) cannot be used in identity properties',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentityProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (identityProperty.length.length > 0) {\n\t\t\t\t\tthrow new ERDiagramInvalidIdentityDefinitionError(\n\t\t\t\t\t\t\t'Identity properties cannot have a length',\n\t\t\t\t\t\t\tentity,\n\t\t\t\t\t\t\tidentityProperty\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\tprivate validateRelationshipsHaveNoUnknownEntities(model: ParsedEntityRelationshipModel) {\n\n\t\tconst entityNames = model.entities.map(e => e.name);\n\n\t\tmodel.relationships.forEach(relationship => {\n\t\t\tif (!entityNames.includes(relationship.leftMember.entity)) {\n\t\t\t\tthrow new ERDiagramUnknownEntityError(\n\t\t\t\t\t\t`Uknown entity \"${relationship.leftMember.entity}\" in relationship's left member`,\n\t\t\t\t\t\trelationship,\n\t\t\t\t\t\trelationship.leftMember\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!entityNames.includes(relationship.rightMember.entity)) {\n\t\t\t\tthrow new ERDiagramUnknownEntityError(\n\t\t\t\t\t\t`Uknown entity \"${relationship.rightMember.entity}\" in relationship's right member`,\n\t\t\t\t\t\trelationship,\n\t\t\t\t\t\trelationship.rightMember\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t}\n\n}\n","import {ParsedStatementResult} from '@/erdiagram/parser/types/parsed-entity-relationship-model-types';\nimport ERDiagramParseLineError from '@/erdiagram/parser/types/error/ERDiagramParseLineError';\nimport ERDiagramRelationshipError from '@/erdiagram/parser/types/error/ERDiagramRelationshipError';\nimport ERDiagramEntityError from '@/erdiagram/parser/types/error/ERDiagramEntityError';\nimport ERDiagramEntityPropertyError from '@/erdiagram/parser/types/error/ERDiagramEntityPropertyError';\n\nexport default class EntityRelationshipModelParseResultValidatorErrorHandler {\n\n\tpublic handleValidationError(error: Error, statementResultToLineMap: Map<ParsedStatementResult, number>): never {\n\n\t\tif (error instanceof ERDiagramEntityPropertyError) {\n\t\t\tthrow new ERDiagramParseLineError(error, statementResultToLineMap.get(error.property)!);\n\t\t}\n\n\t\tif (error instanceof ERDiagramEntityError) {\n\t\t\tthrow new ERDiagramParseLineError(error, statementResultToLineMap.get(error.entity)!);\n\t\t}\n\n\t\t/* istanbul ignore else */\n\t\tif (error instanceof ERDiagramRelationshipError) {\n\t\t\tthrow new ERDiagramParseLineError(error, statementResultToLineMap.get(error.relationship)!);\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tthrow error;\n\n\t}\n\n}\n","export function removeDuplicates<T>(array: T[]): T[] {\n\treturn [...new Set<T>(array)];\n}\n\nexport function removeNullableValues<T>(array: (T | null | undefined)[]): T[] {\n\treturn array.filter(e => e != null) as T[];\n}\n","const DEFAULT_INDENT = '    ';\n\nexport function indentLines(lines: string[], indent?: string | number) {\n\treturn lines.map(line => indentLineUsingIndentText(line, generateIndentText(indent)));\n}\n\nexport function indentLine(line: string, indent?: string | number) {\n\treturn indentLineUsingIndentText(line, generateIndentText(indent));\n}\n\nfunction generateIndentText(indent: string | number = DEFAULT_INDENT): string {\n\n\tif (typeof indent !== 'number') {\n\t\treturn indent;\n\t}\n\n\treturn ''.padEnd(indent, ' ');\n\n}\n\nfunction indentLineUsingIndentText(line: string, indentText: string) {\n\tif (line.trim().length === 0) {\n\t\treturn line;\n\t} else {\n\t\treturn indentText + line;\n\t}\n}\n","export function classifyBy<T, K, V>(objects: T[], keyMapper: (object: T) => K, valueMapper: (object: T) => V): Map<K, V> {\n\n\tconst map = new Map<K, V>();\n\n\tobjects.forEach(object => {\n\n\t\tconst key = keyMapper(object);\n\t\tconst value = valueMapper(object);\n\n\t\tmap.set(key, value);\n\n\t});\n\n\treturn map;\n\n}\n","export function escapeRegExpSpecialChars(text: string): string {\n\treturn text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function joinRegExps(...regexes: (RegExp | string)[]): RegExp {\n\n\tconst source = regexes\n\t\t\t.map((e): string => {\n\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\treturn escapeRegExpSpecialChars(e);\n\t\t\t\t} else {\n\t\t\t\t\treturn e.source;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.join('');\n\n\treturn new RegExp(source);\n\n}\n","export function capitalizeWord(text: string) {\n\treturn text[0].toUpperCase() + text.substring(1);\n}\n\nexport function uncapitalizeWord(text: string) {\n\treturn text[0].toLowerCase() + text.substring(1);\n}\n\nexport function removeNonEmptyStrings(strings: string[]) {\n\treturn strings.filter(chunk => chunk.length > 0);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as ERDiagram from './erdiagram/exports';\n\nexport default ERDiagram;\n"],"sourceRoot":""}